dnl initialization
AC_INIT(main.c)
PACKAGE=windowmatrixd
VERSION=1.3.3
AM_INIT_AUTOMAKE($PACKAGE,$VERSION)

dnl bmc_pio buildtree
AC_CACHE_CHECK(for bmc_pio path,
            ac_cv_use_bmc_pio,
	    AC_ARG_WITH(bmc-pio,
		[  --with-bmc-pio=DIR      Path to bmc_pio buildtree],
		ac_cv_use_bmc_pio="${withval}", ac_cv_use_bmc_pio="${srcdir}/bmc_pio"))

dnl setting some variables
CFLAGS="-D__USE_GNU -D_GNU_SOURCE ${CFLAGS}"
CPPFLAGS="-I${ac_cv_use_bmc_pio} ${CPPFLAGS}"
ISODATE=`date +%Y-%m-%d`

dnl standard checks
AC_CANONICAL_HOST
AC_PROG_INSTALL
AC_PROG_CC
AC_HEADER_STDC

dnl header checks
AC_CHECK_HEADERS(unistd.h, ,
  AC_MSG_ERROR([unistd.h not found -- get a real OS.]))
AC_CHECK_HEADERS(bmc_pio.h, ,
  AC_MSG_ERROR([bmc_pio.h not found -- did you specify the bmc-pio buildtree?]))
AC_CHECK_HEADERS(syslog.h, ,
  AC_MSG_ERROR([syslog.h not found -- We can't live without it.]))
AC_CHECK_HEADERS(libgen.h, ,
  AC_MSG_ERROR([libgen.h not found -- We are lousy coders and exit now.]))
AC_CHECK_HEADERS(sys/time.h, ,
  AC_MSG_ERROR([sys/time.h not found -- We are lousy coders and exit now.]))
AC_CHECK_HEADERS(getopt.h, ,
  AC_MSG_ERROR([getopt.h not found -- We are lousy coders and exit now.]))

dnl function checks
AC_CHECK_FUNCS([asprintf], ,
  AC_MSG_ERROR([asprintf() not found -- get a real libc.]))
AC_CHECK_FUNCS([vsnprintf], ,
  AC_MSG_ERROR([vsnprintf() not found -- get a real libc.]))
AC_CHECK_FUNCS([vsyslog], ,
  AC_MSG_ERROR([vsyslog() not found -- get a real libc.]))
AC_CHECK_FUNCS([basename], ,
  AC_MSG_ERROR([basename() not found -- get a real libc.]))

dnl now we can add our compiler-warnings
CFLAGS="-Wall -Wstrict-prototypes -Wno-trigraphs -Werror ${CFLAGS}"

dnl substitutions
AC_SUBST(ISODATE)
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

dnl write makefiles
AC_OUTPUT([Makefile])
