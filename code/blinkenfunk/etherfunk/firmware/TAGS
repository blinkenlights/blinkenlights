
application/BasicWEB.c,440
#define webMAX_PAGE_SIZE	webMAX_PAGE_SIZE88,3216
#define webHTTP_OK	webHTTP_OK91,3276
#define webHTTP_PORT	webHTTP_PORT94,3384
#define webSHORT_DELAY	webSHORT_DELAY97,3442
#define webHTML_START webHTML_START100,3544
#define webHTML_END webHTML_END107,3714
vProcessConnection (struct netconn *pxNetCon)vProcessConnection127,4279
vlwIPInit (void)vlwIPInit186,6028
vBasicWEBServer (void *pvParameters)vBasicWEBServer201,6290

application/main.c,963
#define mainQUEUE_POLL_PRIORITY	mainQUEUE_POLL_PRIORITY115,4422
#define mainCHECK_TASK_PRIORITY	mainCHECK_TASK_PRIORITY116,4480
#define mainSEM_TEST_PRIORITY	mainSEM_TEST_PRIORITY117,4538
#define mainFLASH_PRIORITY	mainFLASH_PRIORITY118,4594
#define mainBLOCK_Q_PRIORITY	mainBLOCK_Q_PRIORITY119,4648
#define mainWEBSERVER_PRIORITY mainWEBSERVER_PRIORITY120,4703
#define mainUSB_PRIORITY	mainUSB_PRIORITY121,4764
#define mainUSB_TASK_STACK	mainUSB_TASK_STACK122,4816
#define mainNO_ERROR_FLASH_PERIOD	mainNO_ERROR_FLASH_PERIOD126,4938
#define mainERROR_FLASH_PERIOD	mainERROR_FLASH_PERIOD127,5018
#define mainUSB_TX_FREQUENCY	mainUSB_TX_FREQUENCY130,5162
#define mainFIRST_TX_CHAR	mainFIRST_TX_CHAR133,5276
#define mainLAST_TX_CHAR	mainLAST_TX_CHAR134,5308
#define mainCHECK_LED mainCHECK_LED137,5408
main (void)main171,6336
prvSetupHardware (void)prvSetupHardware217,7899
vApplicationIdleHook (void)vApplicationIdleHook316,10721

application/BasicWEB.h,54
#define BASIC_WEB_SERVER_HBASIC_WEB_SERVER_H51,2405

application/lwipopts.h,2218
#define __LWIPOPTS_H____LWIPOPTS_H__33,1663
#define LWIP_NOASSERT LWIP_NOASSERT35,1689
#define SYS_LIGHTWEIGHT_PROT SYS_LIGHTWEIGHT_PROT36,1767
#define TCPIP_THREAD_PRIO	TCPIP_THREAD_PRIO38,1812
#define MEM_ALIGNMENT MEM_ALIGNMENT44,2081
#define MEM_SIZE MEM_SIZE48,2258
#define MEMP_NUM_PBUF MEMP_NUM_PBUF53,2462
#define MEMP_NUM_UDP_PCB MEMP_NUM_UDP_PCB56,2603
#define MEMP_NUM_TCP_PCB MEMP_NUM_TCP_PCB59,2720
#define MEMP_NUM_TCP_PCB_LISTEN MEMP_NUM_TCP_PCB_LISTEN62,2833
#define MEMP_NUM_TCP_SEG MEMP_NUM_TCP_SEG65,2947
#define MEMP_NUM_SYS_TIMEOUT MEMP_NUM_SYS_TIMEOUT68,3060
#define MEMP_NUM_NETBUF MEMP_NUM_NETBUF74,3287
#define MEMP_NUM_NETCONN MEMP_NUM_NETCONN76,3378
#define MEMP_NUM_API_MSG MEMP_NUM_API_MSG80,3552
#define MEMP_NUM_TCPIP_MSG MEMP_NUM_TCPIP_MSG84,3747
#define MEM_RECLAIM MEM_RECLAIM88,3891
#define MEMP_RECLAIM MEMP_RECLAIM89,3926
#define PBUF_POOL_SIZE PBUF_POOL_SIZE93,4068
#define PBUF_POOL_BUFSIZE PBUF_POOL_BUFSIZE96,4171
#define PBUF_LINK_HLEN PBUF_LINK_HLEN100,4308
#define LWIP_TCP LWIP_TCP103,4387
#define TCP_TTL TCP_TTL104,4422
#define TCP_QUEUE_OOSEQ TCP_QUEUE_OOSEQ108,4581
#define TCP_MSS TCP_MSS111,4651
#define TCP_SND_BUF TCP_SND_BUF114,4731
#define TCP_SND_QUEUELEN TCP_SND_QUEUELEN118,4883
#define TCP_WND TCP_WND121,4969
#define TCP_MAXRTX TCP_MAXRTX124,5068
#define TCP_SYNMAXRTX TCP_SYNMAXRTX127,5164
#define ARP_TABLE_SIZE ARP_TABLE_SIZE130,5242
#define ARP_QUEUEING ARP_QUEUEING131,5269
#define IP_FORWARD IP_FORWARD137,5546
#define IP_OPTIONS IP_OPTIONS141,5710
#define ICMP_TTL ICMP_TTL144,5789
#define LWIP_DHCP LWIP_DHCP151,6047
#define DHCP_DOES_ARP_CHECK DHCP_DOES_ARP_CHECK155,6166
#define LWIP_UDP LWIP_UDP158,6244
#define UDP_TTL UDP_TTL159,6279
#define STATSSTATS163,6368
#define LINK_STATS LINK_STATS166,6399
#define IP_STATS IP_STATS167,6421
#define ICMP_STATS ICMP_STATS168,6443
#define UDP_STATS UDP_STATS169,6465
#define TCP_STATS TCP_STATS170,6487
#define MEM_STATS MEM_STATS171,6509
#define MEMP_STATS MEMP_STATS172,6531
#define PBUF_STATS PBUF_STATS173,6553
#define SYS_STATS SYS_STATS174,6575
#define LWIP_PROVIDE_ERRNO LWIP_PROVIDE_ERRNO177,6619

at91flash,0

config/FreeRTOSConfig.h,1515
#define FREERTOS_CONFIG_HFREERTOS_CONFIG_H37,1638
#define vPortYieldProcessor vPortYieldProcessor50,2122
#define configUSE_PREEMPTION	configUSE_PREEMPTION53,2164
#define configUSE_IDLE_HOOK	configUSE_IDLE_HOOK54,2196
#define configUSE_TICK_HOOK	configUSE_TICK_HOOK55,2227
#define configCPU_CLOCK_HZ	configCPU_CLOCK_HZ56,2258
#define configTICK_RATE_HZ	configTICK_RATE_HZ57,2321
#define configMAX_PRIORITIES	configMAX_PRIORITIES58,2375
#define configMINIMAL_STACK_SIZE	configMINIMAL_STACK_SIZE59,2438
#define configTOTAL_HEAP_SIZE	configTOTAL_HEAP_SIZE60,2502
#define configMAX_TASK_NAME_LEN	configMAX_TASK_NAME_LEN61,2556
#define configUSE_TRACE_FACILITY	configUSE_TRACE_FACILITY62,2596
#define configUSE_16_BIT_TICKS	configUSE_16_BIT_TICKS63,2631
#define configIDLE_SHOULD_YIELD	configIDLE_SHOULD_YIELD64,2665
#define configUSE_CO_ROUTINES configUSE_CO_ROUTINES67,2731
#define configMAX_CO_ROUTINE_PRIORITIES configMAX_CO_ROUTINE_PRIORITIES68,2765
#define INCLUDE_vTaskPrioritySet	INCLUDE_vTaskPrioritySet73,2920
#define INCLUDE_uxTaskPriorityGet	INCLUDE_uxTaskPriorityGet74,2956
#define INCLUDE_vTaskDelete	INCLUDE_vTaskDelete75,2993
#define INCLUDE_vTaskCleanUpResources	INCLUDE_vTaskCleanUpResources76,3025
#define INCLUDE_vTaskSuspend	INCLUDE_vTaskSuspend77,3066
#define INCLUDE_vTaskDelayUntil	INCLUDE_vTaskDelayUntil78,3099
#define INCLUDE_vTaskDelay	INCLUDE_vTaskDelay79,3135
#define INCLUDE_xTaskGetCurrentTaskHandle	INCLUDE_xTaskGetCurrentTaskHandle80,3166

config/board.h,715
#define Board_hBoard_h17,875
#define true	true22,947
#define false	false23,963
#define  FLASH_PAGE_NB	FLASH_PAGE_NB30,1158
#define  FLASH_PAGE_SIZE	FLASH_PAGE_SIZE31,1186
#define LED1 LED136,1282
#define LED2 LED237,1322
#define LED3 LED338,1362
#define LED4 LED439,1402
#define NB_LED	NB_LED40,1442
#define LED_MASK LED_MASK42,1462
#define SW1_MASK SW1_MASK48,1600
#define SW2_MASK SW2_MASK49,1640
#define SW3_MASK SW3_MASK50,1680
#define SW4_MASK SW4_MASK51,1720
#define SW_MASK SW_MASK52,1760
#define SW1 SW155,1824
#define SW2 SW256,1854
#define SW3 SW357,1884
#define SW4 SW458,1914
#define EXT_OC EXT_OC64,2003
#define MCK MCK65,2064
#define MCKKHz MCKKHz66,2121

Makefile,673
CC=arm-elf-gccCC31,1509
OBJCOPY=arm-elf-objcopyOBJCOPY32,1524
OBJDUMP=arm-elf-objdumpOBJDUMP33,1548
ARCH=arm-elf-arARCH34,1572
CRT0=os/boot/boot.sCRT035,1588
DEBUG=-gDEBUG36,1608
OPTIM=-O2OPTIM37,1617
LDSCRIPT=config/atmel-rom.ldLDSCRIPT38,1627
ARCH=AT91SAM7S128ARCH39,1656
CFLAGS= \CFLAGS45,1734
LINKER_FLAGS=-Xlinker -oopenbeacon.elf -Xlinker -M -Xlinker -Map=openbeacon.mapLINKER_FLAGS71,2225
LWIP_SRC= \LWIP_SRC77,2358
ARM_SRC= \ARM_SRC104,3308
ARM_OBJ = $(ARM_SRC:.c=.o)ARM_OBJ122,3689
FREERTOS_THUMB_OBJ = $(FREERTOS_THUMB_SRC:.c=.o)FREERTOS_THUMB_OBJ123,3716
DEMO_APP_THMUB_OBJ = $(DEMO_APP_THMUB_SRC:.c=.o)DEMO_APP_THMUB_OBJ124,3765

openbeacon.asm,97
Disassembly of section startup:Disassembly4,50
Disassembly of section prog:Disassembly24,907

os/usb/usb.h,3793
#define usbDESCRIPTOR_TYPE_DEVICE	usbDESCRIPTOR_TYPE_DEVICE51,2363
#define usbDESCRIPTOR_TYPE_CONFIGURATION	usbDESCRIPTOR_TYPE_CONFIGURATION52,2408
#define usbDESCRIPTOR_TYPE_STRING	usbDESCRIPTOR_TYPE_STRING53,2458
#define usbGET_REPORT_REQUEST	usbGET_REPORT_REQUEST56,2540
#define usbGET_IDLE_REQUEST	usbGET_IDLE_REQUEST57,2582
#define usbGET_PROTOCOL_REQUEST	usbGET_PROTOCOL_REQUEST58,2623
#define usbSET_REPORT_REQUEST	usbSET_REPORT_REQUEST59,2667
#define usbSET_IDLE_REQUEST	usbSET_IDLE_REQUEST60,2709
#define usbSET_PROTOCOL_REQUEST	usbSET_PROTOCOL_REQUEST61,2750
#define usbGET_CONFIGURATION_REQUEST	usbGET_CONFIGURATION_REQUEST62,2794
#define usbGET_STATUS_REQUEST	usbGET_STATUS_REQUEST63,2841
#define usbCLEAR_FEATURE_REQUEST	usbCLEAR_FEATURE_REQUEST64,2883
#define usbSET_FEATURE_REQUEST	usbSET_FEATURE_REQUEST65,2927
#define usbSET_ADDRESS_REQUEST	usbSET_ADDRESS_REQUEST66,2970
#define usbGET_DESCRIPTOR_REQUEST	usbGET_DESCRIPTOR_REQUEST67,3013
#define usbSET_CONFIGURATION_REQUEST	usbSET_CONFIGURATION_REQUEST68,3058
#define usbGET_INTERFACE_REQUEST	usbGET_INTERFACE_REQUEST69,3105
#define usbSET_INTERFACE_REQUEST	usbSET_INTERFACE_REQUEST70,3149
#define usbSEND_ENCAPSULATED_COMMAND	usbSEND_ENCAPSULATED_COMMAND73,3213
#define usbGET_ENCAPSULATED_RESPONSE	usbGET_ENCAPSULATED_RESPONSE74,3260
#define usbSET_LINE_CODING	usbSET_LINE_CODING75,3307
#define usbGET_LINE_CODING	usbGET_LINE_CODING76,3347
#define usbSET_CONTROL_LINE_STATE	usbSET_CONTROL_LINE_STATE77,3387
#define usbDEVICE_CLASS_VENDOR_SPECIFIC	usbDEVICE_CLASS_VENDOR_SPECIFIC80,3461
#define usbBUS_POWERED	usbBUS_POWERED81,3511
#define usbHID_REPORT_DESCRIPTOR	usbHID_REPORT_DESCRIPTOR82,3548
#define AT91C_UDP_TRANSCEIVER_ENABLE	AT91C_UDP_TRANSCEIVER_ENABLE83,3592
#define usbLANGUAGE_STRING	usbLANGUAGE_STRING86,3706
#define usbMANUFACTURER_STRING	usbMANUFACTURER_STRING87,3743
#define usbPRODUCT_STRING	usbPRODUCT_STRING88,3783
#define usbCONFIGURATION_STRING	usbCONFIGURATION_STRING89,3819
#define usbINTERFACE_STRING	usbINTERFACE_STRING90,3860
#define usbREQUEST_TYPE_INDEX	usbREQUEST_TYPE_INDEX93,3969
#define usbREQUEST_INDEX	usbREQUEST_INDEX94,4008
#define usbVALUE_HIGH_BYTE	usbVALUE_HIGH_BYTE95,4043
#define usbVALUE_LOW_BYTE	usbVALUE_LOW_BYTE96,4080
#define usbINDEX_HIGH_BYTE	usbINDEX_HIGH_BYTE97,4116
#define usbINDEX_LOW_BYTE	usbINDEX_LOW_BYTE98,4153
#define usbLENGTH_HIGH_BYTE	usbLENGTH_HIGH_BYTE99,4189
#define usbLENGTH_LOW_BYTE	usbLENGTH_LOW_BYTE100,4227
#define usbINTERRUPT_PRIORITY	usbINTERRUPT_PRIORITY103,4301
#define usbQUEUE_LENGTH	usbQUEUE_LENGTH104,4340
#define usbFIFO_LENGTH	usbFIFO_LENGTH105,4407
#define usbEND_POINT_0	usbEND_POINT_0106,4463
#define usbEND_POINT_1	usbEND_POINT_1107,4497
#define usbEND_POINT_2	usbEND_POINT_2108,4531
#define usbEND_POINT_3	usbEND_POINT_3109,4565
#define usbMAX_CONTROL_MESSAGE_SIZE	usbMAX_CONTROL_MESSAGE_SIZE110,4599
#define usbRX_COUNT_MASK	usbRX_COUNT_MASK111,4645
#define AT91C_UDP_STALLSENT	AT91C_UDP_STALLSENT112,4706
#define usbSHORTEST_DELAY	usbSHORTEST_DELAY113,4757
#define usbINIT_DELAY	usbINIT_DELAY114,4810
#define usbSHORT_DELAY	usbSHORT_DELAY115,4882
#define usbEND_POINT_RESET_MASK	usbEND_POINT_RESET_MASK116,4953
#define usbDATA_INC	usbDATA_INC117,5019
#define usbEXPECTED_NUMBER_OF_BYTES	usbEXPECTED_NUMBER_OF_BYTES118,5064
#define usbSTANDARD_DEVICE_REQUEST	usbSTANDARD_DEVICE_REQUEST121,5160
#define usbSTANDARD_INTERFACE_REQUEST	usbSTANDARD_INTERFACE_REQUEST122,5203
#define usbSTANDARD_END_POINT_REQUEST	usbSTANDARD_END_POINT_REQUEST123,5248
#define usbCLASS_INTERFACE_REQUEST	usbCLASS_INTERFACE_REQUEST124,5293
#define usbCSR_SET_BIT(usbCSR_SET_BIT133,5604
#define usbCSR_CLEAR_BIT(usbCSR_CLEAR_BIT148,6286

os/usb/USB-CDC.c,1929
#define usbNO_BLOCK usbNO_BLOCK77,3003
static unsigned portCHAR ucUSBConfig = (unsigned portCHAR) 0;ucUSBConfig124,4594
static unsigned portLONG ulReceivedAddress = (unsigned portLONG) 0;ulReceivedAddress125,4656
static eDRIVER_STATE eDriverState = eNOTHING;eDriverState126,4724
static xCONTROL_MESSAGE pxControlTx;pxControlTx129,4823
static xCONTROL_MESSAGE pxControlRx;pxControlRx130,4860
xQueueHandle xUSBInterruptQueue;xUSBInterruptQueue133,4947
static xQueueHandle xRxCDC;xRxCDC137,5111
static xQueueHandle xTxCDC;xTxCDC138,5139
static const unsigned portCHAR pxLineCoding[] =pxLineCoding141,5208
static unsigned portCHAR ucControlState;ucControlState145,5329
static unsigned int uiCurrentBank;uiCurrentBank146,5370
vUSBCDCTask (void *pvParameters)vUSBCDCTask153,5479
vUSBSendByte (portCHAR cByte)vUSBSendByte270,8414
prvSendZLP (void)prvSendZLP279,8634
prvSendStall (void)prvSendStall306,9395
prvResetEndPoints (void)prvResetEndPoints323,9825
prvProcessEndPoint0Interrupt (xISRStatus * pxMessage)prvProcessEndPoint0Interrupt354,10658
prvGetStandardDeviceDescriptor (xUSB_REQUEST * pxRequest)prvGetStandardDeviceDescriptor544,16656
prvHandleStandardDeviceRequest (xUSB_REQUEST * pxRequest)prvHandleStandardDeviceRequest617,18629
prvHandleClassInterfaceRequest (xUSB_REQUEST * pxRequest)prvHandleClassInterfaceRequest669,20129
prvGetStandardInterfaceDescriptor (xUSB_REQUEST * pxRequest)prvGetStandardInterfaceDescriptor710,21149
prvHandleStandardInterfaceRequest (xUSB_REQUEST * pxRequest)prvHandleStandardInterfaceRequest723,21420
prvHandleStandardEndPointRequest (xUSB_REQUEST * pxRequest)prvHandleStandardEndPointRequest753,22156
vDetachUSBInterface (void)vDetachUSBInterface771,22569
vInitUSBInterface (void)vInitUSBInterface785,22892
prvSendControlData (unsigned portCHAR * pucData,prvSendControlData866,25546
prvSendNextSegment (void)prvSendNextSegment909,27045

os/usb/USBIsr.c,226
#define usbINT_CLEAR_MASK	usbINT_CLEAR_MASK53,1918
static xISRStatus xISRMessages[usbQUEUE_LENGTH + 1];xISRMessages57,2198
vUSB_ISR_Handler (void)vUSB_ISR_Handler70,2726
vUSB_ISR_Wrapper (void)vUSB_ISR_Wrapper177,6128

os/usb/USB-CDC.h,1129
#define USB_CDC_HUSB_CDC_H51,2346
#define USB_CDC_QUEUE_SIZE USB_CDC_QUEUE_SIZE55,2383
typedef struct X_ISR_STATUSX_ISR_STATUS58,2497
  unsigned portLONG ulISR;ulISR60,2527
  unsigned portLONG ulCSR0;ulCSR061,2554
  unsigned portCHAR ucFifoData[8];ucFifoData62,2582
} xISRStatus;xISRStatus63,2617
  unsigned portCHAR ucReqType;ucReqType68,2701
  unsigned portCHAR ucRequest;ucRequest69,2732
  unsigned portSHORT usValue;usValue70,2763
  unsigned portSHORT usIndex;usIndex71,2793
  unsigned portSHORT usLength;usLength72,2823
} xUSB_REQUEST;xUSB_REQUEST73,2854
  eNOTHING,eNOTHING77,2886
  eJUST_RESET,eJUST_RESET78,2898
  eJUST_GOT_CONFIG,eJUST_GOT_CONFIG79,2913
  eJUST_GOT_ADDRESS,eJUST_GOT_ADDRESS80,2933
  eSENDING_EVEN_DESCRIPTOR,eSENDING_EVEN_DESCRIPTOR81,2954
  eREADY_TO_SENDeREADY_TO_SEND82,2982
} eDRIVER_STATE;eDRIVER_STATE83,2999
  unsigned portCHAR ucBuffer[usbMAX_CONTROL_MESSAGE_SIZE];ucBuffer88,3099
  unsigned portLONG ulNextCharIndex;ulNextCharIndex89,3158
  unsigned portLONG ulTotalDataLength;ulTotalDataLength90,3195
} xCONTROL_MESSAGE;xCONTROL_MESSAGE91,3234

os/usb/descriptors.h,561
const portCHAR pxLanguageStringDescriptor[] = {pxLanguageStringDescriptor64,2499
const portCHAR pxManufacturerStringDescriptor[] = {pxManufacturerStringDescriptor70,2598
const portCHAR pxProductStringDescriptor[] = {pxProductStringDescriptor78,2781
const portCHAR pxConfigurationStringDescriptor[] = {pxConfigurationStringDescriptor87,3060
const portCHAR pxInterfaceStringDescriptor[] = {pxInterfaceStringDescriptor96,3356
const char pxDeviceDescriptor[] = {pxDeviceDescriptor106,3689
const char pxConfigDescriptor[] = {pxConfigDescriptor124,4468

os/boot/boot.s,773
start:start43,1154
_start:_start44,1162
_mainCRTStartup:_mainCRTStartup45,1171
endless_loop:endless_loop116,3065
_undf:  .word __undf                    /* undefined				*/_undf152,3838
_swi:   .word swi_handler				/* SWI						*/_swi153,3898
_pabt:  .word __pabt                    /* program abort			*/_pabt154,3943
_dabt:  .word __dabt                    /* data abort				*/_dabt155,4006
_fiq:   .word __fiq                     /* FIQ						*/_fiq156,4067
__undf: b     .                         /* undefined				*/__undf158,4125
__pabt: b     .                         /* program abort			*/__pabt159,4185
__dabt: b     .                         /* data abort				*/__dabt160,4248
__fiq:  b     .                         /* FIQ						*/__fiq161,4309

os/boot/Cstartup_SAM7.c,53
AT91F_LowLevelInit (void)AT91F_LowLevelInit29,1418

os/core/MemMang/heap_1.c,662
#define heapBYTE_ALIGNMENT_MASK heapBYTE_ALIGNMENT_MASK78,3084
#define heapBYTE_ALIGNMENT_MASK	heapBYTE_ALIGNMENT_MASK82,3174
#define heapBYTE_ALIGNMENT_MASK	heapBYTE_ALIGNMENT_MASK86,3264
#define heapBYTE_ALIGNMENT_MASK	heapBYTE_ALIGNMENT_MASK90,3354
static struct xRTOS_HEAPxRTOS_HEAP99,3624
  unsigned portLONG ulDummy;ulDummy101,3651
  unsigned portCHAR ucHeap[configTOTAL_HEAP_SIZE];ucHeap102,3680
} xHeap;xHeap103,3731
static size_t xNextFreeByte = (size_t) 0;xNextFreeByte105,3741
pvPortMalloc (size_t xWantedSize)pvPortMalloc109,3855
vPortFree (void *pv)vPortFree142,4730
vPortInitialiseBlocks (void)vPortInitialiseBlocks153,5042

os/core/MemMang/heap_3.c,94
pvPortMalloc (size_t xWantedSize)pvPortMalloc70,2845
vPortFree (void *pv)vPortFree86,3081

os/core/MemMang/heap_2.c,1145
#define heapBYTE_ALIGNMENT_MASK heapBYTE_ALIGNMENT_MASK66,2831
#define heapBYTE_ALIGNMENT_MASK	heapBYTE_ALIGNMENT_MASK70,2921
#define heapBYTE_ALIGNMENT_MASK	heapBYTE_ALIGNMENT_MASK74,3011
#define heapBYTE_ALIGNMENT_MASK	heapBYTE_ALIGNMENT_MASK78,3101
static struct xRTOS_HEAPxRTOS_HEAP87,3371
  unsigned portLONG ulDummy;ulDummy89,3398
  unsigned portCHAR ucHeap[configTOTAL_HEAP_SIZE];ucHeap90,3427
} xHeap;xHeap91,3478
typedef struct A_BLOCK_LINKA_BLOCK_LINK95,3586
  struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */pxNextFreeBlock97,3616
  size_t xBlockSize;		/*<< The size of the free block. */xBlockSize98,3697
} xBlockLink;xBlockLink99,3755
static const unsigned portSHORT heapSTRUCT_SIZE =heapSTRUCT_SIZE102,3771
#define heapMINIMUM_BLOCK_SIZE	heapMINIMUM_BLOCK_SIZE104,3891
static xBlockLink xStart, xEnd;xStart107,4037
static xBlockLink xStart, xEnd;xEnd107,4037
#define prvInsertBlockIntoFreeList(prvInsertBlockIntoFreeList116,4334
#define prvHeapInit(prvHeapInit137,5315
pvPortMalloc (size_t xWantedSize)pvPortMalloc159,6286
vPortFree (void *pv)vPortFree246,8997

os/core/queue.c,4730
#define queueUNLOCKED	queueUNLOCKED61,2666
#define queueLOCKED_UNMODIFIED	queueLOCKED_UNMODIFIED62,2726
#define queueERRONEOUS_UNBLOCK	queueERRONEOUS_UNBLOCK64,2793
#define	queueSEND_TO_BACK	queueSEND_TO_BACK67,2865
#define	queueSEND_TO_FRONT	queueSEND_TO_FRONT68,2897
#define pxMutexHolder	pxMutexHolder71,2991
#define uxQueueType	uxQueueType72,3023
#define uxRecursiveCallCount	uxRecursiveCallCount73,3054
#define queueQUEUE_IS_MUTEX	queueQUEUE_IS_MUTEX74,3095
#define queueSEMAPHORE_QUEUE_ITEM_LENGTH queueSEMAPHORE_QUEUE_ITEM_LENGTH78,3215
#define queueDONT_BLOCK	queueDONT_BLOCK79,3262
#define queueMUTEX_GIVE_BLOCK_TIME	queueMUTEX_GIVE_BLOCK_TIME80,3314
typedef struct QueueDefinitionQueueDefinition85,3475
  signed portCHAR *pcHead;	/*< Points to the beginning of the queue storage area. */pcHead87,3508
  signed portCHAR *pcTail;	/*< Points to the byte at the end of the queue storage area.  Once more byte is allocated than necessary to store the queue items, this is used as a marker. */pcTail88,3593
  signed portCHAR *pcWriteTo;	/*< Points to the free next place in the storage area. */pcWriteTo90,3781
  signed portCHAR *pcReadFrom;	/*< Points to the last place that a queued item was read from. */pcReadFrom91,3869
  xList xTasksWaitingToSend;	/*< List of tasks that are blocked waiting to post onto this queue.  Stored in priority order. */xTasksWaitingToSend93,3967
  xList xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.  Stored in priority order. */xTasksWaitingToReceive94,4094
  volatile unsigned portBASE_TYPE uxMessagesWaiting;	/*< The number of items currently in the queue. */uxMessagesWaiting96,4225
  unsigned portBASE_TYPE uxLength;	/*< The length of the queue defined as the number of items it will hold, not the number of bytes. */uxLength97,4329
  unsigned portBASE_TYPE uxItemSize;	/*< The size of each items that the queue will hold. */uxItemSize98,4465
  signed portBASE_TYPE xRxLock;	/*< Stores the number of items received from the queue (removed from the queue) while the queue was locked.  Set to queueUNLOCKED when the queue is not locked. */xRxLock100,4559
  signed portBASE_TYPE xTxLock;	/*< Stores the number of items transmitted to the queue (added to the queue) while the queue was locked.  Set to queueUNLOCKED when the queue is not locked. */xTxLock101,4754
} xQUEUE;xQUEUE102,4946
typedef xQUEUE *xQueueHandle;xQueueHandle110,5187
#define prvLockQueue(prvLockQueue219,9402
xQueueCreate (unsigned portBASE_TYPE uxQueueLength,xQueueCreate242,10072
xQueueCreateMutex (void)xQueueCreateMutex302,11908
xQueueGiveMutexRecursive (xQueueHandle pxMutex)xQueueGiveMutexRecursive351,13359
xQueueTakeMutexRecursive (xQueueHandle pxMutex, portTickType xBlockTime)xQueueTakeMutexRecursive400,15069
xQueueCreateCountingSemaphore (unsigned portBASE_TYPE uxCountValue,xQueueCreateCountingSemaphore435,15920
xQueueGenericSend (xQueueHandle pxQueue, const void *const pvItemToQueue,xQueueGenericSend462,16524
xQueueAltGenericSend (xQueueHandle pxQueue, const void *const pvItemToQueue,xQueueAltGenericSend597,20510
xQueueAltGenericReceive (xQueueHandle pxQueue, void *const pvBuffer,xQueueAltGenericReceive717,24009
xQueueGenericSendFromISR (xQueueHandle pxQueue,xQueueGenericSendFromISR877,28044
xQueueGenericReceive (xQueueHandle pxQueue, void *const pvBuffer,xQueueGenericReceive931,29668
xQueueReceiveFromISR (xQueueHandle pxQueue, void *const pvBuffer,xQueueReceiveFromISR1093,33526
uxQueueMessagesWaiting (const xQueueHandle pxQueue)uxQueueMessagesWaiting1143,34908
uxQueueMessagesWaitingFromISR (const xQueueHandle pxQueue)uxQueueMessagesWaitingFromISR1157,35199
vQueueDelete (xQueueHandle pxQueue)vQueueDelete1169,35430
prvCopyDataToQueue (xQUEUE * pxQueue, const void *pvItemToQueue,prvCopyDataToQueue1180,35634
prvCopyDataFromQueue (xQUEUE * const pxQueue, const void *pvBuffer)prvCopyDataFromQueue1223,36763
prvUnlockQueue (xQueueHandle pxQueue)prvUnlockQueue1240,37227
prvIsQueueEmpty (const xQueueHandle pxQueue)prvIsQueueEmpty1308,38961
xQueueIsQueueEmptyFromISR (const xQueueHandle pxQueue)xQueueIsQueueEmptyFromISR1322,39270
prvIsQueueFull (const xQueueHandle pxQueue)prvIsQueueFull1334,39547
xQueueIsQueueFullFromISR (const xQueueHandle pxQueue)xQueueIsQueueFullFromISR1348,39846
xQueueCRSend (xQueueHandle pxQueue, const void *pvItemToQueue,xQueueCRSend1361,40137
xQueueCRReceive (xQueueHandle pxQueue, void *pvBuffer,xQueueCRReceive1433,42225
xQueueCRSendFromISR (xQueueHandle pxQueue, const void *pvItemToQueue,xQueueCRSendFromISR1513,44414
xQueueCRReceiveFromISR (xQueueHandle pxQueue, void *pvBuffer,xQueueCRReceiveFromISR1544,45316

os/core/list.c,347
vListInitialise (xList * pxList)vListInitialise60,2561
vListInitialiseItem (xListItem * pxItem)vListInitialiseItem82,3335
vListInsertEnd (xList * pxList, xListItem * pxNewListItem)vListInsertEnd91,3549
vListInsert (xList * pxList, xListItem * pxNewListItem)vListInsert116,4396
vListRemove (xListItem * pxItemToRemove)vListRemove161,6013

os/core/tasks.c,7774
#define tskIDLE_STACK_SIZE	tskIDLE_STACK_SIZE61,2504
typedef struct tskTaskControlBlocktskTaskControlBlock68,2682
  volatile portSTACK_TYPE *pxTopOfStack;	/*< Points to the location of the last item placed on the tasks stack.  THIS MUST BE THE FIRST MEMBER OF THE STRUCT. */pxTopOfStack70,2719
  xListItem xGenericListItem;	/*< List item used to place the TCB in ready and blocked queues. */xGenericListItem71,2880
  xListItem xEventListItem;	/*< List item used to place the TCB in event lists. */xEventListItem72,2978
  unsigned portBASE_TYPE uxPriority;	/*< The priority of the task where 0 is the lowest priority. */uxPriority73,3061
  portSTACK_TYPE *pxStack;	/*< Points to the start of the stack. */pxStack74,3162
  signed portCHAR pcTaskName[configMAX_TASK_NAME_LEN];	/*< Descriptive name given to the task when created.  Facilitates debugging only. */pcTaskName75,3230
  unsigned portBASE_TYPE uxCriticalNesting;uxCriticalNesting78,3412
  unsigned portBASE_TYPE uxTCBNumber;	/*< This is used for tracing the scheduler and making debugging easier only. */uxTCBNumber82,3502
  unsigned portBASE_TYPE uxBasePriority;uxBasePriority86,3659
  pdTASK_HOOK_CODE pxTaskTag;pxTaskTag90,3752
} tskTCB;tskTCB93,3790
tskTCB *volatile pxCurrentTCB = NULL;pxCurrentTCB97,3818
static xList pxReadyTasksLists[configMAX_PRIORITIES];	/*< Prioritised ready tasks. */pxReadyTasksLists101,3919
static xList xDelayedTaskList1;	/*< Delayed tasks. */xDelayedTaskList1102,4005
static xList xDelayedTaskList2;	/*< Delayed tasks (two lists are used - one for delays that have overflowed the current tick count. */xDelayedTaskList2103,4059
static xList *volatile pxDelayedTaskList;	/*< Points to the delayed task list currently being used. */pxDelayedTaskList104,4194
static xList *volatile pxOverflowDelayedTaskList;	/*< Points to the delayed task list currently being used to hold tasks that have overflowed the current tick count. */pxOverflowDelayedTaskList105,4297
static xList xPendingReadyList;	/*< Tasks that have been readied while the scheduler was suspended.  They will be moved to the ready queue when the scheduler is resumed. */xPendingReadyList106,4466
static volatile xList xTasksWaitingTermination;	/*< Tasks that have been deleted - but the their memory not yet freed. */xTasksWaitingTermination110,4674
static volatile unsigned portBASE_TYPE uxTasksDeleted =uxTasksDeleted111,4796
static xList xSuspendedTaskList;	/*< Tasks that are currently suspended. */xSuspendedTaskList118,4926
static volatile unsigned portBASE_TYPE uxCurrentNumberOfTasks =uxCurrentNumberOfTasks123,5073
static volatile portTickType xTickCount = (portTickType) 0;xTickCount125,5167
static unsigned portBASE_TYPE uxTopUsedPriority = tskIDLE_PRIORITY;uxTopUsedPriority126,5227
static volatile unsigned portBASE_TYPE uxTopReadyPriority = tskIDLE_PRIORITY;uxTopReadyPriority127,5295
static volatile signed portBASE_TYPE xSchedulerRunning = pdFALSE;xSchedulerRunning128,5373
static volatile unsigned portBASE_TYPE uxSchedulerSuspended =uxSchedulerSuspended129,5439
static volatile unsigned portBASE_TYPE uxMissedTicks =uxMissedTicks131,5537
static volatile portBASE_TYPE xMissedYield = (portBASE_TYPE) pdFALSE;xMissedYield133,5622
static volatile portBASE_TYPE xNumOfOverflows = (portBASE_TYPE) 0;xNumOfOverflows134,5692
#define tskSTACK_FILL_BYTE	tskSTACK_FILL_BYTE141,5986
#define tskBLOCKED_CHAR	tskBLOCKED_CHAR146,6096
#define tskREADY_CHAR	tskREADY_CHAR147,6149
#define tskDELETED_CHAR	tskDELETED_CHAR148,6200
#define tskSUSPENDED_CHAR	tskSUSPENDED_CHAR149,6253
#define tskSIZE_OF_EACH_TRACE_LINE	tskSIZE_OF_EACH_TRACE_LINE156,6414
static volatile signed portCHAR *volatile pcTraceBuffer;pcTraceBuffer157,6539
static signed portCHAR *pcTraceBufferStart;pcTraceBufferStart158,6596
static signed portCHAR *pcTraceBufferEnd;pcTraceBufferEnd159,6640
static signed portBASE_TYPE xTracing = pdFALSE;xTracing160,6682
#define vWriteTraceToBuffer(vWriteTraceToBuffer174,7112
#define vWriteTraceToBuffer(vWriteTraceToBuffer200,8122
#define prvAddTaskToReadyQueue(prvAddTaskToReadyQueue212,8571
#define prvCheckDelayedTasks(prvCheckDelayedTasks230,9316
#define taskCHECK_FOR_STACK_OVERFLOW(taskCHECK_FOR_STACK_OVERFLOW268,11053
#define taskCHECK_FOR_STACK_OVERFLOW(taskCHECK_FOR_STACK_OVERFLOW282,11571
#define taskCHECK_FOR_STACK_OVERFLOW(taskCHECK_FOR_STACK_OVERFLOW298,12262
#define prvGetTCBFromHandle(prvGetTCBFromHandle330,14299
xTaskCreate (pdTASK_CODE pvTaskCode, const signed portCHAR * const pcName,xTaskCreate434,17618
vTaskDelete (xTaskHandle pxTaskToDelete)vTaskDelete562,21446
vTaskDelayUntil (portTickType * const pxPreviousWakeTime,vTaskDelayUntil626,23058
vTaskDelay (portTickType xTicksToDelay)vTaskDelay708,25445
uxTaskPriorityGet (xTaskHandle pxTask)uxTaskPriorityGet773,27298
vTaskPrioritySet (xTaskHandle pxTask, unsigned portBASE_TYPE uxNewPriority)vTaskPrioritySet796,27766
vTaskSuspend (xTaskHandle pxTaskToSuspend)vTaskSuspend901,30544
prvIsTaskSuspended (const tskTCB * const pxTCB)prvIsTaskSuspended946,31623
vTaskResume (xTaskHandle pxTaskToResume)vTaskResume980,32522
xTaskResumeFromISR (xTaskHandle pxTaskToResume)xTaskResumeFromISR1023,33669
vTaskStartScheduler (void)vTaskStartScheduler1064,34644
vTaskEndScheduler (void)vTaskEndScheduler1105,35905
vTaskSuspendAll (void)vTaskSuspendAll1118,36312
xTaskResumeAll (void)xTaskResumeAll1128,36500
xTaskGetTickCount (void)xTaskGetTickCount1215,38840
uxTaskGetNumberOfTasks (void)uxTaskGetNumberOfTasks1232,39150
vTaskList (signed portCHAR * pcWriteBuffer)vTaskList1248,39526
vTaskStartTrace (signed portCHAR * pcBuffer, unsigned portLONG ulBufferSize)vTaskStartTrace1316,41227
ulTaskEndTrace (void)ulTaskEndTrace1334,41681
vTaskIncrementTick (void)vTaskIncrementTick1358,42147
vTaskCleanUpResources (void)vTaskCleanUpResources1418,43677
vTaskSetApplicationTaskTag (xTaskHandle xTask, pdTASK_HOOK_CODE pxTagValue)vTaskSetApplicationTaskTag1473,45145
xTaskCallApplicationTaskHook (xTaskHandle xTask, void *pvParameter)xTaskCallApplicationTaskHook1499,45684
vTaskSwitchContext (void)vTaskSwitchContext1530,46214
vTaskPlaceOnEventList (const xList * const pxEventList,vTaskPlaceOnEventList1562,47065
xTaskRemoveFromEventList (const xList * const pxEventList)xTaskRemoveFromEventList1642,49763
vTaskSetTimeOutState (xTimeOutType * const pxTimeOut)vTaskSetTimeOutState1692,51417
xTaskCheckForTimeOut (xTimeOutType * const pxTimeOut,xTaskCheckForTimeOut1701,51645
vTaskMissedYield (void)vTaskMissedYield1748,53030
portTASK_FUNCTION (prvIdleTask, pvParameters)portTASK_FUNCTION1765,53438
prvInitialiseTCBVariables (tskTCB * pxTCB,prvInitialiseTCBVariables1832,55414
prvInitialiseTaskLists (void)prvInitialiseTaskLists1883,56923
prvCheckTasksWaitingTermination (void)prvCheckTasksWaitingTermination1917,57787
prvAllocateTCBAndStack (unsigned portSHORT usStackDepth)prvAllocateTCBAndStack1957,58643
prvListTaskWithinSingleList (const signed portCHAR * pcWriteBuffer,prvListTaskWithinSingleList1996,59686
usTaskCheckFreeStackSpace (const unsigned portCHAR * pucStackByte)usTaskCheckFreeStackSpace2026,60733
uxTaskGetStackHighWaterMark (xTaskHandle xTask)uxTaskGetStackHighWaterMark2047,61167
prvDeleteTCB (tskTCB * pxTCB)prvDeleteTCB2061,61516
xTaskGetCurrentTaskHandle (void)xTaskGetCurrentTaskHandle2077,61886
xTaskGetSchedulerState (void)xTaskGetSchedulerState2097,62198
vTaskPriorityInherit (xTaskHandle * const pxMutexHolder)vTaskPriorityInherit2126,62662
vTaskPriorityDisinherit (xTaskHandle * const pxMutexHolder)vTaskPriorityDisinherit2163,63697
vTaskEnterCritical (void)vTaskEnterCritical2192,64513
vTaskExitCritical (void)vTaskExitCritical2208,64782

os/core/include/FreeRTOS.h,3650
#define INC_FREERTOS_HINC_FREERTOS_H51,2351
typedef portBASE_TYPE (*pdTASK_HOOK_CODE) (void *);pdTASK_HOOK_CODE71,2775
#define configUSE_APPLICATION_TASK_TAG configUSE_APPLICATION_TASK_TAG132,5735
#define INCLUDE_uxTaskGetStackHighWaterMark INCLUDE_uxTaskGetStackHighWaterMark136,5828
#define configUSE_RECURSIVE_MUTEXES configUSE_RECURSIVE_MUTEXES140,5918
#define configUSE_MUTEXES configUSE_MUTEXES144,5990
#define configUSE_COUNTING_SEMAPHORES configUSE_COUNTING_SEMAPHORES148,6064
#define configUSE_ALTERNATIVE_API configUSE_ALTERNATIVE_API152,6146
#define portCRITICAL_NESTING_IN_TCB portCRITICAL_NESTING_IN_TCB156,6226
#define configMAX_TASK_NAME_LEN configMAX_TASK_NAME_LEN160,6304
#define configIDLE_SHOULD_YIELD	configIDLE_SHOULD_YIELD164,6379
#undef configMAX_TASK_NAME_LENconfigMAX_TASK_NAME_LEN168,6454
#define configMAX_TASK_NAME_LEN configMAX_TASK_NAME_LEN169,6485
#define INCLUDE_xTaskResumeFromISR INCLUDE_xTaskResumeFromISR173,6562
#define INCLUDE_xTaskGetSchedulerState INCLUDE_xTaskGetSchedulerState177,6646
#undef INCLUDE_xTaskGetCurrentTaskHandleINCLUDE_xTaskGetCurrentTaskHandle183,6883
#define INCLUDE_xTaskGetCurrentTaskHandle INCLUDE_xTaskGetCurrentTaskHandle184,6924
#define INCLUDE_xTaskGetCurrentTaskHandle INCLUDE_xTaskGetCurrentTaskHandle187,7016
#define traceSTART(traceSTART196,7251
#define traceEND(traceEND202,7390
#define traceTASK_SWITCHED_IN(traceTASK_SWITCHED_IN208,7582
#define traceTASK_SWITCHED_OUT(traceTASK_SWITCHED_OUT214,7799
#define traceBLOCKING_ON_QUEUE_RECEIVE(traceBLOCKING_ON_QUEUE_RECEIVE222,8131
#define traceBLOCKING_ON_QUEUE_SEND(traceBLOCKING_ON_QUEUE_SEND230,8478
#define configCHECK_FOR_STACK_OVERFLOW configCHECK_FOR_STACK_OVERFLOW234,8572
#define traceQUEUE_CREATE(traceQUEUE_CREATE240,8719
#define traceQUEUE_CREATE_FAILED(traceQUEUE_CREATE_FAILED244,8800
#define traceCREATE_MUTEX(traceCREATE_MUTEX248,8869
#define traceCREATE_MUTEX_FAILED(traceCREATE_MUTEX_FAILED252,8950
#define traceGIVE_MUTEX_RECURSIVE(traceGIVE_MUTEX_RECURSIVE256,9027
#define traceGIVE_MUTEX_RECURSIVE_FAILED(traceGIVE_MUTEX_RECURSIVE_FAILED260,9121
#define traceTAKE_MUTEX_RECURSIVE(traceTAKE_MUTEX_RECURSIVE264,9215
#define traceCREATE_COUNTING_SEMAPHORE(traceCREATE_COUNTING_SEMAPHORE268,9307
#define traceCREATE_COUNTING_SEMAPHORE_FAILED(traceCREATE_COUNTING_SEMAPHORE_FAILED272,9402
#define traceQUEUE_SEND(traceQUEUE_SEND276,9482
#define traceQUEUE_SEND_FAILED(traceQUEUE_SEND_FAILED280,9556
#define traceQUEUE_RECEIVE(traceQUEUE_RECEIVE284,9633
#define traceQUEUE_PEEK(traceQUEUE_PEEK288,9703
#define traceQUEUE_RECEIVE_FAILED(traceQUEUE_RECEIVE_FAILED292,9780
#define traceQUEUE_SEND_FROM_ISR(traceQUEUE_SEND_FROM_ISR296,9866
#define traceQUEUE_SEND_FROM_ISR_FAILED(traceQUEUE_SEND_FROM_ISR_FAILED300,9958
#define traceQUEUE_RECEIVE_FROM_ISR(traceQUEUE_RECEIVE_FROM_ISR304,10053
#define traceQUEUE_RECEIVE_FROM_ISR_FAILED(traceQUEUE_RECEIVE_FROM_ISR_FAILED308,10151
#define traceQUEUE_DELETE(traceQUEUE_DELETE312,10239
#define traceTASK_CREATE(traceTASK_CREATE316,10309
#define traceTASK_CREATE_FAILED(traceTASK_CREATE_FAILED320,10386
#define traceTASK_DELETE(traceTASK_DELETE324,10463
#define traceTASK_DELAY_UNTIL(traceTASK_DELAY_UNTIL328,10544
#define traceTASK_DELAY(traceTASK_DELAY332,10608
#define traceTASK_PRIORITY_SET(traceTASK_PRIORITY_SET336,10673
#define traceTASK_SUSPEND(traceTASK_SUSPEND340,10763
#define traceTASK_RESUME(traceTASK_RESUME344,10841
#define traceTASK_RESUME_FROM_ISR(traceTASK_RESUME_FROM_ISR348,10926
#define traceTASK_INCREMENT_TICK(traceTASK_INCREMENT_TICK352,11019

os/core/include/print.h,32
#define PRINT_HPRINT_H51,2345

os/core/include/semphr.h,1002
#define SEMAPHORE_HSEMAPHORE_H51,2349
typedef xQueueHandle xSemaphoreHandle;xSemaphoreHandle55,2390
#define semBINARY_SEMAPHORE_QUEUE_LENGTH	semBINARY_SEMAPHORE_QUEUE_LENGTH57,2430
#define semSEMAPHORE_QUEUE_ITEM_LENGTH	semSEMAPHORE_QUEUE_ITEM_LENGTH58,2499
#define semGIVE_BLOCK_TIME	semGIVE_BLOCK_TIME59,2567
#define vSemaphoreCreateBinary(vSemaphoreCreateBinary100,4040
#define xSemaphoreTake(xSemaphoreTake173,6514
#define xSemaphoreTakeRecursive(xSemaphoreTakeRecursive266,10177
#define xSemaphoreAltTake(xSemaphoreAltTake281,10952
#define xSemaphoreGive(xSemaphoreGive344,13166
#define xSemaphoreGiveRecursive(xSemaphoreGiveRecursive428,16349
#define xSemaphoreAltGive(xSemaphoreAltGive442,17099
#define xSemaphoreGiveFromISR(xSemaphoreGiveFromISR533,20186
#define xSemaphoreCreateMutex(xSemaphoreCreateMutex580,21901
#define xSemaphoreCreateRecursiveMutex(xSemaphoreCreateRecursiveMutex635,23912
#define xSemaphoreCreateCounting(xSemaphoreCreateCounting698,26386

os/core/include/comtest2.h,36
#define COMTEST_HCOMTEST_H51,2347

os/core/include/task.h,868
#define TASK_HTASK_H57,2417
#define tskKERNEL_VERSION_NUMBER tskKERNEL_VERSION_NUMBER70,2665
  typedef void *xTaskHandle;xTaskHandle82,2995
  typedef struct xTIME_OUTxTIME_OUT87,3057
    portBASE_TYPE xOverflowCount;xOverflowCount89,3088
    portTickType xTimeOnEntering;xTimeOnEntering90,3122
  } xTimeOutType;xTimeOutType91,3156
#define tskIDLE_PRIORITY	tskIDLE_PRIORITY98,3282
#define taskYIELD(taskYIELD108,3465
#define taskENTER_CRITICAL(taskENTER_CRITICAL122,3839
#define taskEXIT_CRITICAL(taskEXIT_CRITICAL136,4224
#define taskDISABLE_INTERRUPTS(taskDISABLE_INTERRUPTS146,4429
#define taskENABLE_INTERRUPTS(taskENABLE_INTERRUPTS156,4642
#define taskSCHEDULER_NOT_STARTED	taskSCHEDULER_NOT_STARTED159,4756
#define taskSCHEDULER_RUNNING	taskSCHEDULER_RUNNING160,4792
#define taskSCHEDULER_SUSPENDED	taskSCHEDULER_SUSPENDED161,4825

os/core/include/blocktim.h,52
#define BLOCK_TIME_TEST_HBLOCK_TIME_TEST_H51,2355

os/core/include/fileIO.h,36
#define FILE_OI_HFILE_OI_H51,2347

os/core/include/portable.h,276
#define PORTABLE_HPORTABLE_H55,2540
typedef void (__interrupt __far * pxISR) ();pxISR61,2726
typedef void (__interrupt __far * pxISR) ();pxISR66,2888
typedef void (__interrupt __far * pxISR) ();pxISR211,6039
typedef void (__interrupt __far * pxISR) ();pxISR219,6317

os/core/include/list.h,2220
#define LIST_HLIST_H86,3722
  struct xLIST_ITEMxLIST_ITEM95,3850
    portTickType xItemValue;	/*< The value being listed.  In most cases this is used to sort the list in descending order. */xItemValue97,3874
    volatile struct xLIST_ITEM *pxNext;	/*< Pointer to the next xListItem in the list. */pxNext98,4000
    volatile struct xLIST_ITEM *pxPrevious;	/*< Pointer to the previous xListItem in the list. */pxPrevious99,4090
    void *pvOwner;		/*< Pointer to the object (normally a TCB) that contains the list item.  There is therefore a two way link between the object containing the list item and the list item itself. */pvOwner100,4188
    void *pvContainer;		/*< Pointer to the list in which this list item is placed (if any). */pvContainer101,4388
  typedef struct xLIST_ITEM xListItem;	/* For some reason lint wants this as two separate definitions. */xListItem103,4488
  struct xMINI_LIST_ITEMxMINI_LIST_ITEM105,4595
    portTickType xItemValue;xItemValue107,4624
    volatile struct xLIST_ITEM *pxNext;pxNext108,4653
    volatile struct xLIST_ITEM *pxPrevious;pxPrevious109,4693
  typedef struct xMINI_LIST_ITEM xMiniListItem;xMiniListItem111,4742
  typedef struct xLISTxLIST116,4856
    volatile unsigned portBASE_TYPE uxNumberOfItems;uxNumberOfItems118,4883
    volatile xListItem *pxIndex;	/*< Used to walk through the list.  Points to the last item returned by a call to pvListGetOwnerOfNextEntry (). */pxIndex119,4936
    volatile xMiniListItem xListEnd;	/*< List item that contains the maximum possible item value meaning it is always at the end of the list and is therefore used as a marker. */xListEnd120,5084
  } xList;xList121,5263
#define listSET_LIST_ITEM_OWNER(listSET_LIST_ITEM_OWNER130,5502
#define listSET_LIST_ITEM_VALUE(listSET_LIST_ITEM_VALUE139,5819
#define listGET_LIST_ITEM_VALUE(listGET_LIST_ITEM_VALUE149,6187
#define listLIST_IS_EMPTY(listLIST_IS_EMPTY158,6471
#define listCURRENT_LIST_LENGTH(listCURRENT_LIST_LENGTH163,6641
#define listGET_OWNER_OF_NEXT_ENTRY(listGET_OWNER_OF_NEXT_ENTRY184,7532
#define listGET_OWNER_OF_HEAD_ENTRY(listGET_OWNER_OF_HEAD_ENTRY214,8799
#define listIS_CONTAINED_WITHIN(listIS_CONTAINED_WITHIN226,9418

os/core/include/projdefs.h,558
#define PROJDEFS_HPROJDEFS_H51,2348
typedef void (*pdTASK_CODE) (void *);pdTASK_CODE54,2434
#define pdTRUE	pdTRUE56,2473
#define pdFALSE	pdFALSE57,2495
#define pdPASS	pdPASS59,2519
#define pdFAIL	pdFAIL60,2548
#define errQUEUE_EMPTY	errQUEUE_EMPTY61,2577
#define errQUEUE_FULL	errQUEUE_FULL62,2612
#define errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY	errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY65,2672
#define errNO_TASK_TO_RUN	errNO_TASK_TO_RUN66,2725
#define errQUEUE_BLOCKED	errQUEUE_BLOCKED67,2763
#define errQUEUE_YIELD	errQUEUE_YIELD68,2800

os/core/include/comtest.h,36
#define COMTEST_HCOMTEST_H51,2347

os/core/include/serial.h,1297
#define SERIAL_COMMS_HSERIAL_COMMS_H51,2352
typedef void *xComPortHandle;xComPortHandle53,2376
  serCOM1,serCOM157,2422
  serCOM2,serCOM258,2433
  serCOM3,serCOM359,2444
  serCOM4,serCOM460,2455
  serCOM5,serCOM561,2466
  serCOM6,serCOM662,2477
  serCOM7,serCOM763,2488
  serCOM8serCOM864,2499
} eCOMPort;eCOMPort65,2509
  serNO_PARITY,serNO_PARITY69,2537
  serODD_PARITY,serODD_PARITY70,2553
  serEVEN_PARITY,serEVEN_PARITY71,2570
  serMARK_PARITY,serMARK_PARITY72,2588
  serSPACE_PARITYserSPACE_PARITY73,2606
} eParity;eParity74,2624
  serSTOP_1,serSTOP_178,2651
  serSTOP_2serSTOP_279,2664
} eStopBits;eStopBits80,2676
  serBITS_5,serBITS_584,2705
  serBITS_6,serBITS_685,2718
  serBITS_7,serBITS_786,2731
  serBITS_8serBITS_887,2744
} eDataBits;eDataBits88,2756
  ser50,ser5092,2785
  ser75,ser7593,2794
  ser110,ser11094,2803
  ser134,ser13495,2813
  ser150,ser15096,2823
  ser200,ser20097,2833
  ser300,ser30098,2843
  ser600,ser60099,2853
  ser1200,ser1200100,2863
  ser1800,ser1800101,2874
  ser2400,ser2400102,2885
  ser4800,ser4800103,2896
  ser9600,ser9600104,2907
  ser19200,ser19200105,2918
  ser38400,ser38400106,2930
  ser57600,ser57600107,2942
  ser115200ser115200108,2954
} eBaud;eBaud109,2966

os/core/include/mevents.h,44
#define EVENTS_TEST_HEVENTS_TEST_H51,2351

os/core/include/queue.h,841
#define QUEUE_HQUEUE_H51,2344
  typedef void *xQueueHandle;xQueueHandle57,2400
#define	queueSEND_TO_BACK	queueSEND_TO_BACK60,2460
#define	queueSEND_TO_FRONT	queueSEND_TO_FRONT61,2492
#define xQueueSendToFront(xQueueSendToFront203,6960
#define xQueueSendToBack(xQueueSendToBack285,9746
#define xQueueSend(xQueueSend369,12673
#define xQueuePeek(xQueuePeek552,18633
#define xQueueReceive(xQueueReceive643,21415
#define xQueueSendToFrontFromISR(xQueueSendToFrontFromISR842,27894
#define xQueueSendToBackFromISR(xQueueSendToBackFromISR913,30438
#define xQueueSendFromISR(xQueueSendFromISR987,33175
#define xQueueAltSendToFront(xQueueAltSendToFront1196,40788
#define xQueueAltSendToBack(xQueueAltSendToBack1197,40936
#define xQueueAltReceive(xQueueAltReceive1198,41082
#define xQueueAltPeek(xQueueAltPeek1199,41208

os/core/include/dynamic.h,62
#define DYNAMIC_MANIPULATION_HDYNAMIC_MANIPULATION_H51,2360

os/core/include/death.h,46
#define SUICIDE_TASK_HSUICIDE_TASK_H51,2352

os/core/include/crhook.h,34
#define CRHOOK_HCRHOOK_H51,2346

os/core/include/croutine.h,1521
#define CO_ROUTINE_HCO_ROUTINE_H50,2348
  typedef void *xCoRoutineHandle;xCoRoutineHandle62,2635
  typedef void (*crCOROUTINE_CODE) (xCoRoutineHandle, unsigned portBASE_TYPE);crCOROUTINE_CODE65,2742
  typedef struct corCoRoutineControlBlockcorCoRoutineControlBlock67,2822
    crCOROUTINE_CODE pxCoRoutineFunction;pxCoRoutineFunction69,2868
    xListItem xGenericListItem;	/*< List item used to place the CRCB in ready and blocked queues. */xGenericListItem70,2910
    xListItem xEventListItem;	/*< List item used to place the CRCB in event lists. */xEventListItem71,3011
    unsigned portBASE_TYPE uxPriority;	/*< The priority of the co-routine in relation to other co-routines. */uxPriority72,3097
    unsigned portBASE_TYPE uxIndex;	/*< Used to distinguish between co-routines when multiple co-routines use the same co-routine function. */uxIndex73,3208
    unsigned portSHORT uxState;	/*< Used internally by the co-routine implementation. */uxState74,3351
  } corCRCB;			/* Co-routine control block.  Note must be identical in size down to uxPriority with tskTCB. */corCRCB75,3440
#define crSTART(crSTART224,8230
#define crEND(crEND255,9006
#define crSET_STATE0(crSET_STATE0261,9184
#define crSET_STATE1(crSET_STATE1262,9296
#define crDELAY(crDELAY310,10904
#define crQUEUE_SEND(crQUEUE_SEND400,14244
#define crQUEUE_RECEIVE(crQUEUE_RECEIVE492,17866
#define crQUEUE_SEND_FROM_ISR(crQUEUE_SEND_FROM_ISR601,22019
#define crQUEUE_RECEIVE_FROM_ISR(crQUEUE_RECEIVE_FROM_ISR714,25957

os/core/ARM7_AT91SAM7S/portISR.c,759
#define portTIMER_MATCH_ISR_BIT	portTIMER_MATCH_ISR_BIT71,2924
#define portCLEAR_VIC_INTERRUPT	portCLEAR_VIC_INTERRUPT72,2988
#define portNO_CRITICAL_NESTING	portNO_CRITICAL_NESTING75,3104
volatile unsigned portLONG ulCriticalNesting = 9999UL;ulCriticalNesting76,3165
vPortISRStartFirstTask (void)vPortISRStartFirstTask91,3649
vPortYieldProcessor (void)vPortYieldProcessor109,4273
vNonPreemptiveTick (void)vNonPreemptiveTick139,5221
vPreemptiveTick (void)vPreemptiveTick161,5844
vPortDisableInterruptsFromThumb (void)vPortDisableInterruptsFromThumb191,6763
vPortEnableInterruptsFromThumb (void)vPortEnableInterruptsFromThumb202,7399
vPortEnterCritical (void)vPortEnterCritical218,8343
vPortExitCritical (void)vPortExitCritical234,9170

os/core/ARM7_AT91SAM7S/port.c,1046
#define portINITIAL_SPSR	portINITIAL_SPSR78,3110
#define portTHUMB_MODE_BIT	portTHUMB_MODE_BIT79,3215
#define portINSTRUCTION_SIZE	portINSTRUCTION_SIZE80,3273
#define portNO_CRITICAL_SECTION_NESTING	portNO_CRITICAL_SECTION_NESTING81,3329
#define portENABLE_TIMER	portENABLE_TIMER84,3443
#define portPRESCALE_VALUE	portPRESCALE_VALUE85,3501
#define portINTERRUPT_ON_MATCH	portINTERRUPT_ON_MATCH86,3535
#define portRESET_COUNT_ON_MATCH	portRESET_COUNT_ON_MATCH87,3598
#define portPIT_CLOCK_DIVISOR	portPIT_CLOCK_DIVISOR90,3706
#define portPIT_COUNTER_VALUE	portPIT_COUNTER_VALUE91,3767
#define portINT_LEVEL_SENSITIVE portINT_LEVEL_SENSITIVE93,3883
#define portPIT_ENABLE portPIT_ENABLE94,3918
#define portPIT_INT_ENABLE portPIT_INT_ENABLE95,3984
pxPortInitialiseStack (portSTACK_TYPE * pxTopOfStack, pdTASK_CODE pxCode,pxPortInitialiseStack116,4614
xPortStartScheduler (void)xPortStartScheduler191,7165
vPortEndScheduler (void)vPortEndScheduler207,7495
prvSetupTimerInterrupt (void)prvSetupTimerInterrupt219,7797

os/core/ARM7_AT91SAM7S/AT91SAM7X256.h,133109
#define AT91SAM7X256_HAT91SAM7X256_H47,3106
typedef volatile unsigned int AT91_REG;	// Hardware register definitionAT91_REG49,3130
typedef struct _AT91S_SYS_AT91S_SYS54,3429
  AT91_REG AIC_SMR[32];		// Source Mode RegisterAIC_SMR56,3457
  AT91_REG AIC_SVR[32];		// Source Vector RegisterAIC_SVR57,3506
  AT91_REG AIC_IVR;		// IRQ Vector RegisterAIC_IVR58,3557
  AT91_REG AIC_FVR;		// FIQ Vector RegisterAIC_FVR59,3601
  AT91_REG AIC_ISR;		// Interrupt Status RegisterAIC_ISR60,3645
  AT91_REG AIC_IPR;		// Interrupt Pending RegisterAIC_IPR61,3695
  AT91_REG AIC_IMR;		// Interrupt Mask RegisterAIC_IMR62,3746
  AT91_REG AIC_CISR;		// Core Interrupt Status RegisterAIC_CISR63,3794
  AT91_REG Reserved0[2];	// Reserved064,3850
  AT91_REG AIC_IECR;		// Interrupt Enable Command RegisterAIC_IECR65,3879
  AT91_REG AIC_IDCR;		// Interrupt Disable Command RegisterAIC_IDCR66,3938
  AT91_REG AIC_ICCR;		// Interrupt Clear Command RegisterAIC_ICCR67,3998
  AT91_REG AIC_ISCR;		// Interrupt Set Command RegisterAIC_ISCR68,4056
  AT91_REG AIC_EOICR;		// End of Interrupt Command RegisterAIC_EOICR69,4112
  AT91_REG AIC_SPU;		// Spurious Vector RegisterAIC_SPU70,4172
  AT91_REG AIC_DCR;		// Debug Control Register (Protect)AIC_DCR71,4221
  AT91_REG Reserved1[1];	// Reserved172,4278
  AT91_REG AIC_FFER;		// Fast Forcing Enable RegisterAIC_FFER73,4307
  AT91_REG AIC_FFDR;		// Fast Forcing Disable RegisterAIC_FFDR74,4361
  AT91_REG AIC_FFSR;		// Fast Forcing Status RegisterAIC_FFSR75,4416
  AT91_REG Reserved2[45];	// Reserved276,4470
  AT91_REG DBGU_CR;		// Control RegisterDBGU_CR77,4500
  AT91_REG DBGU_MR;		// Mode RegisterDBGU_MR78,4541
  AT91_REG DBGU_IER;		// Interrupt Enable RegisterDBGU_IER79,4579
  AT91_REG DBGU_IDR;		// Interrupt Disable RegisterDBGU_IDR80,4630
  AT91_REG DBGU_IMR;		// Interrupt Mask RegisterDBGU_IMR81,4682
  AT91_REG DBGU_CSR;		// Channel Status RegisterDBGU_CSR82,4731
  AT91_REG DBGU_RHR;		// Receiver Holding RegisterDBGU_RHR83,4780
  AT91_REG DBGU_THR;		// Transmitter Holding RegisterDBGU_THR84,4831
  AT91_REG DBGU_BRGR;		// Baud Rate Generator RegisterDBGU_BRGR85,4885
  AT91_REG Reserved3[7];	// Reserved386,4940
  AT91_REG DBGU_CIDR;		// Chip ID RegisterDBGU_CIDR87,4969
  AT91_REG DBGU_EXID;		// Chip ID Extension RegisterDBGU_EXID88,5012
  AT91_REG DBGU_FNTR;		// Force NTRST RegisterDBGU_FNTR89,5065
  AT91_REG Reserved4[45];	// Reserved490,5112
  AT91_REG DBGU_RPR;		// Receive Pointer RegisterDBGU_RPR91,5142
  AT91_REG DBGU_RCR;		// Receive Counter RegisterDBGU_RCR92,5192
  AT91_REG DBGU_TPR;		// Transmit Pointer RegisterDBGU_TPR93,5242
  AT91_REG DBGU_TCR;		// Transmit Counter RegisterDBGU_TCR94,5293
  AT91_REG DBGU_RNPR;		// Receive Next Pointer RegisterDBGU_RNPR95,5344
  AT91_REG DBGU_RNCR;		// Receive Next Counter RegisterDBGU_RNCR96,5400
  AT91_REG DBGU_TNPR;		// Transmit Next Pointer RegisterDBGU_TNPR97,5456
  AT91_REG DBGU_TNCR;		// Transmit Next Counter RegisterDBGU_TNCR98,5513
  AT91_REG DBGU_PTCR;		// PDC Transfer Control RegisterDBGU_PTCR99,5570
  AT91_REG DBGU_PTSR;		// PDC Transfer Status RegisterDBGU_PTSR100,5626
  AT91_REG Reserved5[54];	// Reserved5101,5681
  AT91_REG PIOA_PER;		// PIO Enable RegisterPIOA_PER102,5711
  AT91_REG PIOA_PDR;		// PIO Disable RegisterPIOA_PDR103,5756
  AT91_REG PIOA_PSR;		// PIO Status RegisterPIOA_PSR104,5802
  AT91_REG Reserved6[1];	// Reserved6105,5847
  AT91_REG PIOA_OER;		// Output Enable RegisterPIOA_OER106,5876
  AT91_REG PIOA_ODR;		// Output Disable RegisterrPIOA_ODR107,5924
  AT91_REG PIOA_OSR;		// Output Status RegisterPIOA_OSR108,5974
  AT91_REG Reserved7[1];	// Reserved7109,6022
  AT91_REG PIOA_IFER;		// Input Filter Enable RegisterPIOA_IFER110,6051
  AT91_REG PIOA_IFDR;		// Input Filter Disable RegisterPIOA_IFDR111,6106
  AT91_REG PIOA_IFSR;		// Input Filter Status RegisterPIOA_IFSR112,6162
  AT91_REG Reserved8[1];	// Reserved8113,6217
  AT91_REG PIOA_SODR;		// Set Output Data RegisterPIOA_SODR114,6246
  AT91_REG PIOA_CODR;		// Clear Output Data RegisterPIOA_CODR115,6297
  AT91_REG PIOA_ODSR;		// Output Data Status RegisterPIOA_ODSR116,6350
  AT91_REG PIOA_PDSR;		// Pin Data Status RegisterPIOA_PDSR117,6404
  AT91_REG PIOA_IER;		// Interrupt Enable RegisterPIOA_IER118,6455
  AT91_REG PIOA_IDR;		// Interrupt Disable RegisterPIOA_IDR119,6506
  AT91_REG PIOA_IMR;		// Interrupt Mask RegisterPIOA_IMR120,6558
  AT91_REG PIOA_ISR;		// Interrupt Status RegisterPIOA_ISR121,6607
  AT91_REG PIOA_MDER;		// Multi-driver Enable RegisterPIOA_MDER122,6658
  AT91_REG PIOA_MDDR;		// Multi-driver Disable RegisterPIOA_MDDR123,6713
  AT91_REG PIOA_MDSR;		// Multi-driver Status RegisterPIOA_MDSR124,6769
  AT91_REG Reserved9[1];	// Reserved9125,6824
  AT91_REG PIOA_PPUDR;		// Pull-up Disable RegisterPIOA_PPUDR126,6853
  AT91_REG PIOA_PPUER;		// Pull-up Enable RegisterPIOA_PPUER127,6905
  AT91_REG PIOA_PPUSR;		// Pull-up Status RegisterPIOA_PPUSR128,6956
  AT91_REG Reserved10[1];	// Reserved10129,7007
  AT91_REG PIOA_ASR;		// Select A RegisterPIOA_ASR130,7037
  AT91_REG PIOA_BSR;		// Select B RegisterPIOA_BSR131,7080
  AT91_REG PIOA_ABSR;		// AB Select Status RegisterPIOA_ABSR132,7123
  AT91_REG Reserved11[9];	// Reserved11133,7175
  AT91_REG PIOA_OWER;		// Output Write Enable RegisterPIOA_OWER134,7205
  AT91_REG PIOA_OWDR;		// Output Write Disable RegisterPIOA_OWDR135,7260
  AT91_REG PIOA_OWSR;		// Output Write Status RegisterPIOA_OWSR136,7316
  AT91_REG Reserved12[85];	// Reserved12137,7371
  AT91_REG PIOB_PER;		// PIO Enable RegisterPIOB_PER138,7402
  AT91_REG PIOB_PDR;		// PIO Disable RegisterPIOB_PDR139,7447
  AT91_REG PIOB_PSR;		// PIO Status RegisterPIOB_PSR140,7493
  AT91_REG Reserved13[1];	// Reserved13141,7538
  AT91_REG PIOB_OER;		// Output Enable RegisterPIOB_OER142,7568
  AT91_REG PIOB_ODR;		// Output Disable RegisterrPIOB_ODR143,7616
  AT91_REG PIOB_OSR;		// Output Status RegisterPIOB_OSR144,7666
  AT91_REG Reserved14[1];	// Reserved14145,7714
  AT91_REG PIOB_IFER;		// Input Filter Enable RegisterPIOB_IFER146,7744
  AT91_REG PIOB_IFDR;		// Input Filter Disable RegisterPIOB_IFDR147,7799
  AT91_REG PIOB_IFSR;		// Input Filter Status RegisterPIOB_IFSR148,7855
  AT91_REG Reserved15[1];	// Reserved15149,7910
  AT91_REG PIOB_SODR;		// Set Output Data RegisterPIOB_SODR150,7940
  AT91_REG PIOB_CODR;		// Clear Output Data RegisterPIOB_CODR151,7991
  AT91_REG PIOB_ODSR;		// Output Data Status RegisterPIOB_ODSR152,8044
  AT91_REG PIOB_PDSR;		// Pin Data Status RegisterPIOB_PDSR153,8098
  AT91_REG PIOB_IER;		// Interrupt Enable RegisterPIOB_IER154,8149
  AT91_REG PIOB_IDR;		// Interrupt Disable RegisterPIOB_IDR155,8200
  AT91_REG PIOB_IMR;		// Interrupt Mask RegisterPIOB_IMR156,8252
  AT91_REG PIOB_ISR;		// Interrupt Status RegisterPIOB_ISR157,8301
  AT91_REG PIOB_MDER;		// Multi-driver Enable RegisterPIOB_MDER158,8352
  AT91_REG PIOB_MDDR;		// Multi-driver Disable RegisterPIOB_MDDR159,8407
  AT91_REG PIOB_MDSR;		// Multi-driver Status RegisterPIOB_MDSR160,8463
  AT91_REG Reserved16[1];	// Reserved16161,8518
  AT91_REG PIOB_PPUDR;		// Pull-up Disable RegisterPIOB_PPUDR162,8548
  AT91_REG PIOB_PPUER;		// Pull-up Enable RegisterPIOB_PPUER163,8600
  AT91_REG PIOB_PPUSR;		// Pull-up Status RegisterPIOB_PPUSR164,8651
  AT91_REG Reserved17[1];	// Reserved17165,8702
  AT91_REG PIOB_ASR;		// Select A RegisterPIOB_ASR166,8732
  AT91_REG PIOB_BSR;		// Select B RegisterPIOB_BSR167,8775
  AT91_REG PIOB_ABSR;		// AB Select Status RegisterPIOB_ABSR168,8818
  AT91_REG Reserved18[9];	// Reserved18169,8870
  AT91_REG PIOB_OWER;		// Output Write Enable RegisterPIOB_OWER170,8900
  AT91_REG PIOB_OWDR;		// Output Write Disable RegisterPIOB_OWDR171,8955
  AT91_REG PIOB_OWSR;		// Output Write Status RegisterPIOB_OWSR172,9011
  AT91_REG Reserved19[341];	// Reserved19173,9066
  AT91_REG PMC_SCER;		// System Clock Enable RegisterPMC_SCER174,9098
  AT91_REG PMC_SCDR;		// System Clock Disable RegisterPMC_SCDR175,9152
  AT91_REG PMC_SCSR;		// System Clock Status RegisterPMC_SCSR176,9207
  AT91_REG Reserved20[1];	// Reserved20177,9261
  AT91_REG PMC_PCER;		// Peripheral Clock Enable RegisterPMC_PCER178,9291
  AT91_REG PMC_PCDR;		// Peripheral Clock Disable RegisterPMC_PCDR179,9349
  AT91_REG PMC_PCSR;		// Peripheral Clock Status RegisterPMC_PCSR180,9408
  AT91_REG Reserved21[1];	// Reserved21181,9466
  AT91_REG PMC_MOR;		// Main Oscillator RegisterPMC_MOR182,9496
  AT91_REG PMC_MCFR;		// Main Clock  Frequency RegisterPMC_MCFR183,9545
  AT91_REG Reserved22[1];	// Reserved22184,9601
  AT91_REG PMC_PLLR;		// PLL RegisterPMC_PLLR185,9631
  AT91_REG PMC_MCKR;		// Master Clock RegisterPMC_MCKR186,9669
  AT91_REG Reserved23[3];	// Reserved23187,9716
  AT91_REG PMC_PCKR[4];		// Programmable Clock RegisterPMC_PCKR188,9746
  AT91_REG Reserved24[4];	// Reserved24189,9802
  AT91_REG PMC_IER;		// Interrupt Enable RegisterPMC_IER190,9832
  AT91_REG PMC_IDR;		// Interrupt Disable RegisterPMC_IDR191,9882
  AT91_REG PMC_SR;		// Status RegisterPMC_SR192,9933
  AT91_REG PMC_IMR;		// Interrupt Mask RegisterPMC_IMR193,9972
  AT91_REG Reserved25[36];	// Reserved25194,10020
  AT91_REG RSTC_RCR;		// Reset Control RegisterRSTC_RCR195,10051
  AT91_REG RSTC_RSR;		// Reset Status RegisterRSTC_RSR196,10099
  AT91_REG RSTC_RMR;		// Reset Mode RegisterRSTC_RMR197,10146
  AT91_REG Reserved26[5];	// Reserved26198,10191
  AT91_REG RTTC_RTMR;		// Real-time Mode RegisterRTTC_RTMR199,10221
  AT91_REG RTTC_RTAR;		// Real-time Alarm RegisterRTTC_RTAR200,10271
  AT91_REG RTTC_RTVR;		// Real-time Value RegisterRTTC_RTVR201,10322
  AT91_REG RTTC_RTSR;		// Real-time Status RegisterRTTC_RTSR202,10373
  AT91_REG PITC_PIMR;		// Period Interval Mode RegisterPITC_PIMR203,10425
  AT91_REG PITC_PISR;		// Period Interval Status RegisterPITC_PISR204,10481
  AT91_REG PITC_PIVR;		// Period Interval Value RegisterPITC_PIVR205,10539
  AT91_REG PITC_PIIR;		// Period Interval Image RegisterPITC_PIIR206,10596
  AT91_REG WDTC_WDCR;		// Watchdog Control RegisterWDTC_WDCR207,10653
  AT91_REG WDTC_WDMR;		// Watchdog Mode RegisterWDTC_WDMR208,10705
  AT91_REG WDTC_WDSR;		// Watchdog Status RegisterWDTC_WDSR209,10754
  AT91_REG Reserved27[5];	// Reserved27210,10805
  AT91_REG VREG_MR;		// Voltage Regulator Mode RegisterVREG_MR211,10835
} AT91S_SYS, *AT91PS_SYS;AT91S_SYS212,10891
} AT91S_SYS, *AT91PS_SYS;AT91PS_SYS212,10891
typedef struct _AT91S_AIC_AT91S_AIC218,11156
  AT91_REG AIC_SMR[32];		// Source Mode RegisterAIC_SMR220,11184
  AT91_REG AIC_SVR[32];		// Source Vector RegisterAIC_SVR221,11233
  AT91_REG AIC_IVR;		// IRQ Vector RegisterAIC_IVR222,11284
  AT91_REG AIC_FVR;		// FIQ Vector RegisterAIC_FVR223,11328
  AT91_REG AIC_ISR;		// Interrupt Status RegisterAIC_ISR224,11372
  AT91_REG AIC_IPR;		// Interrupt Pending RegisterAIC_IPR225,11422
  AT91_REG AIC_IMR;		// Interrupt Mask RegisterAIC_IMR226,11473
  AT91_REG AIC_CISR;		// Core Interrupt Status RegisterAIC_CISR227,11521
  AT91_REG Reserved0[2];	// Reserved0228,11577
  AT91_REG AIC_IECR;		// Interrupt Enable Command RegisterAIC_IECR229,11606
  AT91_REG AIC_IDCR;		// Interrupt Disable Command RegisterAIC_IDCR230,11665
  AT91_REG AIC_ICCR;		// Interrupt Clear Command RegisterAIC_ICCR231,11725
  AT91_REG AIC_ISCR;		// Interrupt Set Command RegisterAIC_ISCR232,11783
  AT91_REG AIC_EOICR;		// End of Interrupt Command RegisterAIC_EOICR233,11839
  AT91_REG AIC_SPU;		// Spurious Vector RegisterAIC_SPU234,11899
  AT91_REG AIC_DCR;		// Debug Control Register (Protect)AIC_DCR235,11948
  AT91_REG Reserved1[1];	// Reserved1236,12005
  AT91_REG AIC_FFER;		// Fast Forcing Enable RegisterAIC_FFER237,12034
  AT91_REG AIC_FFDR;		// Fast Forcing Disable RegisterAIC_FFDR238,12088
  AT91_REG AIC_FFSR;		// Fast Forcing Status RegisterAIC_FFSR239,12143
} AT91S_AIC, *AT91PS_AIC;AT91S_AIC240,12197
} AT91S_AIC, *AT91PS_AIC;AT91PS_AIC240,12197
#define AT91C_AIC_PRIOR AT91C_AIC_PRIOR243,12291
#define 	AT91C_AIC_PRIOR_LOWEST AT91C_AIC_PRIOR_LOWEST244,12372
#define 	AT91C_AIC_PRIOR_HIGHEST AT91C_AIC_PRIOR_HIGHEST245,12470
#define AT91C_AIC_SRCTYPE AT91C_AIC_SRCTYPE246,12569
#define 	AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL247,12657
#define 	AT91C_AIC_SRCTYPE_EXT_LOW_LEVEL AT91C_AIC_SRCTYPE_EXT_LOW_LEVEL248,12790
#define 	AT91C_AIC_SRCTYPE_INT_POSITIVE_EDGE AT91C_AIC_SRCTYPE_INT_POSITIVE_EDGE249,12922
#define 	AT91C_AIC_SRCTYPE_EXT_NEGATIVE_EDGE AT91C_AIC_SRCTYPE_EXT_NEGATIVE_EDGE250,13058
#define 	AT91C_AIC_SRCTYPE_HIGH_LEVEL AT91C_AIC_SRCTYPE_HIGH_LEVEL251,13194
#define 	AT91C_AIC_SRCTYPE_POSITIVE_EDGE AT91C_AIC_SRCTYPE_POSITIVE_EDGE252,13339
#define AT91C_AIC_NFIQ AT91C_AIC_NFIQ254,13575
#define AT91C_AIC_NIRQ AT91C_AIC_NIRQ255,13653
#define AT91C_AIC_DCR_PROT AT91C_AIC_DCR_PROT257,13820
#define AT91C_AIC_DCR_GMSK AT91C_AIC_DCR_GMSK258,13902
typedef struct _AT91S_PDC_AT91S_PDC263,14215
  AT91_REG PDC_RPR;		// Receive Pointer RegisterPDC_RPR265,14243
  AT91_REG PDC_RCR;		// Receive Counter RegisterPDC_RCR266,14292
  AT91_REG PDC_TPR;		// Transmit Pointer RegisterPDC_TPR267,14341
  AT91_REG PDC_TCR;		// Transmit Counter RegisterPDC_TCR268,14391
  AT91_REG PDC_RNPR;		// Receive Next Pointer RegisterPDC_RNPR269,14441
  AT91_REG PDC_RNCR;		// Receive Next Counter RegisterPDC_RNCR270,14496
  AT91_REG PDC_TNPR;		// Transmit Next Pointer RegisterPDC_TNPR271,14551
  AT91_REG PDC_TNCR;		// Transmit Next Counter RegisterPDC_TNCR272,14607
  AT91_REG PDC_PTCR;		// PDC Transfer Control RegisterPDC_PTCR273,14663
  AT91_REG PDC_PTSR;		// PDC Transfer Status RegisterPDC_PTSR274,14718
} AT91S_PDC, *AT91PS_PDC;AT91S_PDC275,14772
} AT91S_PDC, *AT91PS_PDC;AT91PS_PDC275,14772
#define AT91C_PDC_RXTEN AT91C_PDC_RXTEN278,14881
#define AT91C_PDC_RXTDIS AT91C_PDC_RXTDIS279,14972
#define AT91C_PDC_TXTEN AT91C_PDC_TXTEN280,15064
#define AT91C_PDC_TXTDIS AT91C_PDC_TXTDIS281,15158
typedef struct _AT91S_DBGU_AT91S_DBGU287,15553
  AT91_REG DBGU_CR;		// Control RegisterDBGU_CR289,15582
  AT91_REG DBGU_MR;		// Mode RegisterDBGU_MR290,15623
  AT91_REG DBGU_IER;		// Interrupt Enable RegisterDBGU_IER291,15661
  AT91_REG DBGU_IDR;		// Interrupt Disable RegisterDBGU_IDR292,15712
  AT91_REG DBGU_IMR;		// Interrupt Mask RegisterDBGU_IMR293,15764
  AT91_REG DBGU_CSR;		// Channel Status RegisterDBGU_CSR294,15813
  AT91_REG DBGU_RHR;		// Receiver Holding RegisterDBGU_RHR295,15862
  AT91_REG DBGU_THR;		// Transmitter Holding RegisterDBGU_THR296,15913
  AT91_REG DBGU_BRGR;		// Baud Rate Generator RegisterDBGU_BRGR297,15967
  AT91_REG Reserved0[7];	// Reserved0298,16022
  AT91_REG DBGU_CIDR;		// Chip ID RegisterDBGU_CIDR299,16051
  AT91_REG DBGU_EXID;		// Chip ID Extension RegisterDBGU_EXID300,16094
  AT91_REG DBGU_FNTR;		// Force NTRST RegisterDBGU_FNTR301,16147
  AT91_REG Reserved1[45];	// Reserved1302,16194
  AT91_REG DBGU_RPR;		// Receive Pointer RegisterDBGU_RPR303,16224
  AT91_REG DBGU_RCR;		// Receive Counter RegisterDBGU_RCR304,16274
  AT91_REG DBGU_TPR;		// Transmit Pointer RegisterDBGU_TPR305,16324
  AT91_REG DBGU_TCR;		// Transmit Counter RegisterDBGU_TCR306,16375
  AT91_REG DBGU_RNPR;		// Receive Next Pointer RegisterDBGU_RNPR307,16426
  AT91_REG DBGU_RNCR;		// Receive Next Counter RegisterDBGU_RNCR308,16482
  AT91_REG DBGU_TNPR;		// Transmit Next Pointer RegisterDBGU_TNPR309,16538
  AT91_REG DBGU_TNCR;		// Transmit Next Counter RegisterDBGU_TNCR310,16595
  AT91_REG DBGU_PTCR;		// PDC Transfer Control RegisterDBGU_PTCR311,16652
  AT91_REG DBGU_PTSR;		// PDC Transfer Status RegisterDBGU_PTSR312,16708
} AT91S_DBGU, *AT91PS_DBGU;AT91S_DBGU313,16763
} AT91S_DBGU, *AT91PS_DBGU;AT91PS_DBGU313,16763
#define AT91C_US_RSTRX AT91C_US_RSTRX316,16871
#define AT91C_US_RSTTX AT91C_US_RSTTX317,16953
#define AT91C_US_RXEN AT91C_US_RXEN318,17038
#define AT91C_US_RXDIS AT91C_US_RXDIS319,17121
#define AT91C_US_TXEN AT91C_US_TXEN320,17205
#define AT91C_US_TXDIS AT91C_US_TXDIS321,17291
#define AT91C_US_RSTSTA AT91C_US_RSTSTA322,17378
#define AT91C_US_PAR AT91C_US_PAR324,17539
#define 	AT91C_US_PAR_EVEN AT91C_US_PAR_EVEN325,17618
#define 	AT91C_US_PAR_ODD AT91C_US_PAR_ODD326,17710
#define 	AT91C_US_PAR_SPACE AT91C_US_PAR_SPACE327,17801
#define 	AT91C_US_PAR_MARK AT91C_US_PAR_MARK328,17908
#define 	AT91C_US_PAR_NONE AT91C_US_PAR_NONE329,18014
#define 	AT91C_US_PAR_MULTI_DROP AT91C_US_PAR_MULTI_DROP330,18104
#define AT91C_US_CHMODE AT91C_US_CHMODE331,18200
#define 	AT91C_US_CHMODE_NORMAL AT91C_US_CHMODE_NORMAL332,18280
#define 	AT91C_US_CHMODE_AUTO AT91C_US_CHMODE_AUTO333,18422
#define 	AT91C_US_CHMODE_LOCAL AT91C_US_CHMODE_LOCAL334,18570
#define 	AT91C_US_CHMODE_REMOTE AT91C_US_CHMODE_REMOTE335,18734
#define AT91C_US_RXRDY AT91C_US_RXRDY337,18967
#define AT91C_US_TXRDY AT91C_US_TXRDY338,19050
#define AT91C_US_ENDRX AT91C_US_ENDRX339,19133
#define AT91C_US_ENDTX AT91C_US_ENDTX340,19234
#define AT91C_US_OVRE AT91C_US_OVRE341,19327
#define AT91C_US_FRAME AT91C_US_FRAME342,19412
#define AT91C_US_PARE AT91C_US_PARE343,19503
#define AT91C_US_TXEMPTY AT91C_US_TXEMPTY344,19593
#define AT91C_US_TXBUFE AT91C_US_TXBUFE345,19678
#define AT91C_US_RXBUFF AT91C_US_RXBUFF346,19762
#define AT91C_US_COMM_TX AT91C_US_COMM_TX347,19846
#define AT91C_US_COMM_RX AT91C_US_COMM_RX348,19931
#define AT91C_US_FORCE_NTRST AT91C_US_FORCE_NTRST353,20368
typedef struct _AT91S_PIO_AT91S_PIO358,20695
  AT91_REG PIO_PER;		// PIO Enable RegisterPIO_PER360,20723
  AT91_REG PIO_PDR;		// PIO Disable RegisterPIO_PDR361,20767
  AT91_REG PIO_PSR;		// PIO Status RegisterPIO_PSR362,20812
  AT91_REG Reserved0[1];	// Reserved0363,20856
  AT91_REG PIO_OER;		// Output Enable RegisterPIO_OER364,20885
  AT91_REG PIO_ODR;		// Output Disable RegisterrPIO_ODR365,20932
  AT91_REG PIO_OSR;		// Output Status RegisterPIO_OSR366,20981
  AT91_REG Reserved1[1];	// Reserved1367,21028
  AT91_REG PIO_IFER;		// Input Filter Enable RegisterPIO_IFER368,21057
  AT91_REG PIO_IFDR;		// Input Filter Disable RegisterPIO_IFDR369,21111
  AT91_REG PIO_IFSR;		// Input Filter Status RegisterPIO_IFSR370,21166
  AT91_REG Reserved2[1];	// Reserved2371,21220
  AT91_REG PIO_SODR;		// Set Output Data RegisterPIO_SODR372,21249
  AT91_REG PIO_CODR;		// Clear Output Data RegisterPIO_CODR373,21299
  AT91_REG PIO_ODSR;		// Output Data Status RegisterPIO_ODSR374,21351
  AT91_REG PIO_PDSR;		// Pin Data Status RegisterPIO_PDSR375,21404
  AT91_REG PIO_IER;		// Interrupt Enable RegisterPIO_IER376,21454
  AT91_REG PIO_IDR;		// Interrupt Disable RegisterPIO_IDR377,21504
  AT91_REG PIO_IMR;		// Interrupt Mask RegisterPIO_IMR378,21555
  AT91_REG PIO_ISR;		// Interrupt Status RegisterPIO_ISR379,21603
  AT91_REG PIO_MDER;		// Multi-driver Enable RegisterPIO_MDER380,21653
  AT91_REG PIO_MDDR;		// Multi-driver Disable RegisterPIO_MDDR381,21707
  AT91_REG PIO_MDSR;		// Multi-driver Status RegisterPIO_MDSR382,21762
  AT91_REG Reserved3[1];	// Reserved3383,21816
  AT91_REG PIO_PPUDR;		// Pull-up Disable RegisterPIO_PPUDR384,21845
  AT91_REG PIO_PPUER;		// Pull-up Enable RegisterPIO_PPUER385,21896
  AT91_REG PIO_PPUSR;		// Pull-up Status RegisterPIO_PPUSR386,21946
  AT91_REG Reserved4[1];	// Reserved4387,21996
  AT91_REG PIO_ASR;		// Select A RegisterPIO_ASR388,22025
  AT91_REG PIO_BSR;		// Select B RegisterPIO_BSR389,22067
  AT91_REG PIO_ABSR;		// AB Select Status RegisterPIO_ABSR390,22109
  AT91_REG Reserved5[9];	// Reserved5391,22160
  AT91_REG PIO_OWER;		// Output Write Enable RegisterPIO_OWER392,22189
  AT91_REG PIO_OWDR;		// Output Write Disable RegisterPIO_OWDR393,22243
  AT91_REG PIO_OWSR;		// Output Write Status RegisterPIO_OWSR394,22298
} AT91S_PIO, *AT91PS_PIO;AT91S_PIO395,22352
} AT91S_PIO, *AT91PS_PIO;AT91PS_PIO395,22352
typedef struct _AT91S_CKGR_AT91S_CKGR401,22613
  AT91_REG CKGR_MOR;		// Main Oscillator RegisterCKGR_MOR403,22642
  AT91_REG CKGR_MCFR;		// Main Clock  Frequency RegisterCKGR_MCFR404,22692
  AT91_REG Reserved0[1];	// Reserved0405,22749
  AT91_REG CKGR_PLLR;		// PLL RegisterCKGR_PLLR406,22778
} AT91S_CKGR, *AT91PS_CKGR;AT91S_CKGR407,22817
} AT91S_CKGR, *AT91PS_CKGR;AT91PS_CKGR407,22817
#define AT91C_CKGR_MOSCEN AT91C_CKGR_MOSCEN410,22923
#define AT91C_CKGR_OSCBYPASS AT91C_CKGR_OSCBYPASS411,23013
#define AT91C_CKGR_OSCOUNT AT91C_CKGR_OSCOUNT412,23103
#define AT91C_CKGR_MAINF AT91C_CKGR_MAINF414,23284
#define AT91C_CKGR_MAINRDY AT91C_CKGR_MAINRDY415,23375
#define AT91C_CKGR_DIV AT91C_CKGR_DIV417,23527
#define 	AT91C_CKGR_DIV_0 AT91C_CKGR_DIV_0418,23612
#define 	AT91C_CKGR_DIV_BYPASS AT91C_CKGR_DIV_BYPASS419,23708
#define AT91C_CKGR_PLLCOUNT AT91C_CKGR_PLLCOUNT420,23804
#define AT91C_CKGR_OUT AT91C_CKGR_OUT421,23884
#define 	AT91C_CKGR_OUT_0 AT91C_CKGR_OUT_0422,23978
#define 	AT91C_CKGR_OUT_1 AT91C_CKGR_OUT_1423,24094
#define 	AT91C_CKGR_OUT_2 AT91C_CKGR_OUT_2424,24210
#define 	AT91C_CKGR_OUT_3 AT91C_CKGR_OUT_3425,24326
#define AT91C_CKGR_MUL AT91C_CKGR_MUL426,24442
#define AT91C_CKGR_USBDIV AT91C_CKGR_USBDIV427,24526
#define 	AT91C_CKGR_USBDIV_0 AT91C_CKGR_USBDIV_0428,24616
#define 	AT91C_CKGR_USBDIV_1 AT91C_CKGR_USBDIV_1429,24736
#define 	AT91C_CKGR_USBDIV_2 AT91C_CKGR_USBDIV_2430,24869
typedef struct _AT91S_PMC_AT91S_PMC435,25237
  AT91_REG PMC_SCER;		// System Clock Enable RegisterPMC_SCER437,25265
  AT91_REG PMC_SCDR;		// System Clock Disable RegisterPMC_SCDR438,25319
  AT91_REG PMC_SCSR;		// System Clock Status RegisterPMC_SCSR439,25374
  AT91_REG Reserved0[1];	// Reserved0440,25428
  AT91_REG PMC_PCER;		// Peripheral Clock Enable RegisterPMC_PCER441,25457
  AT91_REG PMC_PCDR;		// Peripheral Clock Disable RegisterPMC_PCDR442,25515
  AT91_REG PMC_PCSR;		// Peripheral Clock Status RegisterPMC_PCSR443,25574
  AT91_REG Reserved1[1];	// Reserved1444,25632
  AT91_REG PMC_MOR;		// Main Oscillator RegisterPMC_MOR445,25661
  AT91_REG PMC_MCFR;		// Main Clock  Frequency RegisterPMC_MCFR446,25710
  AT91_REG Reserved2[1];	// Reserved2447,25766
  AT91_REG PMC_PLLR;		// PLL RegisterPMC_PLLR448,25795
  AT91_REG PMC_MCKR;		// Master Clock RegisterPMC_MCKR449,25833
  AT91_REG Reserved3[3];	// Reserved3450,25880
  AT91_REG PMC_PCKR[4];		// Programmable Clock RegisterPMC_PCKR451,25909
  AT91_REG Reserved4[4];	// Reserved4452,25965
  AT91_REG PMC_IER;		// Interrupt Enable RegisterPMC_IER453,25994
  AT91_REG PMC_IDR;		// Interrupt Disable RegisterPMC_IDR454,26044
  AT91_REG PMC_SR;		// Status RegisterPMC_SR455,26095
  AT91_REG PMC_IMR;		// Interrupt Mask RegisterPMC_IMR456,26134
} AT91S_PMC, *AT91PS_PMC;AT91S_PMC457,26182
} AT91S_PMC, *AT91PS_PMC;AT91PS_PMC457,26182
#define AT91C_PMC_PCK AT91C_PMC_PCK460,26289
#define AT91C_PMC_UDP AT91C_PMC_UDP461,26371
#define AT91C_PMC_PCK0 AT91C_PMC_PCK0462,26459
#define AT91C_PMC_PCK1 AT91C_PMC_PCK1463,26551
#define AT91C_PMC_PCK2 AT91C_PMC_PCK2464,26643
#define AT91C_PMC_PCK3 AT91C_PMC_PCK3465,26735
#define AT91C_PMC_CSS AT91C_PMC_CSS472,27290
#define 	AT91C_PMC_CSS_SLOW_CLK AT91C_PMC_CSS_SLOW_CLK473,27385
#define 	AT91C_PMC_CSS_MAIN_CLK AT91C_PMC_CSS_MAIN_CLK474,27482
#define 	AT91C_PMC_CSS_PLL_CLK AT91C_PMC_CSS_PLL_CLK475,27579
#define AT91C_PMC_PRES AT91C_PMC_PRES476,27680
#define 	AT91C_PMC_PRES_CLK AT91C_PMC_PRES_CLK477,27775
#define 	AT91C_PMC_PRES_CLK_2 AT91C_PMC_PRES_CLK_2478,27871
#define 	AT91C_PMC_PRES_CLK_4 AT91C_PMC_PRES_CLK_4479,27980
#define 	AT91C_PMC_PRES_CLK_8 AT91C_PMC_PRES_CLK_8480,28089
#define 	AT91C_PMC_PRES_CLK_16 AT91C_PMC_PRES_CLK_16481,28198
#define 	AT91C_PMC_PRES_CLK_32 AT91C_PMC_PRES_CLK_32482,28308
#define 	AT91C_PMC_PRES_CLK_64 AT91C_PMC_PRES_CLK_64483,28418
#define AT91C_PMC_MOSCS AT91C_PMC_MOSCS486,28689
#define AT91C_PMC_LOCK AT91C_PMC_LOCK487,28787
#define AT91C_PMC_MCKRDY AT91C_PMC_MCKRDY488,28884
#define AT91C_PMC_PCK0RDY AT91C_PMC_PCK0RDY489,28985
#define AT91C_PMC_PCK1RDY AT91C_PMC_PCK1RDY490,29087
#define AT91C_PMC_PCK2RDY AT91C_PMC_PCK2RDY491,29189
#define AT91C_PMC_PCK3RDY AT91C_PMC_PCK3RDY492,29291
typedef struct _AT91S_RSTC_AT91S_RSTC500,29859
  AT91_REG RSTC_RCR;		// Reset Control RegisterRSTC_RCR502,29888
  AT91_REG RSTC_RSR;		// Reset Status RegisterRSTC_RSR503,29936
  AT91_REG RSTC_RMR;		// Reset Mode RegisterRSTC_RMR504,29983
} AT91S_RSTC, *AT91PS_RSTC;AT91S_RSTC505,30028
} AT91S_RSTC, *AT91PS_RSTC;AT91PS_RSTC505,30028
#define AT91C_RSTC_PROCRST AT91C_RSTC_PROCRST508,30132
#define AT91C_RSTC_PERRST AT91C_RSTC_PERRST509,30215
#define AT91C_RSTC_EXTRST AT91C_RSTC_EXTRST510,30299
#define AT91C_RSTC_KEY AT91C_RSTC_KEY511,30381
#define AT91C_RSTC_URSTS AT91C_RSTC_URSTS513,30532
#define AT91C_RSTC_BODSTS AT91C_RSTC_BODSTS514,30617
#define AT91C_RSTC_RSTTYP AT91C_RSTC_RSTTYP515,30710
#define 	AT91C_RSTC_RSTTYP_POWERUP AT91C_RSTC_RSTTYP_POWERUP516,30788
#define 	AT91C_RSTC_RSTTYP_WAKEUP AT91C_RSTC_RSTTYP_WAKEUP517,30905
#define 	AT91C_RSTC_RSTTYP_WATCHDOG AT91C_RSTC_RSTTYP_WATCHDOG518,31020
#define 	AT91C_RSTC_RSTTYP_SOFTWARE AT91C_RSTC_RSTTYP_SOFTWARE519,31148
#define 	AT91C_RSTC_RSTTYP_USER AT91C_RSTC_RSTTYP_USER520,31291
#define 	AT91C_RSTC_RSTTYP_BROWNOUT AT91C_RSTC_RSTTYP_BROWNOUT521,31411
#define AT91C_RSTC_NRSTL AT91C_RSTC_NRSTL522,31520
#define AT91C_RSTC_SRCMP AT91C_RSTC_SRCMP523,31602
#define AT91C_RSTC_URSTEN AT91C_RSTC_URSTEN525,31777
#define AT91C_RSTC_URSTIEN AT91C_RSTC_URSTIEN526,31862
#define AT91C_RSTC_ERSTL AT91C_RSTC_ERSTL527,31957
#define AT91C_RSTC_BODIEN AT91C_RSTC_BODIEN528,32042
typedef struct _AT91S_RTTC_AT91S_RTTC533,32390
  AT91_REG RTTC_RTMR;		// Real-time Mode RegisterRTTC_RTMR535,32419
  AT91_REG RTTC_RTAR;		// Real-time Alarm RegisterRTTC_RTAR536,32469
  AT91_REG RTTC_RTVR;		// Real-time Value RegisterRTTC_RTVR537,32520
  AT91_REG RTTC_RTSR;		// Real-time Status RegisterRTTC_RTSR538,32571
} AT91S_RTTC, *AT91PS_RTTC;AT91S_RTTC539,32623
} AT91S_RTTC, *AT91PS_RTTC;AT91PS_RTTC539,32623
#define AT91C_RTTC_RTPRES AT91C_RTTC_RTPRES542,32729
#define AT91C_RTTC_ALMIEN AT91C_RTTC_ALMIEN543,32831
#define AT91C_RTTC_RTTINCIEN AT91C_RTTC_RTTINCIEN544,32921
#define AT91C_RTTC_RTTRST AT91C_RTTC_RTTRST545,33031
#define AT91C_RTTC_ALMV AT91C_RTTC_ALMV547,33200
#define AT91C_RTTC_CRTV AT91C_RTTC_CRTV549,33365
#define AT91C_RTTC_ALMS AT91C_RTTC_ALMS551,33535
#define AT91C_RTTC_RTTINC AT91C_RTTC_RTTINC552,33625
typedef struct _AT91S_PITC_AT91S_PITC557,33971
  AT91_REG PITC_PIMR;		// Period Interval Mode RegisterPITC_PIMR559,34000
  AT91_REG PITC_PISR;		// Period Interval Status RegisterPITC_PISR560,34056
  AT91_REG PITC_PIVR;		// Period Interval Value RegisterPITC_PIVR561,34114
  AT91_REG PITC_PIIR;		// Period Interval Image RegisterPITC_PIIR562,34171
} AT91S_PITC, *AT91PS_PITC;AT91S_PITC563,34228
} AT91S_PITC, *AT91PS_PITC;AT91PS_PITC563,34228
#define AT91C_PITC_PIV AT91C_PITC_PIV566,34342
#define AT91C_PITC_PITEN AT91C_PITC_PITEN567,34437
#define AT91C_PITC_PITIEN AT91C_PITC_PITIEN568,34536
#define AT91C_PITC_PITS AT91C_PITC_PITS570,34731
#define AT91C_PITC_CPIV AT91C_PITC_CPIV572,34915
#define AT91C_PITC_PICNT AT91C_PITC_PICNT573,35018
typedef struct _AT91S_WDTC_AT91S_WDTC579,35443
  AT91_REG WDTC_WDCR;		// Watchdog Control RegisterWDTC_WDCR581,35472
  AT91_REG WDTC_WDMR;		// Watchdog Mode RegisterWDTC_WDMR582,35524
  AT91_REG WDTC_WDSR;		// Watchdog Status RegisterWDTC_WDSR583,35573
} AT91S_WDTC, *AT91PS_WDTC;AT91S_WDTC584,35624
} AT91S_WDTC, *AT91PS_WDTC;AT91PS_WDTC584,35624
#define AT91C_WDTC_WDRSTT AT91C_WDTC_WDRSTT587,35739
#define AT91C_WDTC_KEY AT91C_WDTC_KEY588,35823
#define AT91C_WDTC_WDV AT91C_WDTC_WDV590,35989
#define AT91C_WDTC_WDFIEN AT91C_WDTC_WDFIEN591,36081
#define AT91C_WDTC_WDRSTEN AT91C_WDTC_WDRSTEN592,36180
#define AT91C_WDTC_WDRPROC AT91C_WDTC_WDRPROC593,36269
#define AT91C_WDTC_WDDIS AT91C_WDTC_WDDIS594,36359
#define AT91C_WDTC_WDD AT91C_WDTC_WDD595,36443
#define AT91C_WDTC_WDDBGHLT AT91C_WDTC_WDDBGHLT596,36533
#define AT91C_WDTC_WDIDLEHLT AT91C_WDTC_WDIDLEHLT597,36620
#define AT91C_WDTC_WDUNF AT91C_WDTC_WDUNF599,36784
#define AT91C_WDTC_WDERR AT91C_WDTC_WDERR600,36870
typedef struct _AT91S_VREG_AT91S_VREG605,37204
  AT91_REG VREG_MR;		// Voltage Regulator Mode RegisterVREG_MR607,37233
} AT91S_VREG, *AT91PS_VREG;AT91S_VREG608,37289
} AT91S_VREG, *AT91PS_VREG;AT91PS_VREG608,37289
#define AT91C_VREG_PSTDBY AT91C_VREG_PSTDBY611,37401
typedef struct _AT91S_MC_AT91S_MC616,37741
  AT91_REG MC_RCR;		// MC Remap Control RegisterMC_RCR618,37768
  AT91_REG MC_ASR;		// MC Abort Status RegisterMC_ASR619,37817
  AT91_REG MC_AASR;		// MC Abort Address Status RegisterMC_AASR620,37865
  AT91_REG Reserved0[21];	// Reserved0621,37922
  AT91_REG MC_FMR;		// MC Flash Mode RegisterMC_FMR622,37952
  AT91_REG MC_FCR;		// MC Flash Command RegisterMC_FCR623,37998
  AT91_REG MC_FSR;		// MC Flash Status RegisterMC_FSR624,38047
} AT91S_MC, *AT91PS_MC;AT91S_MC625,38095
} AT91S_MC, *AT91PS_MC;AT91PS_MC625,38095
#define AT91C_MC_RCB AT91C_MC_RCB628,38194
#define AT91C_MC_UNDADD AT91C_MC_UNDADD630,38350
#define AT91C_MC_MISADD AT91C_MC_MISADD631,38445
#define AT91C_MC_ABTSZ AT91C_MC_ABTSZ632,38541
#define 	AT91C_MC_ABTSZ_BYTE AT91C_MC_ABTSZ_BYTE633,38624
#define 	AT91C_MC_ABTSZ_HWORD AT91C_MC_ABTSZ_HWORD634,38709
#define 	AT91C_MC_ABTSZ_WORD AT91C_MC_ABTSZ_WORD635,38799
#define AT91C_MC_ABTTYP AT91C_MC_ABTTYP636,38884
#define 	AT91C_MC_ABTTYP_DATAR AT91C_MC_ABTTYP_DATAR637,38967
#define 	AT91C_MC_ABTTYP_DATAW AT91C_MC_ABTTYP_DATAW638,39058
#define 	AT91C_MC_ABTTYP_FETCH AT91C_MC_ABTTYP_FETCH639,39150
#define AT91C_MC_MST0 AT91C_MC_MST0640,39242
#define AT91C_MC_MST1 AT91C_MC_MST1641,39329
#define AT91C_MC_SVMST0 AT91C_MC_SVMST0642,39416
#define AT91C_MC_SVMST1 AT91C_MC_SVMST1643,39509
#define AT91C_MC_FRDY AT91C_MC_FRDY645,39674
#define AT91C_MC_LOCKE AT91C_MC_LOCKE646,39751
#define AT91C_MC_PROGE AT91C_MC_PROGE647,39827
#define AT91C_MC_NEBP AT91C_MC_NEBP648,39910
#define AT91C_MC_FWS AT91C_MC_FWS649,40003
#define 	AT91C_MC_FWS_0FWS AT91C_MC_FWS_0FWS650,40085
#define 	AT91C_MC_FWS_1FWS AT91C_MC_FWS_1FWS651,40204
#define 	AT91C_MC_FWS_2FWS AT91C_MC_FWS_2FWS652,40324
#define 	AT91C_MC_FWS_3FWS AT91C_MC_FWS_3FWS653,40444
#define AT91C_MC_FMCN AT91C_MC_FMCN654,40564
#define AT91C_MC_FCMD AT91C_MC_FCMD656,40736
#define 	AT91C_MC_FCMD_START_PROG AT91C_MC_FCMD_START_PROG657,40815
#define 	AT91C_MC_FCMD_LOCK AT91C_MC_FCMD_LOCK658,40943
#define 	AT91C_MC_FCMD_PROG_AND_LOCK AT91C_MC_FCMD_PROG_AND_LOCK659,41100
#define 	AT91C_MC_FCMD_UNLOCK AT91C_MC_FCMD_UNLOCK660,41258
#define 	AT91C_MC_FCMD_ERASE_ALL AT91C_MC_FCMD_ERASE_ALL661,41418
#define 	AT91C_MC_FCMD_SET_GP_NVM AT91C_MC_FCMD_SET_GP_NVM662,41584
#define 	AT91C_MC_FCMD_CLR_GP_NVM AT91C_MC_FCMD_CLR_GP_NVM663,41687
#define 	AT91C_MC_FCMD_SET_SECURITY AT91C_MC_FCMD_SET_SECURITY664,41792
#define AT91C_MC_PAGEN AT91C_MC_PAGEN665,41883
#define AT91C_MC_KEY AT91C_MC_KEY666,41962
#define AT91C_MC_SECURITY AT91C_MC_SECURITY668,42123
#define AT91C_MC_GPNVM0 AT91C_MC_GPNVM0669,42208
#define AT91C_MC_GPNVM1 AT91C_MC_GPNVM1670,42294
#define AT91C_MC_GPNVM2 AT91C_MC_GPNVM2671,42380
#define AT91C_MC_GPNVM3 AT91C_MC_GPNVM3672,42466
#define AT91C_MC_GPNVM4 AT91C_MC_GPNVM4673,42552
#define AT91C_MC_GPNVM5 AT91C_MC_GPNVM5674,42638
#define AT91C_MC_GPNVM6 AT91C_MC_GPNVM6675,42724
#define AT91C_MC_GPNVM7 AT91C_MC_GPNVM7676,42810
#define AT91C_MC_LOCKS0 AT91C_MC_LOCKS0677,42896
#define AT91C_MC_LOCKS1 AT91C_MC_LOCKS1678,42982
#define AT91C_MC_LOCKS2 AT91C_MC_LOCKS2679,43068
#define AT91C_MC_LOCKS3 AT91C_MC_LOCKS3680,43154
#define AT91C_MC_LOCKS4 AT91C_MC_LOCKS4681,43240
#define AT91C_MC_LOCKS5 AT91C_MC_LOCKS5682,43326
#define AT91C_MC_LOCKS6 AT91C_MC_LOCKS6683,43412
#define AT91C_MC_LOCKS7 AT91C_MC_LOCKS7684,43498
#define AT91C_MC_LOCKS8 AT91C_MC_LOCKS8685,43584
#define AT91C_MC_LOCKS9 AT91C_MC_LOCKS9686,43670
#define AT91C_MC_LOCKS10 AT91C_MC_LOCKS10687,43756
#define AT91C_MC_LOCKS11 AT91C_MC_LOCKS11688,43843
#define AT91C_MC_LOCKS12 AT91C_MC_LOCKS12689,43930
#define AT91C_MC_LOCKS13 AT91C_MC_LOCKS13690,44017
#define AT91C_MC_LOCKS14 AT91C_MC_LOCKS14691,44104
#define AT91C_MC_LOCKS15 AT91C_MC_LOCKS15692,44191
typedef struct _AT91S_SPI_AT91S_SPI697,44512
  AT91_REG SPI_CR;		// Control RegisterSPI_CR699,44540
  AT91_REG SPI_MR;		// Mode RegisterSPI_MR700,44580
  AT91_REG SPI_RDR;		// Receive Data RegisterSPI_RDR701,44617
  AT91_REG SPI_TDR;		// Transmit Data RegisterSPI_TDR702,44663
  AT91_REG SPI_SR;		// Status RegisterSPI_SR703,44710
  AT91_REG SPI_IER;		// Interrupt Enable RegisterSPI_IER704,44749
  AT91_REG SPI_IDR;		// Interrupt Disable RegisterSPI_IDR705,44799
  AT91_REG SPI_IMR;		// Interrupt Mask RegisterSPI_IMR706,44850
  AT91_REG Reserved0[4];	// Reserved0707,44898
  AT91_REG SPI_CSR[4];		// Chip Select RegisterSPI_CSR708,44927
  AT91_REG Reserved1[48];	// Reserved1709,44975
  AT91_REG SPI_RPR;		// Receive Pointer RegisterSPI_RPR710,45005
  AT91_REG SPI_RCR;		// Receive Counter RegisterSPI_RCR711,45054
  AT91_REG SPI_TPR;		// Transmit Pointer RegisterSPI_TPR712,45103
  AT91_REG SPI_TCR;		// Transmit Counter RegisterSPI_TCR713,45153
  AT91_REG SPI_RNPR;		// Receive Next Pointer RegisterSPI_RNPR714,45203
  AT91_REG SPI_RNCR;		// Receive Next Counter RegisterSPI_RNCR715,45258
  AT91_REG SPI_TNPR;		// Transmit Next Pointer RegisterSPI_TNPR716,45313
  AT91_REG SPI_TNCR;		// Transmit Next Counter RegisterSPI_TNCR717,45369
  AT91_REG SPI_PTCR;		// PDC Transfer Control RegisterSPI_PTCR718,45425
  AT91_REG SPI_PTSR;		// PDC Transfer Status RegisterSPI_PTSR719,45480
} AT91S_SPI, *AT91PS_SPI;AT91S_SPI720,45534
} AT91S_SPI, *AT91PS_SPI;AT91PS_SPI720,45534
#define AT91C_SPI_SPIEN AT91C_SPI_SPIEN723,45631
#define AT91C_SPI_SPIDIS AT91C_SPI_SPIDIS724,45708
#define AT91C_SPI_SWRST AT91C_SPI_SWRST725,45786
#define AT91C_SPI_LASTXFER AT91C_SPI_LASTXFER726,45871
#define AT91C_SPI_MSTR AT91C_SPI_MSTR728,46022
#define AT91C_SPI_PS AT91C_SPI_PS729,46106
#define 	AT91C_SPI_PS_FIXED AT91C_SPI_PS_FIXED730,46190
#define 	AT91C_SPI_PS_VARIABLE AT91C_SPI_PS_VARIABLE731,46293
#define AT91C_SPI_PCSDEC AT91C_SPI_PCSDEC732,46399
#define AT91C_SPI_FDIV AT91C_SPI_FDIV733,46484
#define AT91C_SPI_MODFDIS AT91C_SPI_MODFDIS734,46566
#define AT91C_SPI_LLB AT91C_SPI_LLB735,46653
#define AT91C_SPI_PCS AT91C_SPI_PCS736,46735
#define AT91C_SPI_DLYBCS AT91C_SPI_DLYBCS737,46824
#define AT91C_SPI_RD AT91C_SPI_RD739,46990
#define AT91C_SPI_RPCS AT91C_SPI_RPCS740,47072
#define AT91C_SPI_TD AT91C_SPI_TD742,47241
#define AT91C_SPI_TPCS AT91C_SPI_TPCS743,47324
#define AT91C_SPI_RDRF AT91C_SPI_RDRF745,47486
#define AT91C_SPI_TDRE AT91C_SPI_TDRE746,47579
#define AT91C_SPI_MODF AT91C_SPI_MODF747,47674
#define AT91C_SPI_OVRES AT91C_SPI_OVRES748,47757
#define AT91C_SPI_ENDRX AT91C_SPI_ENDRX749,47844
#define AT91C_SPI_ENDTX AT91C_SPI_ENDTX750,47935
#define AT91C_SPI_RXBUFF AT91C_SPI_RXBUFF751,48026
#define AT91C_SPI_TXBUFE AT91C_SPI_TXBUFE752,48109
#define AT91C_SPI_NSSR AT91C_SPI_NSSR753,48192
#define AT91C_SPI_TXEMPTY AT91C_SPI_TXEMPTY754,48273
#define AT91C_SPI_SPIENS AT91C_SPI_SPIENS755,48357
#define AT91C_SPI_CPOL AT91C_SPI_CPOL760,48739
#define AT91C_SPI_NCPHA AT91C_SPI_NCPHA761,48820
#define AT91C_SPI_CSAAT AT91C_SPI_CSAAT762,48898
#define AT91C_SPI_BITS AT91C_SPI_BITS763,48998
#define 	AT91C_SPI_BITS_8 AT91C_SPI_BITS_8764,49082
#define 	AT91C_SPI_BITS_9 AT91C_SPI_BITS_9765,49183
#define 	AT91C_SPI_BITS_10 AT91C_SPI_BITS_10766,49284
#define 	AT91C_SPI_BITS_11 AT91C_SPI_BITS_11767,49386
#define 	AT91C_SPI_BITS_12 AT91C_SPI_BITS_12768,49488
#define 	AT91C_SPI_BITS_13 AT91C_SPI_BITS_13769,49590
#define 	AT91C_SPI_BITS_14 AT91C_SPI_BITS_14770,49692
#define 	AT91C_SPI_BITS_15 AT91C_SPI_BITS_15771,49794
#define 	AT91C_SPI_BITS_16 AT91C_SPI_BITS_16772,49896
#define AT91C_SPI_SCBR AT91C_SPI_SCBR773,49998
#define AT91C_SPI_DLYBS AT91C_SPI_DLYBS774,50088
#define AT91C_SPI_DLYBCT AT91C_SPI_DLYBCT775,50173
typedef struct _AT91S_USART_AT91S_USART780,50490
  AT91_REG US_CR;		// Control RegisterUS_CR782,50520
  AT91_REG US_MR;		// Mode RegisterUS_MR783,50559
  AT91_REG US_IER;		// Interrupt Enable RegisterUS_IER784,50595
  AT91_REG US_IDR;		// Interrupt Disable RegisterUS_IDR785,50644
  AT91_REG US_IMR;		// Interrupt Mask RegisterUS_IMR786,50694
  AT91_REG US_CSR;		// Channel Status RegisterUS_CSR787,50741
  AT91_REG US_RHR;		// Receiver Holding RegisterUS_RHR788,50788
  AT91_REG US_THR;		// Transmitter Holding RegisterUS_THR789,50837
  AT91_REG US_BRGR;		// Baud Rate Generator RegisterUS_BRGR790,50889
  AT91_REG US_RTOR;		// Receiver Time-out RegisterUS_RTOR791,50942
  AT91_REG US_TTGR;		// Transmitter Time-guard RegisterUS_TTGR792,50993
  AT91_REG Reserved0[5];	// Reserved0793,51049
  AT91_REG US_FIDI;		// FI_DI_Ratio RegisterUS_FIDI794,51078
  AT91_REG US_NER;		// Nb Errors RegisterUS_NER795,51123
  AT91_REG Reserved1[1];	// Reserved1796,51165
  AT91_REG US_IF;		// IRDA_FILTER RegisterUS_IF797,51194
  AT91_REG Reserved2[44];	// Reserved2798,51237
  AT91_REG US_RPR;		// Receive Pointer RegisterUS_RPR799,51267
  AT91_REG US_RCR;		// Receive Counter RegisterUS_RCR800,51315
  AT91_REG US_TPR;		// Transmit Pointer RegisterUS_TPR801,51363
  AT91_REG US_TCR;		// Transmit Counter RegisterUS_TCR802,51412
  AT91_REG US_RNPR;		// Receive Next Pointer RegisterUS_RNPR803,51461
  AT91_REG US_RNCR;		// Receive Next Counter RegisterUS_RNCR804,51515
  AT91_REG US_TNPR;		// Transmit Next Pointer RegisterUS_TNPR805,51569
  AT91_REG US_TNCR;		// Transmit Next Counter RegisterUS_TNCR806,51624
  AT91_REG US_PTCR;		// PDC Transfer Control RegisterUS_PTCR807,51679
  AT91_REG US_PTSR;		// PDC Transfer Status RegisterUS_PTSR808,51733
} AT91S_USART, *AT91PS_USART;AT91S_USART809,51786
} AT91S_USART, *AT91PS_USART;AT91PS_USART809,51786
#define AT91C_US_STTBRK AT91C_US_STTBRK812,51895
#define AT91C_US_STPBRK AT91C_US_STPBRK813,51975
#define AT91C_US_STTTO AT91C_US_STTTO814,52054
#define AT91C_US_SENDA AT91C_US_SENDA815,52137
#define AT91C_US_RSTIT AT91C_US_RSTIT816,52218
#define AT91C_US_RSTNACK AT91C_US_RSTNACK817,52303
#define AT91C_US_RETTO AT91C_US_RETTO818,52393
#define AT91C_US_DTREN AT91C_US_DTREN819,52476
#define AT91C_US_DTRDIS AT91C_US_DTRDIS820,52571
#define AT91C_US_RTSEN AT91C_US_RTSEN821,52667
#define AT91C_US_RTSDIS AT91C_US_RTSDIS822,52758
#define AT91C_US_USMODE AT91C_US_USMODE824,52925
#define 	AT91C_US_USMODE_NORMAL AT91C_US_USMODE_NORMAL825,53004
#define 	AT91C_US_USMODE_RS485 AT91C_US_USMODE_RS485826,53089
#define 	AT91C_US_USMODE_HWHSH AT91C_US_USMODE_HWHSH827,53173
#define 	AT91C_US_USMODE_MODEM AT91C_US_USMODE_MODEM828,53272
#define 	AT91C_US_USMODE_ISO7816_0 AT91C_US_USMODE_ISO7816_0829,53356
#define 	AT91C_US_USMODE_ISO7816_1 AT91C_US_USMODE_ISO7816_1830,53458
#define 	AT91C_US_USMODE_IRDA AT91C_US_USMODE_IRDA831,53560
#define 	AT91C_US_USMODE_SWHSH AT91C_US_USMODE_SWHSH832,53643
#define AT91C_US_CLKS AT91C_US_CLKS833,53742
#define 	AT91C_US_CLKS_CLOCK AT91C_US_CLKS_CLOCK834,53859
#define 	AT91C_US_CLKS_FDIV1 AT91C_US_CLKS_FDIV1835,53947
#define 	AT91C_US_CLKS_SLOW AT91C_US_CLKS_SLOW836,54035
#define 	AT91C_US_CLKS_EXT AT91C_US_CLKS_EXT837,54134
#define AT91C_US_CHRL AT91C_US_CHRL838,54231
#define 	AT91C_US_CHRL_5_BITS AT91C_US_CHRL_5_BITS839,54348
#define 	AT91C_US_CHRL_6_BITS AT91C_US_CHRL_6_BITS840,54455
#define 	AT91C_US_CHRL_7_BITS AT91C_US_CHRL_7_BITS841,54562
#define 	AT91C_US_CHRL_8_BITS AT91C_US_CHRL_8_BITS842,54669
#define AT91C_US_SYNC AT91C_US_SYNC843,54776
#define AT91C_US_NBSTOP AT91C_US_NBSTOP844,54868
#define 	AT91C_US_NBSTOP_1_BIT AT91C_US_NBSTOP_1_BIT845,54956
#define 	AT91C_US_NBSTOP_15_BIT AT91C_US_NBSTOP_15_BIT846,55051
#define 	AT91C_US_NBSTOP_2_BIT AT91C_US_NBSTOP_2_BIT847,55202
#define AT91C_US_MSBF AT91C_US_MSBF848,55298
#define AT91C_US_MODE9 AT91C_US_MODE9849,55376
#define AT91C_US_CKLO AT91C_US_CKLO850,55467
#define AT91C_US_OVER AT91C_US_OVER851,55555
#define AT91C_US_INACK AT91C_US_INACK852,55642
#define AT91C_US_DSNACK AT91C_US_DSNACK853,55734
#define AT91C_US_MAX_ITER AT91C_US_MAX_ITER854,55826
#define AT91C_US_FILTER AT91C_US_FILTER855,55916
#define AT91C_US_RXBRK AT91C_US_RXBRK857,56092
#define AT91C_US_TIMEOUT AT91C_US_TIMEOUT858,56188
#define AT91C_US_ITERATION AT91C_US_ITERATION859,56274
#define AT91C_US_NACK AT91C_US_NACK860,56376
#define AT91C_US_RIIC AT91C_US_RIIC861,56460
#define AT91C_US_DSRIC AT91C_US_DSRIC862,56561
#define AT91C_US_DCDIC AT91C_US_DCDIC863,56662
#define AT91C_US_CTSIC AT91C_US_CTSIC864,56748
#define AT91C_US_RI AT91C_US_RI868,57111
#define AT91C_US_DSR AT91C_US_DSR869,57197
#define AT91C_US_DCD AT91C_US_DCD870,57284
#define AT91C_US_CTS AT91C_US_CTS871,57371
typedef struct _AT91S_SSC_AT91S_SSC876,57706
  AT91_REG SSC_CR;		// Control RegisterSSC_CR878,57734
  AT91_REG SSC_CMR;		// Clock Mode RegisterSSC_CMR879,57774
  AT91_REG Reserved0[2];	// Reserved0880,57818
  AT91_REG SSC_RCMR;		// Receive Clock ModeRegisterSSC_RCMR881,57847
  AT91_REG SSC_RFMR;		// Receive Frame Mode RegisterSSC_RFMR882,57899
  AT91_REG SSC_TCMR;		// Transmit Clock Mode RegisterSSC_TCMR883,57952
  AT91_REG SSC_TFMR;		// Transmit Frame Mode RegisterSSC_TFMR884,58006
  AT91_REG SSC_RHR;		// Receive Holding RegisterSSC_RHR885,58060
  AT91_REG SSC_THR;		// Transmit Holding RegisterSSC_THR886,58109
  AT91_REG Reserved1[2];	// Reserved1887,58159
  AT91_REG SSC_RSHR;		// Receive Sync Holding RegisterSSC_RSHR888,58188
  AT91_REG SSC_TSHR;		// Transmit Sync Holding RegisterSSC_TSHR889,58243
  AT91_REG Reserved2[2];	// Reserved2890,58299
  AT91_REG SSC_SR;		// Status RegisterSSC_SR891,58328
  AT91_REG SSC_IER;		// Interrupt Enable RegisterSSC_IER892,58367
  AT91_REG SSC_IDR;		// Interrupt Disable RegisterSSC_IDR893,58417
  AT91_REG SSC_IMR;		// Interrupt Mask RegisterSSC_IMR894,58468
  AT91_REG Reserved3[44];	// Reserved3895,58516
  AT91_REG SSC_RPR;		// Receive Pointer RegisterSSC_RPR896,58546
  AT91_REG SSC_RCR;		// Receive Counter RegisterSSC_RCR897,58595
  AT91_REG SSC_TPR;		// Transmit Pointer RegisterSSC_TPR898,58644
  AT91_REG SSC_TCR;		// Transmit Counter RegisterSSC_TCR899,58694
  AT91_REG SSC_RNPR;		// Receive Next Pointer RegisterSSC_RNPR900,58744
  AT91_REG SSC_RNCR;		// Receive Next Counter RegisterSSC_RNCR901,58799
  AT91_REG SSC_TNPR;		// Transmit Next Pointer RegisterSSC_TNPR902,58854
  AT91_REG SSC_TNCR;		// Transmit Next Counter RegisterSSC_TNCR903,58910
  AT91_REG SSC_PTCR;		// PDC Transfer Control RegisterSSC_PTCR904,58966
  AT91_REG SSC_PTSR;		// PDC Transfer Status RegisterSSC_PTSR905,59021
} AT91S_SSC, *AT91PS_SSC;AT91S_SSC906,59075
} AT91S_SSC, *AT91PS_SSC;AT91PS_SSC906,59075
#define AT91C_SSC_RXEN AT91C_SSC_RXEN909,59172
#define AT91C_SSC_RXDIS AT91C_SSC_RXDIS910,59253
#define AT91C_SSC_TXEN AT91C_SSC_TXEN911,59335
#define AT91C_SSC_TXDIS AT91C_SSC_TXDIS912,59417
#define AT91C_SSC_SWRST AT91C_SSC_SWRST913,59500
#define AT91C_SSC_CKS AT91C_SSC_CKS915,59665
#define 	AT91C_SSC_CKS_DIV AT91C_SSC_CKS_DIV916,59764
#define 	AT91C_SSC_CKS_TK AT91C_SSC_CKS_TK917,59852
#define 	AT91C_SSC_CKS_RK AT91C_SSC_CKS_RK918,59942
#define AT91C_SSC_CKO AT91C_SSC_CKO919,60023
#define 	AT91C_SSC_CKO_NONE AT91C_SSC_CKO_NONE920,60134
#define 	AT91C_SSC_CKO_CONTINOUS AT91C_SSC_CKO_CONTINOUS921,60274
#define 	AT91C_SSC_CKO_DATA_TX AT91C_SSC_CKO_DATA_TX922,60403
#define AT91C_SSC_CKI AT91C_SSC_CKI923,60548
#define AT91C_SSC_START AT91C_SSC_START924,60647
#define 	AT91C_SSC_START_CONTINOUS AT91C_SSC_START_CONTINOUS925,60746
#define 	AT91C_SSC_START_TX AT91C_SSC_START_TX926,60940
#define 	AT91C_SSC_START_LOW_RF AT91C_SSC_START_LOW_RF927,61045
#define 	AT91C_SSC_START_HIGH_RF AT91C_SSC_START_HIGH_RF928,61164
#define 	AT91C_SSC_START_FALL_RF AT91C_SSC_START_FALL_RF929,61284
#define 	AT91C_SSC_START_RISE_RF AT91C_SSC_START_RISE_RF930,61406
#define 	AT91C_SSC_START_LEVEL_RF AT91C_SSC_START_LEVEL_RF931,61527
#define 	AT91C_SSC_START_EDGE_RF AT91C_SSC_START_EDGE_RF932,61651
#define 	AT91C_SSC_START_0 AT91C_SSC_START_0933,61767
#define AT91C_SSC_STTDLY AT91C_SSC_STTDLY934,61859
#define AT91C_SSC_PERIOD AT91C_SSC_PERIOD935,61955
#define AT91C_SSC_DATLEN AT91C_SSC_DATLEN937,62148
#define AT91C_SSC_LOOP AT91C_SSC_LOOP938,62227
#define AT91C_SSC_MSBF AT91C_SSC_MSBF939,62303
#define AT91C_SSC_DATNB AT91C_SSC_DATNB940,62396
#define AT91C_SSC_FSLEN AT91C_SSC_FSLEN941,62484
#define AT91C_SSC_FSOS AT91C_SSC_FSOS942,62585
#define 	AT91C_SSC_FSOS_NONE AT91C_SSC_FSOS_NONE943,62696
#define 	AT91C_SSC_FSOS_NEGATIVE AT91C_SSC_FSOS_NEGATIVE944,62845
#define 	AT91C_SSC_FSOS_POSITIVE AT91C_SSC_FSOS_POSITIVE945,62986
#define 	AT91C_SSC_FSOS_LOW AT91C_SSC_FSOS_LOW946,63127
#define 	AT91C_SSC_FSOS_HIGH AT91C_SSC_FSOS_HIGH947,63285
#define 	AT91C_SSC_FSOS_TOGGLE AT91C_SSC_FSOS_TOGGLE948,63444
#define AT91C_SSC_FSEDGE AT91C_SSC_FSEDGE949,63610
#define AT91C_SSC_DATDEF AT91C_SSC_DATDEF952,63872
#define AT91C_SSC_FSDEN AT91C_SSC_FSDEN953,63957
#define AT91C_SSC_TXRDY AT91C_SSC_TXRDY955,64116
#define AT91C_SSC_TXEMPTY AT91C_SSC_TXEMPTY956,64197
#define AT91C_SSC_ENDTX AT91C_SSC_ENDTX957,64278
#define AT91C_SSC_TXBUFE AT91C_SSC_TXBUFE958,64364
#define AT91C_SSC_RXRDY AT91C_SSC_RXRDY959,64452
#define AT91C_SSC_OVRUN AT91C_SSC_OVRUN960,64532
#define AT91C_SSC_ENDRX AT91C_SSC_ENDRX961,64614
#define AT91C_SSC_RXBUFF AT91C_SSC_RXBUFF962,64697
#define AT91C_SSC_TXSYN AT91C_SSC_TXSYN963,64783
#define AT91C_SSC_RXSYN AT91C_SSC_RXSYN964,64863
#define AT91C_SSC_TXENA AT91C_SSC_TXENA965,64942
#define AT91C_SSC_RXENA AT91C_SSC_RXENA966,65024
typedef struct _AT91S_TWI_AT91S_TWI974,65574
  AT91_REG TWI_CR;		// Control RegisterTWI_CR976,65602
  AT91_REG TWI_MMR;		// Master Mode RegisterTWI_MMR977,65642
  AT91_REG Reserved0[1];	// Reserved0978,65687
  AT91_REG TWI_IADR;		// Internal Address RegisterTWI_IADR979,65716
  AT91_REG TWI_CWGR;		// Clock Waveform Generator RegisterTWI_CWGR980,65767
  AT91_REG Reserved1[3];	// Reserved1981,65826
  AT91_REG TWI_SR;		// Status RegisterTWI_SR982,65855
  AT91_REG TWI_IER;		// Interrupt Enable RegisterTWI_IER983,65894
  AT91_REG TWI_IDR;		// Interrupt Disable RegisterTWI_IDR984,65944
  AT91_REG TWI_IMR;		// Interrupt Mask RegisterTWI_IMR985,65995
  AT91_REG TWI_RHR;		// Receive Holding RegisterTWI_RHR986,66043
  AT91_REG TWI_THR;		// Transmit Holding RegisterTWI_THR987,66092
} AT91S_TWI, *AT91PS_TWI;AT91S_TWI988,66142
} AT91S_TWI, *AT91PS_TWI;AT91PS_TWI988,66142
#define AT91C_TWI_START AT91C_TWI_START991,66239
#define AT91C_TWI_STOP AT91C_TWI_STOP992,66328
#define AT91C_TWI_MSEN AT91C_TWI_MSEN993,66416
#define AT91C_TWI_MSDIS AT91C_TWI_MSDIS994,66510
#define AT91C_TWI_SWRST AT91C_TWI_SWRST995,66605
#define AT91C_TWI_IADRSZ AT91C_TWI_IADRSZ997,66761
#define 	AT91C_TWI_IADRSZ_NO AT91C_TWI_IADRSZ_NO998,66856
#define 	AT91C_TWI_IADRSZ_1_BYTE AT91C_TWI_IADRSZ_1_BYTE999,66966
#define 	AT91C_TWI_IADRSZ_2_BYTE AT91C_TWI_IADRSZ_2_BYTE1000,67082
#define 	AT91C_TWI_IADRSZ_3_BYTE AT91C_TWI_IADRSZ_3_BYTE1001,67198
#define AT91C_TWI_MREAD AT91C_TWI_MREAD1002,67316
#define AT91C_TWI_DADR AT91C_TWI_DADR1003,67404
#define AT91C_TWI_CLDIV AT91C_TWI_CLDIV1005,67576
#define AT91C_TWI_CHDIV AT91C_TWI_CHDIV1006,67661
#define AT91C_TWI_CKDIV AT91C_TWI_CKDIV1007,67747
#define AT91C_TWI_TXCOMP AT91C_TWI_TXCOMP1009,67897
#define AT91C_TWI_RXRDY AT91C_TWI_RXRDY1010,67986
#define AT91C_TWI_TXRDY AT91C_TWI_TXRDY1011,68083
#define AT91C_TWI_OVRE AT91C_TWI_OVRE1012,68181
#define AT91C_TWI_UNRE AT91C_TWI_UNRE1013,68261
#define AT91C_TWI_NACK AT91C_TWI_NACK1014,68342
typedef struct _AT91S_PWMC_CH_AT91S_PWMC_CH1022,68898
  AT91_REG PWMC_CMR;		// Channel Mode RegisterPWMC_CMR1024,68930
  AT91_REG PWMC_CDTYR;		// Channel Duty Cycle RegisterPWMC_CDTYR1025,68977
  AT91_REG PWMC_CPRDR;		// Channel Period RegisterPWMC_CPRDR1026,69032
  AT91_REG PWMC_CCNTR;		// Channel Counter RegisterPWMC_CCNTR1027,69083
  AT91_REG PWMC_CUPDR;		// Channel Update RegisterPWMC_CUPDR1028,69135
  AT91_REG PWMC_Reserved[3];	// ReservedPWMC_Reserved1029,69186
} AT91S_PWMC_CH, *AT91PS_PWMC_CH;AT91S_PWMC_CH1030,69227
} AT91S_PWMC_CH, *AT91PS_PWMC_CH;AT91PS_PWMC_CH1030,69227
#define AT91C_PWMC_CPRE AT91C_PWMC_CPRE1033,69344
#define 	AT91C_PWMC_CPRE_MCK AT91C_PWMC_CPRE_MCK1034,69445
#define 	AT91C_PWMC_CPRE_MCKA AT91C_PWMC_CPRE_MCKA1035,69525
#define 	AT91C_PWMC_CPRE_MCKB AT91C_PWMC_CPRE_MCKB1036,69605
#define AT91C_PWMC_CALG AT91C_PWMC_CALG1037,69685
#define AT91C_PWMC_CPOL AT91C_PWMC_CPOL1038,69773
#define AT91C_PWMC_CPD AT91C_PWMC_CPD1039,69860
#define AT91C_PWMC_CDTY AT91C_PWMC_CDTY1041,70042
#define AT91C_PWMC_CPRD AT91C_PWMC_CPRD1043,70217
#define AT91C_PWMC_CCNT AT91C_PWMC_CCNT1045,70389
#define AT91C_PWMC_CUPD AT91C_PWMC_CUPD1047,70562
typedef struct _AT91S_PWMC_AT91S_PWMC1052,70899
  AT91_REG PWMC_MR;		// PWMC Mode RegisterPWMC_MR1054,70928
  AT91_REG PWMC_ENA;		// PWMC Enable RegisterPWMC_ENA1055,70971
  AT91_REG PWMC_DIS;		// PWMC Disable RegisterPWMC_DIS1056,71017
  AT91_REG PWMC_SR;		// PWMC Status RegisterPWMC_SR1057,71064
  AT91_REG PWMC_IER;		// PWMC Interrupt Enable RegisterPWMC_IER1058,71109
  AT91_REG PWMC_IDR;		// PWMC Interrupt Disable RegisterPWMC_IDR1059,71165
  AT91_REG PWMC_IMR;		// PWMC Interrupt Mask RegisterPWMC_IMR1060,71222
  AT91_REG PWMC_ISR;		// PWMC Interrupt Status RegisterPWMC_ISR1061,71276
  AT91_REG Reserved0[55];	// Reserved01062,71332
  AT91_REG PWMC_VR;		// PWMC Version RegisterPWMC_VR1063,71362
  AT91_REG Reserved1[64];	// Reserved11064,71408
  AT91S_PWMC_CH PWMC_CH[4];	// PWMC ChannelPWMC_CH1065,71438
} AT91S_PWMC, *AT91PS_PWMC;AT91S_PWMC1066,71482
} AT91S_PWMC, *AT91PS_PWMC;AT91PS_PWMC1066,71482
#define AT91C_PWMC_DIVA AT91C_PWMC_DIVA1069,71581
#define AT91C_PWMC_PREA AT91C_PWMC_PREA1070,71669
#define 	AT91C_PWMC_PREA_MCK AT91C_PWMC_PREA_MCK1071,71768
#define AT91C_PWMC_DIVB AT91C_PWMC_DIVB1072,71851
#define AT91C_PWMC_PREB AT91C_PWMC_PREB1073,71939
#define 	AT91C_PWMC_PREB_MCK AT91C_PWMC_PREB_MCK1074,72038
#define AT91C_PWMC_CHID0 AT91C_PWMC_CHID01076,72194
#define AT91C_PWMC_CHID1 AT91C_PWMC_CHID11077,72274
#define AT91C_PWMC_CHID2 AT91C_PWMC_CHID21078,72354
#define AT91C_PWMC_CHID3 AT91C_PWMC_CHID31079,72434
typedef struct _AT91S_UDP_AT91S_UDP1090,73224
  AT91_REG UDP_NUM;		// Frame Number RegisterUDP_NUM1092,73252
  AT91_REG UDP_GLBSTATE;	// Global State RegisterUDP_GLBSTATE1093,73298
  AT91_REG UDP_FADDR;		// Function Address RegisterUDP_FADDR1094,73348
  AT91_REG Reserved0[1];	// Reserved01095,73400
  AT91_REG UDP_IER;		// Interrupt Enable RegisterUDP_IER1096,73429
  AT91_REG UDP_IDR;		// Interrupt Disable RegisterUDP_IDR1097,73479
  AT91_REG UDP_IMR;		// Interrupt Mask RegisterUDP_IMR1098,73530
  AT91_REG UDP_ISR;		// Interrupt Status RegisterUDP_ISR1099,73578
  AT91_REG UDP_ICR;		// Interrupt Clear RegisterUDP_ICR1100,73628
  AT91_REG Reserved1[1];	// Reserved11101,73677
  AT91_REG UDP_RSTEP;		// Reset Endpoint RegisterUDP_RSTEP1102,73706
  AT91_REG Reserved2[1];	// Reserved21103,73756
  AT91_REG UDP_CSR[6];		// Endpoint Control and Status RegisterUDP_CSR1104,73785
  AT91_REG Reserved3[2];	// Reserved31105,73849
  AT91_REG UDP_FDR[6];		// Endpoint FIFO Data RegisterUDP_FDR1106,73878
  AT91_REG Reserved4[3];	// Reserved41107,73933
  AT91_REG UDP_TXVC;		// Transceiver Control RegisterUDP_TXVC1108,73962
} AT91S_UDP, *AT91PS_UDP;AT91S_UDP1109,74016
} AT91S_UDP, *AT91PS_UDP;AT91PS_UDP1109,74016
#define AT91C_UDP_FRM_NUM AT91C_UDP_FRM_NUM1112,74123
#define AT91C_UDP_FRM_ERR AT91C_UDP_FRM_ERR1113,74243
#define AT91C_UDP_FRM_OK AT91C_UDP_FRM_OK1114,74321
#define AT91C_UDP_FADDEN AT91C_UDP_FADDEN1116,74478
#define AT91C_UDP_CONFG AT91C_UDP_CONFG1117,74568
#define AT91C_UDP_ESR AT91C_UDP_ESR1118,74645
#define AT91C_UDP_RSMINPR AT91C_UDP_RSMINPR1119,74730
#define AT91C_UDP_RMWUPE AT91C_UDP_RMWUPE1120,74831
#define AT91C_UDP_FADD AT91C_UDP_FADD1122,75001
#define AT91C_UDP_FEN AT91C_UDP_FEN1123,75091
#define AT91C_UDP_EPINT0 AT91C_UDP_EPINT01125,75254
#define AT91C_UDP_EPINT1 AT91C_UDP_EPINT11126,75341
#define AT91C_UDP_EPINT2 AT91C_UDP_EPINT21127,75428
#define AT91C_UDP_EPINT3 AT91C_UDP_EPINT31128,75515
#define AT91C_UDP_EPINT4 AT91C_UDP_EPINT41129,75602
#define AT91C_UDP_EPINT5 AT91C_UDP_EPINT51130,75689
#define AT91C_UDP_RXSUSP AT91C_UDP_RXSUSP1131,75776
#define AT91C_UDP_RXRSM AT91C_UDP_RXRSM1132,75864
#define AT91C_UDP_EXTRSM AT91C_UDP_EXTRSM1133,75951
#define AT91C_UDP_SOFINT AT91C_UDP_SOFINT1134,76047
#define AT91C_UDP_WAKEUP AT91C_UDP_WAKEUP1135,76142
#define AT91C_UDP_ENDBUSRES AT91C_UDP_ENDBUSRES1139,76471
#define AT91C_UDP_EP0 AT91C_UDP_EP01142,76730
#define AT91C_UDP_EP1 AT91C_UDP_EP11143,76813
#define AT91C_UDP_EP2 AT91C_UDP_EP21144,76896
#define AT91C_UDP_EP3 AT91C_UDP_EP31145,76979
#define AT91C_UDP_EP4 AT91C_UDP_EP41146,77062
#define AT91C_UDP_EP5 AT91C_UDP_EP51147,77145
#define AT91C_UDP_TXCOMP AT91C_UDP_TXCOMP1149,77320
#define AT91C_UDP_RX_DATA_BK0 AT91C_UDP_RX_DATA_BK01150,77449
#define AT91C_UDP_RXSETUP AT91C_UDP_RXSETUP1151,77535
#define AT91C_UDP_ISOERROR AT91C_UDP_ISOERROR1152,77645
#define AT91C_UDP_TXPKTRDY AT91C_UDP_TXPKTRDY1153,77753
#define AT91C_UDP_FORCESTALL AT91C_UDP_FORCESTALL1154,77841
#define AT91C_UDP_RX_DATA_BK1 AT91C_UDP_RX_DATA_BK11155,77970
#define AT91C_UDP_DIR AT91C_UDP_DIR1156,78108
#define AT91C_UDP_EPTYPE AT91C_UDP_EPTYPE1157,78193
#define 	AT91C_UDP_EPTYPE_CTRL AT91C_UDP_EPTYPE_CTRL1158,78273
#define 	AT91C_UDP_EPTYPE_ISO_OUT AT91C_UDP_EPTYPE_ISO_OUT1159,78364
#define 	AT91C_UDP_EPTYPE_BULK_OUT AT91C_UDP_EPTYPE_BULK_OUT1160,78463
#define 	AT91C_UDP_EPTYPE_INT_OUT AT91C_UDP_EPTYPE_INT_OUT1161,78555
#define 	AT91C_UDP_EPTYPE_ISO_IN AT91C_UDP_EPTYPE_ISO_IN1162,78652
#define 	AT91C_UDP_EPTYPE_BULK_IN AT91C_UDP_EPTYPE_BULK_IN1163,78750
#define 	AT91C_UDP_EPTYPE_INT_IN AT91C_UDP_EPTYPE_INT_IN1164,78841
#define AT91C_UDP_DTGLE AT91C_UDP_DTGLE1165,78937
#define AT91C_UDP_EPEDS AT91C_UDP_EPEDS1166,79015
#define AT91C_UDP_RXBYTECNT AT91C_UDP_RXBYTECNT1167,79105
#define AT91C_UDP_TXVDIS AT91C_UDP_TXVDIS1169,79292
#define AT91C_UDP_PUON AT91C_UDP_PUON1170,79358
typedef struct _AT91S_TC_AT91S_TC1175,79675
  AT91_REG TC_CCR;		// Channel Control RegisterTC_CCR1177,79702
  AT91_REG TC_CMR;		// Channel Mode Register (Capture Mode / Waveform Mode)TC_CMR1178,79750
  AT91_REG Reserved0[2];	// Reserved01179,79826
  AT91_REG TC_CV;		// Counter ValueTC_CV1180,79855
  AT91_REG TC_RA;		// Register ATC_RA1181,79891
  AT91_REG TC_RB;		// Register BTC_RB1182,79924
  AT91_REG TC_RC;		// Register CTC_RC1183,79957
  AT91_REG TC_SR;		// Status RegisterTC_SR1184,79990
  AT91_REG TC_IER;		// Interrupt Enable RegisterTC_IER1185,80028
  AT91_REG TC_IDR;		// Interrupt Disable RegisterTC_IDR1186,80077
  AT91_REG TC_IMR;		// Interrupt Mask RegisterTC_IMR1187,80127
} AT91S_TC, *AT91PS_TC;AT91S_TC1188,80174
} AT91S_TC, *AT91PS_TC;AT91PS_TC1188,80174
#define AT91C_TC_CLKEN AT91C_TC_CLKEN1191,80275
#define AT91C_TC_CLKDIS AT91C_TC_CLKDIS1192,80369
#define AT91C_TC_SWTRG AT91C_TC_SWTRG1193,80464
#define AT91C_TC_CLKS AT91C_TC_CLKS1195,80657
#define 	AT91C_TC_CLKS_TIMER_DIV1_CLOCK AT91C_TC_CLKS_TIMER_DIV1_CLOCK1196,80738
#define 	AT91C_TC_CLKS_TIMER_DIV2_CLOCK AT91C_TC_CLKS_TIMER_DIV2_CLOCK1197,80844
#define 	AT91C_TC_CLKS_TIMER_DIV3_CLOCK AT91C_TC_CLKS_TIMER_DIV3_CLOCK1198,80950
#define 	AT91C_TC_CLKS_TIMER_DIV4_CLOCK AT91C_TC_CLKS_TIMER_DIV4_CLOCK1199,81056
#define 	AT91C_TC_CLKS_TIMER_DIV5_CLOCK AT91C_TC_CLKS_TIMER_DIV5_CLOCK1200,81162
#define 	AT91C_TC_CLKS_XC0 AT91C_TC_CLKS_XC01201,81268
#define 	AT91C_TC_CLKS_XC1 AT91C_TC_CLKS_XC11202,81361
#define 	AT91C_TC_CLKS_XC2 AT91C_TC_CLKS_XC21203,81454
#define AT91C_TC_CLKI AT91C_TC_CLKI1204,81547
#define AT91C_TC_BURST AT91C_TC_BURST1205,81625
#define 	AT91C_TC_BURST_NONE AT91C_TC_BURST_NONE1206,81713
#define 	AT91C_TC_BURST_XC0 AT91C_TC_BURST_XC01207,81838
#define 	AT91C_TC_BURST_XC1 AT91C_TC_BURST_XC11208,81955
#define 	AT91C_TC_BURST_XC2 AT91C_TC_BURST_XC21209,82072
#define AT91C_TC_CPCSTOP AT91C_TC_CPCSTOP1210,82189
#define AT91C_TC_LDBSTOP AT91C_TC_LDBSTOP1211,82292
#define AT91C_TC_CPCDIS AT91C_TC_CPCDIS1212,82395
#define AT91C_TC_LDBDIS AT91C_TC_LDBDIS1213,82498
#define AT91C_TC_ETRGEDG AT91C_TC_ETRGEDG1214,82602
#define 	AT91C_TC_ETRGEDG_NONE AT91C_TC_ETRGEDG_NONE1215,82699
#define 	AT91C_TC_ETRGEDG_RISING AT91C_TC_ETRGEDG_RISING1216,82792
#define 	AT91C_TC_ETRGEDG_FALLING AT91C_TC_ETRGEDG_FALLING1217,82892
#define 	AT91C_TC_ETRGEDG_BOTH AT91C_TC_ETRGEDG_BOTH1218,82993
#define AT91C_TC_EEVTEDG AT91C_TC_EEVTEDG1219,83091
#define 	AT91C_TC_EEVTEDG_NONE AT91C_TC_EEVTEDG_NONE1220,83186
#define 	AT91C_TC_EEVTEDG_RISING AT91C_TC_EEVTEDG_RISING1221,83279
#define 	AT91C_TC_EEVTEDG_FALLING AT91C_TC_EEVTEDG_FALLING1222,83379
#define 	AT91C_TC_EEVTEDG_BOTH AT91C_TC_EEVTEDG_BOTH1223,83480
#define AT91C_TC_EEVT AT91C_TC_EEVT1224,83578
#define 	AT91C_TC_EEVT_TIOB AT91C_TC_EEVT_TIOB1225,83669
#define 	AT91C_TC_EEVT_XC0 AT91C_TC_EEVT_XC01226,83810
#define 	AT91C_TC_EEVT_XC1 AT91C_TC_EEVT_XC11227,83951
#define 	AT91C_TC_EEVT_XC2 AT91C_TC_EEVT_XC21228,84092
#define AT91C_TC_ABETRG AT91C_TC_ABETRG1229,84233
#define AT91C_TC_ENETRG AT91C_TC_ENETRG1230,84338
#define AT91C_TC_WAVESEL AT91C_TC_WAVESEL1231,84433
#define 	AT91C_TC_WAVESEL_UP AT91C_TC_WAVESEL_UP1232,84518
#define 	AT91C_TC_WAVESEL_UPDOWN AT91C_TC_WAVESEL_UPDOWN1233,84647
#define 	AT91C_TC_WAVESEL_UP_AUTO AT91C_TC_WAVESEL_UP_AUTO1234,84781
#define 	AT91C_TC_WAVESEL_UPDOWN_AUTO AT91C_TC_WAVESEL_UPDOWN_AUTO1235,84908
#define AT91C_TC_CPCTRG AT91C_TC_CPCTRG1236,85039
#define AT91C_TC_WAVE AT91C_TC_WAVE1237,85130
#define AT91C_TC_ACPA AT91C_TC_ACPA1238,85195
#define 	AT91C_TC_ACPA_NONE AT91C_TC_ACPA_NONE1239,85286
#define 	AT91C_TC_ACPA_SET AT91C_TC_ACPA_SET1240,85378
#define 	AT91C_TC_ACPA_CLEAR AT91C_TC_ACPA_CLEAR1241,85469
#define 	AT91C_TC_ACPA_TOGGLE AT91C_TC_ACPA_TOGGLE1242,85562
#define AT91C_TC_LDRA AT91C_TC_LDRA1243,85656
#define 	AT91C_TC_LDRA_NONE AT91C_TC_LDRA_NONE1244,85742
#define 	AT91C_TC_LDRA_RISING AT91C_TC_LDRA_RISING1245,85832
#define 	AT91C_TC_LDRA_FALLING AT91C_TC_LDRA_FALLING1246,85937
#define 	AT91C_TC_LDRA_BOTH AT91C_TC_LDRA_BOTH1247,86043
#define AT91C_TC_ACPC AT91C_TC_ACPC1248,86146
#define 	AT91C_TC_ACPC_NONE AT91C_TC_ACPC_NONE1249,86237
#define 	AT91C_TC_ACPC_SET AT91C_TC_ACPC_SET1250,86329
#define 	AT91C_TC_ACPC_CLEAR AT91C_TC_ACPC_CLEAR1251,86420
#define 	AT91C_TC_ACPC_TOGGLE AT91C_TC_ACPC_TOGGLE1252,86513
#define AT91C_TC_LDRB AT91C_TC_LDRB1253,86607
#define 	AT91C_TC_LDRB_NONE AT91C_TC_LDRB_NONE1254,86693
#define 	AT91C_TC_LDRB_RISING AT91C_TC_LDRB_RISING1255,86783
#define 	AT91C_TC_LDRB_FALLING AT91C_TC_LDRB_FALLING1256,86888
#define 	AT91C_TC_LDRB_BOTH AT91C_TC_LDRB_BOTH1257,86994
#define AT91C_TC_AEEVT AT91C_TC_AEEVT1258,87097
#define 	AT91C_TC_AEEVT_NONE AT91C_TC_AEEVT_NONE1259,87192
#define 	AT91C_TC_AEEVT_SET AT91C_TC_AEEVT_SET1260,87285
#define 	AT91C_TC_AEEVT_CLEAR AT91C_TC_AEEVT_CLEAR1261,87377
#define 	AT91C_TC_AEEVT_TOGGLE AT91C_TC_AEEVT_TOGGLE1262,87471
#define AT91C_TC_ASWTRG AT91C_TC_ASWTRG1263,87566
#define 	AT91C_TC_ASWTRG_NONE AT91C_TC_ASWTRG_NONE1264,87663
#define 	AT91C_TC_ASWTRG_SET AT91C_TC_ASWTRG_SET1265,87757
#define 	AT91C_TC_ASWTRG_CLEAR AT91C_TC_ASWTRG_CLEAR1266,87850
#define 	AT91C_TC_ASWTRG_TOGGLE AT91C_TC_ASWTRG_TOGGLE1267,87945
#define AT91C_TC_BCPB AT91C_TC_BCPB1268,88041
#define 	AT91C_TC_BCPB_NONE AT91C_TC_BCPB_NONE1269,88132
#define 	AT91C_TC_BCPB_SET AT91C_TC_BCPB_SET1270,88224
#define 	AT91C_TC_BCPB_CLEAR AT91C_TC_BCPB_CLEAR1271,88315
#define 	AT91C_TC_BCPB_TOGGLE AT91C_TC_BCPB_TOGGLE1272,88408
#define AT91C_TC_BCPC AT91C_TC_BCPC1273,88502
#define 	AT91C_TC_BCPC_NONE AT91C_TC_BCPC_NONE1274,88593
#define 	AT91C_TC_BCPC_SET AT91C_TC_BCPC_SET1275,88685
#define 	AT91C_TC_BCPC_CLEAR AT91C_TC_BCPC_CLEAR1276,88776
#define 	AT91C_TC_BCPC_TOGGLE AT91C_TC_BCPC_TOGGLE1277,88869
#define AT91C_TC_BEEVT AT91C_TC_BEEVT1278,88963
#define 	AT91C_TC_BEEVT_NONE AT91C_TC_BEEVT_NONE1279,89058
#define 	AT91C_TC_BEEVT_SET AT91C_TC_BEEVT_SET1280,89151
#define 	AT91C_TC_BEEVT_CLEAR AT91C_TC_BEEVT_CLEAR1281,89243
#define 	AT91C_TC_BEEVT_TOGGLE AT91C_TC_BEEVT_TOGGLE1282,89337
#define AT91C_TC_BSWTRG AT91C_TC_BSWTRG1283,89432
#define 	AT91C_TC_BSWTRG_NONE AT91C_TC_BSWTRG_NONE1284,89529
#define 	AT91C_TC_BSWTRG_SET AT91C_TC_BSWTRG_SET1285,89623
#define 	AT91C_TC_BSWTRG_CLEAR AT91C_TC_BSWTRG_CLEAR1286,89716
#define 	AT91C_TC_BSWTRG_TOGGLE AT91C_TC_BSWTRG_TOGGLE1287,89811
#define AT91C_TC_COVFS AT91C_TC_COVFS1289,89982
#define AT91C_TC_LOVRS AT91C_TC_LOVRS1290,90064
#define AT91C_TC_CPAS AT91C_TC_CPAS1291,90142
#define AT91C_TC_CPBS AT91C_TC_CPBS1292,90218
#define AT91C_TC_CPCS AT91C_TC_CPCS1293,90294
#define AT91C_TC_LDRAS AT91C_TC_LDRAS1294,90370
#define AT91C_TC_LDRBS AT91C_TC_LDRBS1295,90446
#define AT91C_TC_ETRGS AT91C_TC_ETRGS1296,90522
#define AT91C_TC_CLKSTA AT91C_TC_CLKSTA1297,90604
#define AT91C_TC_MTIOA AT91C_TC_MTIOA1298,90684
#define AT91C_TC_MTIOB AT91C_TC_MTIOB1299,90761
typedef struct _AT91S_TCB_AT91S_TCB1307,91327
  AT91S_TC TCB_TC0;		// TC Channel 0TCB_TC01309,91355
  AT91_REG Reserved0[4];	// Reserved01310,91392
  AT91S_TC TCB_TC1;		// TC Channel 1TCB_TC11311,91421
  AT91_REG Reserved1[4];	// Reserved11312,91458
  AT91S_TC TCB_TC2;		// TC Channel 2TCB_TC21313,91487
  AT91_REG Reserved2[4];	// Reserved21314,91524
  AT91_REG TCB_BCR;		// TC Block Control RegisterTCB_BCR1315,91553
  AT91_REG TCB_BMR;		// TC Block Mode RegisterTCB_BMR1316,91603
} AT91S_TCB, *AT91PS_TCB;AT91S_TCB1317,91650
} AT91S_TCB, *AT91PS_TCB;AT91PS_TCB1317,91650
#define AT91C_TCB_SYNC AT91C_TCB_SYNC1320,91754
#define AT91C_TCB_TC0XC0S AT91C_TCB_TC0XC0S1322,91910
#define 	AT91C_TCB_TC0XC0S_TCLK0 AT91C_TCB_TC0XC0S_TCLK01323,92010
#define 	AT91C_TCB_TC0XC0S_NONE AT91C_TCB_TC0XC0S_NONE1324,92111
#define 	AT91C_TCB_TC0XC0S_TIOA1 AT91C_TCB_TC0XC0S_TIOA11325,92218
#define 	AT91C_TCB_TC0XC0S_TIOA2 AT91C_TCB_TC0XC0S_TIOA21326,92319
#define AT91C_TCB_TC1XC1S AT91C_TCB_TC1XC1S1327,92420
#define 	AT91C_TCB_TC1XC1S_TCLK1 AT91C_TCB_TC1XC1S_TCLK11328,92520
#define 	AT91C_TCB_TC1XC1S_NONE AT91C_TCB_TC1XC1S_NONE1329,92627
#define 	AT91C_TCB_TC1XC1S_TIOA0 AT91C_TCB_TC1XC1S_TIOA01330,92740
#define 	AT91C_TCB_TC1XC1S_TIOA2 AT91C_TCB_TC1XC1S_TIOA21331,92847
#define AT91C_TCB_TC2XC2S AT91C_TCB_TC2XC2S1332,92954
#define 	AT91C_TCB_TC2XC2S_TCLK2 AT91C_TCB_TC2XC2S_TCLK21333,93054
#define 	AT91C_TCB_TC2XC2S_NONE AT91C_TCB_TC2XC2S_NONE1334,93161
#define 	AT91C_TCB_TC2XC2S_TIOA0 AT91C_TCB_TC2XC2S_TIOA01335,93274
#define 	AT91C_TCB_TC2XC2S_TIOA1 AT91C_TCB_TC2XC2S_TIOA11336,93381
typedef struct _AT91S_CAN_MB_AT91S_CAN_MB1341,93735
  AT91_REG CAN_MB_MMR;		// MailBox Mode RegisterCAN_MB_MMR1343,93766
  AT91_REG CAN_MB_MAM;		// MailBox Acceptance Mask RegisterCAN_MB_MAM1344,93815
  AT91_REG CAN_MB_MID;		// MailBox ID RegisterCAN_MB_MID1345,93875
  AT91_REG CAN_MB_MFID;		// MailBox Family ID RegisterCAN_MB_MFID1346,93922
  AT91_REG CAN_MB_MSR;		// MailBox Status RegisterCAN_MB_MSR1347,93977
  AT91_REG CAN_MB_MDL;		// MailBox Data Low RegisterCAN_MB_MDL1348,94028
  AT91_REG CAN_MB_MDH;		// MailBox Data High RegisterCAN_MB_MDH1349,94081
  AT91_REG CAN_MB_MCR;		// MailBox Control RegisterCAN_MB_MCR1350,94135
} AT91S_CAN_MB, *AT91PS_CAN_MB;AT91S_CAN_MB1351,94187
} AT91S_CAN_MB, *AT91PS_CAN_MB;AT91PS_CAN_MB1351,94187
#define AT91C_CAN_MTIMEMARK AT91C_CAN_MTIMEMARK1354,94299
#define AT91C_CAN_PRIOR AT91C_CAN_PRIOR1355,94388
#define AT91C_CAN_MOT AT91C_CAN_MOT1356,94474
#define 	AT91C_CAN_MOT_DIS AT91C_CAN_MOT_DIS1357,94563
#define 	AT91C_CAN_MOT_RX AT91C_CAN_MOT_RX1358,94646
#define 	AT91C_CAN_MOT_RXOVERWRITE AT91C_CAN_MOT_RXOVERWRITE1359,94729
#define 	AT91C_CAN_MOT_TX AT91C_CAN_MOT_TX1360,94812
#define 	AT91C_CAN_MOT_CONSUMER AT91C_CAN_MOT_CONSUMER1361,94895
#define 	AT91C_CAN_MOT_PRODUCER AT91C_CAN_MOT_PRODUCER1362,94978
#define AT91C_CAN_MIDvB AT91C_CAN_MIDvB1364,95151
#define AT91C_CAN_MIDvA AT91C_CAN_MIDvA1365,95275
#define AT91C_CAN_MIDE AT91C_CAN_MIDE1366,95381
#define AT91C_CAN_MTIMESTAMP AT91C_CAN_MTIMESTAMP1370,95713
#define AT91C_CAN_MDLC AT91C_CAN_MDLC1371,95797
#define AT91C_CAN_MRTR AT91C_CAN_MRTR1372,95891
#define AT91C_CAN_MABT AT91C_CAN_MABT1373,95996
#define AT91C_CAN_MRDY AT91C_CAN_MRDY1374,96087
#define AT91C_CAN_MMI AT91C_CAN_MMI1375,96170
#define AT91C_CAN_MACR AT91C_CAN_MACR1379,96515
#define AT91C_CAN_MTCR AT91C_CAN_MTCR1380,96610
typedef struct _AT91S_CAN_AT91S_CAN1385,96943
  AT91_REG CAN_MR;		// Mode RegisterCAN_MR1387,96971
  AT91_REG CAN_IER;		// Interrupt Enable RegisterCAN_IER1388,97008
  AT91_REG CAN_IDR;		// Interrupt Disable RegisterCAN_IDR1389,97058
  AT91_REG CAN_IMR;		// Interrupt Mask RegisterCAN_IMR1390,97109
  AT91_REG CAN_SR;		// Status RegisterCAN_SR1391,97157
  AT91_REG CAN_BR;		// Baudrate RegisterCAN_BR1392,97196
  AT91_REG CAN_TIM;		// Timer RegisterCAN_TIM1393,97237
  AT91_REG CAN_TIMESTP;		// Time Stamp RegisterCAN_TIMESTP1394,97276
  AT91_REG CAN_ECR;		// Error Counter RegisterCAN_ECR1395,97324
  AT91_REG CAN_TCR;		// Transfer Command RegisterCAN_TCR1396,97371
  AT91_REG CAN_ACR;		// Abort Command RegisterCAN_ACR1397,97421
  AT91_REG Reserved0[52];	// Reserved01398,97468
  AT91_REG CAN_VR;		// Version RegisterCAN_VR1399,97498
  AT91_REG Reserved1[64];	// Reserved11400,97538
  AT91S_CAN_MB CAN_MB0;		// CAN Mailbox 0CAN_MB01401,97568
  AT91S_CAN_MB CAN_MB1;		// CAN Mailbox 1CAN_MB11402,97610
  AT91S_CAN_MB CAN_MB2;		// CAN Mailbox 2CAN_MB21403,97652
  AT91S_CAN_MB CAN_MB3;		// CAN Mailbox 3CAN_MB31404,97694
  AT91S_CAN_MB CAN_MB4;		// CAN Mailbox 4CAN_MB41405,97736
  AT91S_CAN_MB CAN_MB5;		// CAN Mailbox 5CAN_MB51406,97778
  AT91S_CAN_MB CAN_MB6;		// CAN Mailbox 6CAN_MB61407,97820
  AT91S_CAN_MB CAN_MB7;		// CAN Mailbox 7CAN_MB71408,97862
  AT91S_CAN_MB CAN_MB8;		// CAN Mailbox 8CAN_MB81409,97904
  AT91S_CAN_MB CAN_MB9;		// CAN Mailbox 9CAN_MB91410,97946
  AT91S_CAN_MB CAN_MB10;	// CAN Mailbox 10CAN_MB101411,97988
  AT91S_CAN_MB CAN_MB11;	// CAN Mailbox 11CAN_MB111412,98031
  AT91S_CAN_MB CAN_MB12;	// CAN Mailbox 12CAN_MB121413,98074
  AT91S_CAN_MB CAN_MB13;	// CAN Mailbox 13CAN_MB131414,98117
  AT91S_CAN_MB CAN_MB14;	// CAN Mailbox 14CAN_MB141415,98160
  AT91S_CAN_MB CAN_MB15;	// CAN Mailbox 15CAN_MB151416,98203
} AT91S_CAN, *AT91PS_CAN;AT91S_CAN1417,98246
} AT91S_CAN, *AT91PS_CAN;AT91PS_CAN1417,98246
#define AT91C_CAN_CANEN AT91C_CAN_CANEN1420,98340
#define AT91C_CAN_LPM AT91C_CAN_LPM1421,98428
#define AT91C_CAN_ABM AT91C_CAN_ABM1422,98524
#define AT91C_CAN_OVL AT91C_CAN_OVL1423,98626
#define AT91C_CAN_TEOF AT91C_CAN_TEOF1424,98722
#define AT91C_CAN_TTM AT91C_CAN_TTM1425,98829
#define AT91C_CAN_TIMFRZ AT91C_CAN_TIMFRZ1426,98928
#define AT91C_CAN_DRPT AT91C_CAN_DRPT1427,99014
#define AT91C_CAN_MB0 AT91C_CAN_MB01429,99175
#define AT91C_CAN_MB1 AT91C_CAN_MB11430,99256
#define AT91C_CAN_MB2 AT91C_CAN_MB21431,99337
#define AT91C_CAN_MB3 AT91C_CAN_MB31432,99418
#define AT91C_CAN_MB4 AT91C_CAN_MB41433,99499
#define AT91C_CAN_MB5 AT91C_CAN_MB51434,99580
#define AT91C_CAN_MB6 AT91C_CAN_MB61435,99661
#define AT91C_CAN_MB7 AT91C_CAN_MB71436,99742
#define AT91C_CAN_MB8 AT91C_CAN_MB81437,99823
#define AT91C_CAN_MB9 AT91C_CAN_MB91438,99904
#define AT91C_CAN_MB10 AT91C_CAN_MB101439,99985
#define AT91C_CAN_MB11 AT91C_CAN_MB111440,100067
#define AT91C_CAN_MB12 AT91C_CAN_MB121441,100149
#define AT91C_CAN_MB13 AT91C_CAN_MB131442,100231
#define AT91C_CAN_MB14 AT91C_CAN_MB141443,100313
#define AT91C_CAN_MB15 AT91C_CAN_MB151444,100395
#define AT91C_CAN_ERRA AT91C_CAN_ERRA1445,100477
#define AT91C_CAN_WARN AT91C_CAN_WARN1446,100566
#define AT91C_CAN_ERRP AT91C_CAN_ERRP1447,100651
#define AT91C_CAN_BOFF AT91C_CAN_BOFF1448,100741
#define AT91C_CAN_SLEEP AT91C_CAN_SLEEP1449,100825
#define AT91C_CAN_WAKEUP AT91C_CAN_WAKEUP1450,100902
#define AT91C_CAN_TOVF AT91C_CAN_TOVF1451,100980
#define AT91C_CAN_TSTP AT91C_CAN_TSTP1452,101066
#define AT91C_CAN_CERR AT91C_CAN_CERR1453,101147
#define AT91C_CAN_SERR AT91C_CAN_SERR1454,101223
#define AT91C_CAN_AERR AT91C_CAN_AERR1455,101304
#define AT91C_CAN_FERR AT91C_CAN_FERR1456,101391
#define AT91C_CAN_BERR AT91C_CAN_BERR1457,101468
#define AT91C_CAN_RBSY AT91C_CAN_RBSY1461,101773
#define AT91C_CAN_TBSY AT91C_CAN_TBSY1462,101853
#define AT91C_CAN_OVLY AT91C_CAN_OVLY1463,101936
#define AT91C_CAN_PHASE2 AT91C_CAN_PHASE21465,102088
#define AT91C_CAN_PHASE1 AT91C_CAN_PHASE11466,102170
#define AT91C_CAN_PROPAG AT91C_CAN_PROPAG1467,102252
#define AT91C_CAN_SYNC AT91C_CAN_SYNC1468,102345
#define AT91C_CAN_BRP AT91C_CAN_BRP1469,102449
#define AT91C_CAN_SMP AT91C_CAN_SMP1470,102535
#define AT91C_CAN_TIMER AT91C_CAN_TIMER1472,102685
#define AT91C_CAN_REC AT91C_CAN_REC1475,102922
#define AT91C_CAN_TEC AT91C_CAN_TEC1476,103011
#define AT91C_CAN_TIMRST AT91C_CAN_TIMRST1478,103182
typedef struct _AT91S_EMAC_AT91S_EMAC1484,103572
  AT91_REG EMAC_NCR;		// Network Control RegisterEMAC_NCR1486,103601
  AT91_REG EMAC_NCFGR;		// Network Configuration RegisterEMAC_NCFGR1487,103651
  AT91_REG EMAC_NSR;		// Network Status RegisterEMAC_NSR1488,103709
  AT91_REG Reserved0[2];	// Reserved01489,103758
  AT91_REG EMAC_TSR;		// Transmit Status RegisterEMAC_TSR1490,103787
  AT91_REG EMAC_RBQP;		// Receive Buffer Queue PointerEMAC_RBQP1491,103837
  AT91_REG EMAC_TBQP;		// Transmit Buffer Queue PointerEMAC_TBQP1492,103892
  AT91_REG EMAC_RSR;		// Receive Status RegisterEMAC_RSR1493,103948
  AT91_REG EMAC_ISR;		// Interrupt Status RegisterEMAC_ISR1494,103997
  AT91_REG EMAC_IER;		// Interrupt Enable RegisterEMAC_IER1495,104048
  AT91_REG EMAC_IDR;		// Interrupt Disable RegisterEMAC_IDR1496,104099
  AT91_REG EMAC_IMR;		// Interrupt Mask RegisterEMAC_IMR1497,104151
  AT91_REG EMAC_MAN;		// PHY Maintenance RegisterEMAC_MAN1498,104200
  AT91_REG EMAC_PTR;		// Pause Time RegisterEMAC_PTR1499,104250
  AT91_REG EMAC_PFR;		// Pause Frames received RegisterEMAC_PFR1500,104295
  AT91_REG EMAC_FTO;		// Frames Transmitted OK RegisterEMAC_FTO1501,104351
  AT91_REG EMAC_SCF;		// Single Collision Frame RegisterEMAC_SCF1502,104407
  AT91_REG EMAC_MCF;		// Multiple Collision Frame RegisterEMAC_MCF1503,104464
  AT91_REG EMAC_FRO;		// Frames Received OK RegisterEMAC_FRO1504,104523
  AT91_REG EMAC_FCSE;		// Frame Check Sequence Error RegisterEMAC_FCSE1505,104576
  AT91_REG EMAC_ALE;		// Alignment Error RegisterEMAC_ALE1506,104638
  AT91_REG EMAC_DTF;		// Deferred Transmission Frame RegisterEMAC_DTF1507,104688
  AT91_REG EMAC_LCOL;		// Late Collision RegisterEMAC_LCOL1508,104750
  AT91_REG EMAC_ECOL;		// Excessive Collision RegisterEMAC_ECOL1509,104800
  AT91_REG EMAC_TUND;		// Transmit Underrun Error RegisterEMAC_TUND1510,104855
  AT91_REG EMAC_CSE;		// Carrier Sense Error RegisterEMAC_CSE1511,104914
  AT91_REG EMAC_RRE;		// Receive Ressource Error RegisterEMAC_RRE1512,104968
  AT91_REG EMAC_ROV;		// Receive Overrun Errors RegisterEMAC_ROV1513,105026
  AT91_REG EMAC_RSE;		// Receive Symbol Errors RegisterEMAC_RSE1514,105083
  AT91_REG EMAC_ELE;		// Excessive Length Errors RegisterEMAC_ELE1515,105139
  AT91_REG EMAC_RJA;		// Receive Jabbers RegisterEMAC_RJA1516,105197
  AT91_REG EMAC_USF;		// Undersize Frames RegisterEMAC_USF1517,105247
  AT91_REG EMAC_STE;		// SQE Test Error RegisterEMAC_STE1518,105298
  AT91_REG EMAC_RLE;		// Receive Length Field Mismatch RegisterEMAC_RLE1519,105347
  AT91_REG EMAC_TPF;		// Transmitted Pause Frames RegisterEMAC_TPF1520,105411
  AT91_REG EMAC_HRB;		// Hash Address Bottom[31:0]EMAC_HRB1521,105470
  AT91_REG EMAC_HRT;		// Hash Address Top[63:32]EMAC_HRT1522,105521
  AT91_REG EMAC_SA1L;		// Specific Address 1 Bottom, First 4 bytesEMAC_SA1L1523,105570
  AT91_REG EMAC_SA1H;		// Specific Address 1 Top, Last 2 bytesEMAC_SA1H1524,105637
  AT91_REG EMAC_SA2L;		// Specific Address 2 Bottom, First 4 bytesEMAC_SA2L1525,105700
  AT91_REG EMAC_SA2H;		// Specific Address 2 Top, Last 2 bytesEMAC_SA2H1526,105767
  AT91_REG EMAC_SA3L;		// Specific Address 3 Bottom, First 4 bytesEMAC_SA3L1527,105830
  AT91_REG EMAC_SA3H;		// Specific Address 3 Top, Last 2 bytesEMAC_SA3H1528,105897
  AT91_REG EMAC_SA4L;		// Specific Address 4 Bottom, First 4 bytesEMAC_SA4L1529,105960
  AT91_REG EMAC_SA4H;		// Specific Address 4 Top, Last 2 bytesEMAC_SA4H1530,106027
  AT91_REG EMAC_TID;		// Type ID Checking RegisterEMAC_TID1531,106090
  AT91_REG EMAC_TPQ;		// Transmit Pause Quantum RegisterEMAC_TPQ1532,106141
  AT91_REG EMAC_USRIO;		// USER Input/Output RegisterEMAC_USRIO1533,106198
  AT91_REG EMAC_WOL;		// Wake On LAN RegisterEMAC_WOL1534,106252
  AT91_REG Reserved1[13];	// Reserved11535,106298
  AT91_REG EMAC_REV;		// Revision RegisterEMAC_REV1536,106328
} AT91S_EMAC, *AT91PS_EMAC;AT91S_EMAC1537,106371
} AT91S_EMAC, *AT91PS_EMAC;AT91PS_EMAC1537,106371
#define AT91C_EMAC_LB AT91C_EMAC_LB1540,106453
#define AT91C_EMAC_LLB AT91C_EMAC_LLB1541,106584
#define AT91C_EMAC_RE AT91C_EMAC_RE1542,106667
#define AT91C_EMAC_TE AT91C_EMAC_TE1543,106750
#define AT91C_EMAC_MPE AT91C_EMAC_MPE1544,106834
#define AT91C_EMAC_CLRSTAT AT91C_EMAC_CLRSTAT1545,106925
#define AT91C_EMAC_INCSTAT AT91C_EMAC_INCSTAT1546,107020
#define AT91C_EMAC_WESTAT AT91C_EMAC_WESTAT1547,107119
#define AT91C_EMAC_BP AT91C_EMAC_BP1548,107225
#define AT91C_EMAC_TSTART AT91C_EMAC_TSTART1549,107307
#define AT91C_EMAC_THALT AT91C_EMAC_THALT1550,107394
#define AT91C_EMAC_TPFR AT91C_EMAC_TPFR1551,107480
#define AT91C_EMAC_TZQ AT91C_EMAC_TZQ1552,107568
#define AT91C_EMAC_SPD AT91C_EMAC_SPD1554,107754
#define AT91C_EMAC_FD AT91C_EMAC_FD1555,107828
#define AT91C_EMAC_JFRAME AT91C_EMAC_JFRAME1556,107908
#define AT91C_EMAC_CAF AT91C_EMAC_CAF1557,107989
#define AT91C_EMAC_NBC AT91C_EMAC_NBC1558,108073
#define AT91C_EMAC_MTI AT91C_EMAC_MTI1559,108154
#define AT91C_EMAC_UNI AT91C_EMAC_UNI1560,108249
#define AT91C_EMAC_BIG AT91C_EMAC_BIG1561,108337
#define AT91C_EMAC_EAE AT91C_EMAC_EAE1562,108424
#define AT91C_EMAC_CLK AT91C_EMAC_CLK1563,108522
#define 	AT91C_EMAC_CLK_HCLK_8 AT91C_EMAC_CLK_HCLK_81564,108589
#define 	AT91C_EMAC_CLK_HCLK_16 AT91C_EMAC_CLK_HCLK_161565,108689
#define 	AT91C_EMAC_CLK_HCLK_32 AT91C_EMAC_CLK_HCLK_321566,108790
#define 	AT91C_EMAC_CLK_HCLK_64 AT91C_EMAC_CLK_HCLK_641567,108891
#define AT91C_EMAC_RTY AT91C_EMAC_RTY1568,108992
#define AT91C_EMAC_PAE AT91C_EMAC_PAE1569,109059
#define AT91C_EMAC_RBOF AT91C_EMAC_RBOF1570,109126
#define 	AT91C_EMAC_RBOF_OFFSET_0 AT91C_EMAC_RBOF_OFFSET_01571,109193
#define 	AT91C_EMAC_RBOF_OFFSET_1 AT91C_EMAC_RBOF_OFFSET_11572,109315
#define 	AT91C_EMAC_RBOF_OFFSET_2 AT91C_EMAC_RBOF_OFFSET_21573,109443
#define 	AT91C_EMAC_RBOF_OFFSET_3 AT91C_EMAC_RBOF_OFFSET_31574,109572
#define AT91C_EMAC_RLCE AT91C_EMAC_RLCE1575,109703
#define AT91C_EMAC_DRFCS AT91C_EMAC_DRFCS1576,109807
#define AT91C_EMAC_EFRHD AT91C_EMAC_EFRHD1577,109894
#define AT91C_EMAC_IRXFCS AT91C_EMAC_IRXFCS1578,109961
#define AT91C_EMAC_LINKR AT91C_EMAC_LINKR1580,110118
#define AT91C_EMAC_MDIO AT91C_EMAC_MDIO1581,110185
#define AT91C_EMAC_IDLE AT91C_EMAC_IDLE1582,110252
#define AT91C_EMAC_UBR AT91C_EMAC_UBR1584,110397
#define AT91C_EMAC_COL AT91C_EMAC_COL1585,110464
#define AT91C_EMAC_RLES AT91C_EMAC_RLES1586,110531
#define AT91C_EMAC_TGO AT91C_EMAC_TGO1587,110598
#define AT91C_EMAC_BEX AT91C_EMAC_BEX1588,110677
#define AT91C_EMAC_COMP AT91C_EMAC_COMP1589,110772
#define AT91C_EMAC_UND AT91C_EMAC_UND1590,110839
#define AT91C_EMAC_BNA AT91C_EMAC_BNA1592,110983
#define AT91C_EMAC_REC AT91C_EMAC_REC1593,111050
#define AT91C_EMAC_OVR AT91C_EMAC_OVR1594,111117
#define AT91C_EMAC_MFD AT91C_EMAC_MFD1596,111263
#define AT91C_EMAC_RCOMP AT91C_EMAC_RCOMP1597,111330
#define AT91C_EMAC_RXUBR AT91C_EMAC_RXUBR1598,111397
#define AT91C_EMAC_TXUBR AT91C_EMAC_TXUBR1599,111464
#define AT91C_EMAC_TUNDR AT91C_EMAC_TUNDR1600,111531
#define AT91C_EMAC_RLEX AT91C_EMAC_RLEX1601,111598
#define AT91C_EMAC_TXERR AT91C_EMAC_TXERR1602,111665
#define AT91C_EMAC_TCOMP AT91C_EMAC_TCOMP1603,111732
#define AT91C_EMAC_LINK AT91C_EMAC_LINK1604,111799
#define AT91C_EMAC_ROVR AT91C_EMAC_ROVR1605,111866
#define AT91C_EMAC_HRESP AT91C_EMAC_HRESP1606,111933
#define AT91C_EMAC_PFRE AT91C_EMAC_PFRE1607,112000
#define AT91C_EMAC_PTZ AT91C_EMAC_PTZ1608,112067
#define AT91C_EMAC_DATA AT91C_EMAC_DATA1613,112448
#define AT91C_EMAC_CODE AT91C_EMAC_CODE1614,112518
#define AT91C_EMAC_REGA AT91C_EMAC_REGA1615,112585
#define AT91C_EMAC_PHYA AT91C_EMAC_PHYA1616,112653
#define AT91C_EMAC_RW AT91C_EMAC_RW1617,112721
#define AT91C_EMAC_SOF AT91C_EMAC_SOF1618,112788
#define AT91C_EMAC_RMII AT91C_EMAC_RMII1620,112937
#define AT91C_EMAC_IP AT91C_EMAC_IP1622,113089
#define AT91C_EMAC_MAG AT91C_EMAC_MAG1623,113182
#define AT91C_EMAC_ARP AT91C_EMAC_ARP1624,113275
#define AT91C_EMAC_SA1 AT91C_EMAC_SA11625,113367
#define AT91C_EMAC_REVREF AT91C_EMAC_REVREF1627,113546
#define AT91C_EMAC_PARTREF AT91C_EMAC_PARTREF1628,113616
typedef struct _AT91S_ADC_AT91S_ADC1633,113922
  AT91_REG ADC_CR;		// ADC Control RegisterADC_CR1635,113950
  AT91_REG ADC_MR;		// ADC Mode RegisterADC_MR1636,113994
  AT91_REG Reserved0[2];	// Reserved01637,114035
  AT91_REG ADC_CHER;		// ADC Channel Enable RegisterADC_CHER1638,114064
  AT91_REG ADC_CHDR;		// ADC Channel Disable RegisterADC_CHDR1639,114117
  AT91_REG ADC_CHSR;		// ADC Channel Status RegisterADC_CHSR1640,114171
  AT91_REG ADC_SR;		// ADC Status RegisterADC_SR1641,114224
  AT91_REG ADC_LCDR;		// ADC Last Converted Data RegisterADC_LCDR1642,114267
  AT91_REG ADC_IER;		// ADC Interrupt Enable RegisterADC_IER1643,114325
  AT91_REG ADC_IDR;		// ADC Interrupt Disable RegisterADC_IDR1644,114379
  AT91_REG ADC_IMR;		// ADC Interrupt Mask RegisterADC_IMR1645,114434
  AT91_REG ADC_CDR0;		// ADC Channel Data Register 0ADC_CDR01646,114486
  AT91_REG ADC_CDR1;		// ADC Channel Data Register 1ADC_CDR11647,114539
  AT91_REG ADC_CDR2;		// ADC Channel Data Register 2ADC_CDR21648,114592
  AT91_REG ADC_CDR3;		// ADC Channel Data Register 3ADC_CDR31649,114645
  AT91_REG ADC_CDR4;		// ADC Channel Data Register 4ADC_CDR41650,114698
  AT91_REG ADC_CDR5;		// ADC Channel Data Register 5ADC_CDR51651,114751
  AT91_REG ADC_CDR6;		// ADC Channel Data Register 6ADC_CDR61652,114804
  AT91_REG ADC_CDR7;		// ADC Channel Data Register 7ADC_CDR71653,114857
  AT91_REG Reserved1[44];	// Reserved11654,114910
  AT91_REG ADC_RPR;		// Receive Pointer RegisterADC_RPR1655,114940
  AT91_REG ADC_RCR;		// Receive Counter RegisterADC_RCR1656,114989
  AT91_REG ADC_TPR;		// Transmit Pointer RegisterADC_TPR1657,115038
  AT91_REG ADC_TCR;		// Transmit Counter RegisterADC_TCR1658,115088
  AT91_REG ADC_RNPR;		// Receive Next Pointer RegisterADC_RNPR1659,115138
  AT91_REG ADC_RNCR;		// Receive Next Counter RegisterADC_RNCR1660,115193
  AT91_REG ADC_TNPR;		// Transmit Next Pointer RegisterADC_TNPR1661,115248
  AT91_REG ADC_TNCR;		// Transmit Next Counter RegisterADC_TNCR1662,115304
  AT91_REG ADC_PTCR;		// PDC Transfer Control RegisterADC_PTCR1663,115360
  AT91_REG ADC_PTSR;		// PDC Transfer Status RegisterADC_PTSR1664,115415
} AT91S_ADC, *AT91PS_ADC;AT91S_ADC1665,115469
} AT91S_ADC, *AT91PS_ADC;AT91PS_ADC1665,115469
#define AT91C_ADC_SWRST AT91C_ADC_SWRST1668,115566
#define AT91C_ADC_START AT91C_ADC_START1669,115647
#define AT91C_ADC_TRGEN AT91C_ADC_TRGEN1671,115797
#define 	AT91C_ADC_TRGEN_DIS AT91C_ADC_TRGEN_DIS1672,115878
#define 	AT91C_ADC_TRGEN_EN AT91C_ADC_TRGEN_EN1673,116037
#define AT91C_ADC_TRGSEL AT91C_ADC_TRGSEL1674,116167
#define 	AT91C_ADC_TRGSEL_TIOA0 AT91C_ADC_TRGSEL_TIOA01675,116251
#define 	AT91C_ADC_TRGSEL_TIOA1 AT91C_ADC_TRGSEL_TIOA11676,116358
#define 	AT91C_ADC_TRGSEL_TIOA2 AT91C_ADC_TRGSEL_TIOA21677,116465
#define 	AT91C_ADC_TRGSEL_TIOA3 AT91C_ADC_TRGSEL_TIOA31678,116572
#define 	AT91C_ADC_TRGSEL_TIOA4 AT91C_ADC_TRGSEL_TIOA41679,116679
#define 	AT91C_ADC_TRGSEL_TIOA5 AT91C_ADC_TRGSEL_TIOA51680,116786
#define 	AT91C_ADC_TRGSEL_EXT AT91C_ADC_TRGSEL_EXT1681,116893
#define AT91C_ADC_LOWRES AT91C_ADC_LOWRES1682,117011
#define 	AT91C_ADC_LOWRES_10_BIT AT91C_ADC_LOWRES_10_BIT1683,117089
#define 	AT91C_ADC_LOWRES_8_BIT AT91C_ADC_LOWRES_8_BIT1684,117190
#define AT91C_ADC_SLEEP AT91C_ADC_SLEEP1685,117290
#define 	AT91C_ADC_SLEEP_NORMAL_MODE AT91C_ADC_SLEEP_NORMAL_MODE1686,117367
#define 	AT91C_ADC_SLEEP_MODE AT91C_ADC_SLEEP_MODE1687,117461
#define AT91C_ADC_PRESCAL AT91C_ADC_PRESCAL1688,117554
#define AT91C_ADC_STARTUP AT91C_ADC_STARTUP1689,117646
#define AT91C_ADC_SHTIM AT91C_ADC_SHTIM1690,117726
#define AT91C_ADC_CH0 AT91C_ADC_CH01692,117895
#define AT91C_ADC_CH1 AT91C_ADC_CH11693,117971
#define AT91C_ADC_CH2 AT91C_ADC_CH21694,118047
#define AT91C_ADC_CH3 AT91C_ADC_CH31695,118123
#define AT91C_ADC_CH4 AT91C_ADC_CH41696,118199
#define AT91C_ADC_CH5 AT91C_ADC_CH51697,118275
#define AT91C_ADC_CH6 AT91C_ADC_CH61698,118351
#define AT91C_ADC_CH7 AT91C_ADC_CH71699,118427
#define AT91C_ADC_EOC0 AT91C_ADC_EOC01703,118742
#define AT91C_ADC_EOC1 AT91C_ADC_EOC11704,118826
#define AT91C_ADC_EOC2 AT91C_ADC_EOC21705,118910
#define AT91C_ADC_EOC3 AT91C_ADC_EOC31706,118994
#define AT91C_ADC_EOC4 AT91C_ADC_EOC41707,119078
#define AT91C_ADC_EOC5 AT91C_ADC_EOC51708,119162
#define AT91C_ADC_EOC6 AT91C_ADC_EOC61709,119246
#define AT91C_ADC_EOC7 AT91C_ADC_EOC71710,119330
#define AT91C_ADC_OVRE0 AT91C_ADC_OVRE01711,119414
#define AT91C_ADC_OVRE1 AT91C_ADC_OVRE11712,119494
#define AT91C_ADC_OVRE2 AT91C_ADC_OVRE21713,119574
#define AT91C_ADC_OVRE3 AT91C_ADC_OVRE31714,119654
#define AT91C_ADC_OVRE4 AT91C_ADC_OVRE41715,119734
#define AT91C_ADC_OVRE5 AT91C_ADC_OVRE51716,119814
#define AT91C_ADC_OVRE6 AT91C_ADC_OVRE61717,119894
#define AT91C_ADC_OVRE7 AT91C_ADC_OVRE71718,119974
#define AT91C_ADC_DRDY AT91C_ADC_DRDY1719,120054
#define AT91C_ADC_GOVRE AT91C_ADC_GOVRE1720,120131
#define AT91C_ADC_ENDRX AT91C_ADC_ENDRX1721,120213
#define AT91C_ADC_RXBUFF AT91C_ADC_RXBUFF1722,120304
#define AT91C_ADC_LDATA AT91C_ADC_LDATA1724,120472
#define AT91C_ADC_DATA AT91C_ADC_DATA1729,120882
typedef struct _AT91S_AES_AT91S_AES1741,121763
  AT91_REG AES_CR;		// Control RegisterAES_CR1743,121791
  AT91_REG AES_MR;		// Mode RegisterAES_MR1744,121831
  AT91_REG Reserved0[2];	// Reserved01745,121868
  AT91_REG AES_IER;		// Interrupt Enable RegisterAES_IER1746,121897
  AT91_REG AES_IDR;		// Interrupt Disable RegisterAES_IDR1747,121947
  AT91_REG AES_IMR;		// Interrupt Mask RegisterAES_IMR1748,121998
  AT91_REG AES_ISR;		// Interrupt Status RegisterAES_ISR1749,122046
  AT91_REG AES_KEYWxR[4];	// Key Word x RegisterAES_KEYWxR1750,122096
  AT91_REG Reserved1[4];	// Reserved11751,122145
  AT91_REG AES_IDATAxR[4];	// Input Data x RegisterAES_IDATAxR1752,122174
  AT91_REG AES_ODATAxR[4];	// Output Data x RegisterAES_ODATAxR1753,122226
  AT91_REG AES_IVxR[4];		// Initialization Vector x RegisterAES_IVxR1754,122279
  AT91_REG Reserved2[35];	// Reserved21755,122340
  AT91_REG AES_VR;		// AES Version RegisterAES_VR1756,122370
  AT91_REG AES_RPR;		// Receive Pointer RegisterAES_RPR1757,122414
  AT91_REG AES_RCR;		// Receive Counter RegisterAES_RCR1758,122463
  AT91_REG AES_TPR;		// Transmit Pointer RegisterAES_TPR1759,122512
  AT91_REG AES_TCR;		// Transmit Counter RegisterAES_TCR1760,122562
  AT91_REG AES_RNPR;		// Receive Next Pointer RegisterAES_RNPR1761,122612
  AT91_REG AES_RNCR;		// Receive Next Counter RegisterAES_RNCR1762,122667
  AT91_REG AES_TNPR;		// Transmit Next Pointer RegisterAES_TNPR1763,122722
  AT91_REG AES_TNCR;		// Transmit Next Counter RegisterAES_TNCR1764,122778
  AT91_REG AES_PTCR;		// PDC Transfer Control RegisterAES_PTCR1765,122834
  AT91_REG AES_PTSR;		// PDC Transfer Status RegisterAES_PTSR1766,122889
} AT91S_AES, *AT91PS_AES;AT91S_AES1767,122943
} AT91S_AES, *AT91PS_AES;AT91PS_AES1767,122943
#define AT91C_AES_START AT91C_AES_START1770,123036
#define AT91C_AES_SWRST AT91C_AES_SWRST1771,123120
#define AT91C_AES_LOADSEED AT91C_AES_LOADSEED1772,123201
#define AT91C_AES_CIPHER AT91C_AES_CIPHER1774,123367
#define AT91C_AES_PROCDLY AT91C_AES_PROCDLY1775,123449
#define AT91C_AES_SMOD AT91C_AES_SMOD1776,123532
#define 	AT91C_AES_SMOD_MANUAL AT91C_AES_SMOD_MANUAL1777,123609
#define 	AT91C_AES_SMOD_AUTO AT91C_AES_SMOD_AUTO1778,123783
#define 	AT91C_AES_SMOD_PDC AT91C_AES_SMOD_PDC1779,123924
#define AT91C_AES_OPMOD AT91C_AES_OPMOD1780,124030
#define 	AT91C_AES_OPMOD_ECB AT91C_AES_OPMOD_ECB1781,124111
#define 	AT91C_AES_OPMOD_CBC AT91C_AES_OPMOD_CBC1782,124223
#define 	AT91C_AES_OPMOD_OFB AT91C_AES_OPMOD_OFB1783,124337
#define 	AT91C_AES_OPMOD_CFB AT91C_AES_OPMOD_CFB1784,124445
#define 	AT91C_AES_OPMOD_CTR AT91C_AES_OPMOD_CTR1785,124553
#define AT91C_AES_LOD AT91C_AES_LOD1786,124653
#define AT91C_AES_CFBS AT91C_AES_CFBS1787,124741
#define 	AT91C_AES_CFBS_128_BIT AT91C_AES_CFBS_128_BIT1788,124833
#define 	AT91C_AES_CFBS_64_BIT AT91C_AES_CFBS_64_BIT1789,124923
#define 	AT91C_AES_CFBS_32_BIT AT91C_AES_CFBS_32_BIT1790,125012
#define 	AT91C_AES_CFBS_16_BIT AT91C_AES_CFBS_16_BIT1791,125101
#define 	AT91C_AES_CFBS_8_BIT AT91C_AES_CFBS_8_BIT1792,125190
#define AT91C_AES_CKEY AT91C_AES_CKEY1793,125278
#define AT91C_AES_CTYPE AT91C_AES_CTYPE1794,125363
#define 	AT91C_AES_CTYPE_TYPE1_EN AT91C_AES_CTYPE_TYPE1_EN1795,125450
#define 	AT91C_AES_CTYPE_TYPE2_EN AT91C_AES_CTYPE_TYPE2_EN1796,125566
#define 	AT91C_AES_CTYPE_TYPE3_EN AT91C_AES_CTYPE_TYPE3_EN1797,125682
#define 	AT91C_AES_CTYPE_TYPE4_EN AT91C_AES_CTYPE_TYPE4_EN1798,125798
#define 	AT91C_AES_CTYPE_TYPE5_EN AT91C_AES_CTYPE_TYPE5_EN1799,125914
#define AT91C_AES_DATRDY AT91C_AES_DATRDY1801,126108
#define AT91C_AES_ENDRX AT91C_AES_ENDRX1802,126181
#define AT91C_AES_ENDTX AT91C_AES_ENDTX1803,126267
#define AT91C_AES_RXBUFF AT91C_AES_RXBUFF1804,126354
#define AT91C_AES_TXBUFE AT91C_AES_TXBUFE1805,126441
#define AT91C_AES_URAD AT91C_AES_URAD1806,126530
#define AT91C_AES_URAT AT91C_AES_URAT1810,126864
#define 	AT91C_AES_URAT_IN_DAT_WRITE_DATPROC AT91C_AES_URAT_IN_DAT_WRITE_DATPROC1811,126970
#define 	AT91C_AES_URAT_OUT_DAT_READ_DATPROC AT91C_AES_URAT_OUT_DAT_READ_DATPROC1812,127119
#define 	AT91C_AES_URAT_MODEREG_WRITE_DATPROC AT91C_AES_URAT_MODEREG_WRITE_DATPROC1813,127254
#define 	AT91C_AES_URAT_OUT_DAT_READ_SUBKEY AT91C_AES_URAT_OUT_DAT_READ_SUBKEY1814,127386
#define 	AT91C_AES_URAT_MODEREG_WRITE_SUBKEY AT91C_AES_URAT_MODEREG_WRITE_SUBKEY1815,127525
#define 	AT91C_AES_URAT_WO_REG_READ AT91C_AES_URAT_WO_REG_READ1816,127660
typedef struct _AT91S_TDES_AT91S_TDES1821,128014
  AT91_REG TDES_CR;		// Control RegisterTDES_CR1823,128043
  AT91_REG TDES_MR;		// Mode RegisterTDES_MR1824,128084
  AT91_REG Reserved0[2];	// Reserved01825,128122
  AT91_REG TDES_IER;		// Interrupt Enable RegisterTDES_IER1826,128151
  AT91_REG TDES_IDR;		// Interrupt Disable RegisterTDES_IDR1827,128202
  AT91_REG TDES_IMR;		// Interrupt Mask RegisterTDES_IMR1828,128254
  AT91_REG TDES_ISR;		// Interrupt Status RegisterTDES_ISR1829,128303
  AT91_REG TDES_KEY1WxR[2];	// Key 1 Word x RegisterTDES_KEY1WxR1830,128354
  AT91_REG TDES_KEY2WxR[2];	// Key 2 Word x RegisterTDES_KEY2WxR1831,128407
  AT91_REG TDES_KEY3WxR[2];	// Key 3 Word x RegisterTDES_KEY3WxR1832,128460
  AT91_REG Reserved1[2];	// Reserved11833,128513
  AT91_REG TDES_IDATAxR[2];	// Input Data x RegisterTDES_IDATAxR1834,128542
  AT91_REG Reserved2[2];	// Reserved21835,128595
  AT91_REG TDES_ODATAxR[2];	// Output Data x RegisterTDES_ODATAxR1836,128624
  AT91_REG Reserved3[2];	// Reserved31837,128678
  AT91_REG TDES_IVxR[2];	// Initialization Vector x RegisterTDES_IVxR1838,128707
  AT91_REG Reserved4[37];	// Reserved41839,128768
  AT91_REG TDES_VR;		// TDES Version RegisterTDES_VR1840,128798
  AT91_REG TDES_RPR;		// Receive Pointer RegisterTDES_RPR1841,128844
  AT91_REG TDES_RCR;		// Receive Counter RegisterTDES_RCR1842,128894
  AT91_REG TDES_TPR;		// Transmit Pointer RegisterTDES_TPR1843,128944
  AT91_REG TDES_TCR;		// Transmit Counter RegisterTDES_TCR1844,128995
  AT91_REG TDES_RNPR;		// Receive Next Pointer RegisterTDES_RNPR1845,129046
  AT91_REG TDES_RNCR;		// Receive Next Counter RegisterTDES_RNCR1846,129102
  AT91_REG TDES_TNPR;		// Transmit Next Pointer RegisterTDES_TNPR1847,129158
  AT91_REG TDES_TNCR;		// Transmit Next Counter RegisterTDES_TNCR1848,129215
  AT91_REG TDES_PTCR;		// PDC Transfer Control RegisterTDES_PTCR1849,129272
  AT91_REG TDES_PTSR;		// PDC Transfer Status RegisterTDES_PTSR1850,129328
} AT91S_TDES, *AT91PS_TDES;AT91S_TDES1851,129383
} AT91S_TDES, *AT91PS_TDES;AT91PS_TDES1851,129383
#define AT91C_TDES_START AT91C_TDES_START1854,129480
#define AT91C_TDES_SWRST AT91C_TDES_SWRST1855,129565
#define AT91C_TDES_CIPHER AT91C_TDES_CIPHER1857,129712
#define AT91C_TDES_TDESMOD AT91C_TDES_TDESMOD1858,129795
#define AT91C_TDES_KEYMOD AT91C_TDES_KEYMOD1859,129888
#define AT91C_TDES_SMOD AT91C_TDES_SMOD1860,129964
#define 	AT91C_TDES_SMOD_MANUAL AT91C_TDES_SMOD_MANUAL1861,130042
#define 	AT91C_TDES_SMOD_AUTO AT91C_TDES_SMOD_AUTO1862,130219
#define 	AT91C_TDES_SMOD_PDC AT91C_TDES_SMOD_PDC1863,130363
#define AT91C_TDES_OPMOD AT91C_TDES_OPMOD1864,130471
#define 	AT91C_TDES_OPMOD_ECB AT91C_TDES_OPMOD_ECB1865,130553
#define 	AT91C_TDES_OPMOD_CBC AT91C_TDES_OPMOD_CBC1866,130667
#define 	AT91C_TDES_OPMOD_OFB AT91C_TDES_OPMOD_OFB1867,130783
#define 	AT91C_TDES_OPMOD_CFB AT91C_TDES_OPMOD_CFB1868,130893
#define AT91C_TDES_LOD AT91C_TDES_LOD1869,131003
#define AT91C_TDES_CFBS AT91C_TDES_CFBS1870,131092
#define 	AT91C_TDES_CFBS_64_BIT AT91C_TDES_CFBS_64_BIT1871,131185
#define 	AT91C_TDES_CFBS_32_BIT AT91C_TDES_CFBS_32_BIT1872,131276
#define 	AT91C_TDES_CFBS_16_BIT AT91C_TDES_CFBS_16_BIT1873,131367
#define 	AT91C_TDES_CFBS_8_BIT AT91C_TDES_CFBS_8_BIT1874,131458
#define AT91C_TDES_DATRDY AT91C_TDES_DATRDY1876,131627
#define AT91C_TDES_ENDRX AT91C_TDES_ENDRX1877,131701
#define AT91C_TDES_ENDTX AT91C_TDES_ENDTX1878,131788
#define AT91C_TDES_RXBUFF AT91C_TDES_RXBUFF1879,131876
#define AT91C_TDES_TXBUFE AT91C_TDES_TXBUFE1880,131964
#define AT91C_TDES_URAD AT91C_TDES_URAD1881,132054
#define AT91C_TDES_URAT AT91C_TDES_URAT1885,132395
#define 	AT91C_TDES_URAT_IN_DAT_WRITE_DATPROC AT91C_TDES_URAT_IN_DAT_WRITE_DATPROC1886,132502
#define 	AT91C_TDES_URAT_OUT_DAT_READ_DATPROC AT91C_TDES_URAT_OUT_DAT_READ_DATPROC1887,132653
#define 	AT91C_TDES_URAT_MODEREG_WRITE_DATPROC AT91C_TDES_URAT_MODEREG_WRITE_DATPROC1888,132790
#define 	AT91C_TDES_URAT_WO_REG_READ AT91C_TDES_URAT_WO_REG_READ1889,132924
#define AT91C_AIC_IVR AT91C_AIC_IVR1896,133395
#define AT91C_AIC_SMR AT91C_AIC_SMR1897,133475
#define AT91C_AIC_FVR AT91C_AIC_FVR1898,133556
#define AT91C_AIC_DCR AT91C_AIC_DCR1899,133636
#define AT91C_AIC_EOICR AT91C_AIC_EOICR1900,133729
#define AT91C_AIC_SVR AT91C_AIC_SVR1901,133823
#define AT91C_AIC_FFSR AT91C_AIC_FFSR1902,133906
#define AT91C_AIC_ICCR AT91C_AIC_ICCR1903,133995
#define AT91C_AIC_ISR AT91C_AIC_ISR1904,134088
#define AT91C_AIC_IMR AT91C_AIC_IMR1905,134174
#define AT91C_AIC_IPR AT91C_AIC_IPR1906,134258
#define AT91C_AIC_FFER AT91C_AIC_FFER1907,134345
#define AT91C_AIC_IECR AT91C_AIC_IECR1908,134434
#define AT91C_AIC_ISCR AT91C_AIC_ISCR1909,134528
#define AT91C_AIC_FFDR AT91C_AIC_FFDR1910,134619
#define AT91C_AIC_CISR AT91C_AIC_CISR1911,134709
#define AT91C_AIC_IDCR AT91C_AIC_IDCR1912,134800
#define AT91C_AIC_SPU AT91C_AIC_SPU1913,134895
#define AT91C_DBGU_TCR AT91C_DBGU_TCR1915,135050
#define AT91C_DBGU_RNPR AT91C_DBGU_RNPR1916,135141
#define AT91C_DBGU_TNPR AT91C_DBGU_TNPR1917,135236
#define AT91C_DBGU_TPR AT91C_DBGU_TPR1918,135332
#define AT91C_DBGU_RPR AT91C_DBGU_RPR1919,135423
#define AT91C_DBGU_RCR AT91C_DBGU_RCR1920,135513
#define AT91C_DBGU_RNCR AT91C_DBGU_RNCR1921,135603
#define AT91C_DBGU_PTCR AT91C_DBGU_PTCR1922,135698
#define AT91C_DBGU_PTSR AT91C_DBGU_PTSR1923,135793
#define AT91C_DBGU_TNCR AT91C_DBGU_TNCR1924,135887
#define AT91C_DBGU_EXID AT91C_DBGU_EXID1926,136049
#define AT91C_DBGU_BRGR AT91C_DBGU_BRGR1927,136137
#define AT91C_DBGU_IDR AT91C_DBGU_IDR1928,136227
#define AT91C_DBGU_CSR AT91C_DBGU_CSR1929,136315
#define AT91C_DBGU_CIDR AT91C_DBGU_CIDR1930,136400
#define AT91C_DBGU_MR AT91C_DBGU_MR1931,136478
#define AT91C_DBGU_IMR AT91C_DBGU_IMR1932,136553
#define AT91C_DBGU_CR AT91C_DBGU_CR1933,136638
#define AT91C_DBGU_FNTR AT91C_DBGU_FNTR1934,136716
#define AT91C_DBGU_THR AT91C_DBGU_THR1935,136798
#define AT91C_DBGU_RHR AT91C_DBGU_RHR1936,136888
#define AT91C_DBGU_IER AT91C_DBGU_IER1937,136975
#define AT91C_PIOA_ODR AT91C_PIOA_ODR1939,137128
#define AT91C_PIOA_SODR AT91C_PIOA_SODR1940,137214
#define AT91C_PIOA_ISR AT91C_PIOA_ISR1941,137300
#define AT91C_PIOA_ABSR AT91C_PIOA_ABSR1942,137387
#define AT91C_PIOA_IER AT91C_PIOA_IER1943,137474
#define AT91C_PIOA_PPUDR AT91C_PIOA_PPUDR1944,137561
#define AT91C_PIOA_IMR AT91C_PIOA_IMR1945,137648
#define AT91C_PIOA_PER AT91C_PIOA_PER1946,137733
#define AT91C_PIOA_IFDR AT91C_PIOA_IFDR1947,137814
#define AT91C_PIOA_OWDR AT91C_PIOA_OWDR1948,137905
#define AT91C_PIOA_MDSR AT91C_PIOA_MDSR1949,137996
#define AT91C_PIOA_IDR AT91C_PIOA_IDR1950,138086
#define AT91C_PIOA_ODSR AT91C_PIOA_ODSR1951,138174
#define AT91C_PIOA_PPUSR AT91C_PIOA_PPUSR1952,138263
#define AT91C_PIOA_OWSR AT91C_PIOA_OWSR1953,138349
#define AT91C_PIOA_BSR AT91C_PIOA_BSR1954,138439
#define AT91C_PIOA_OWER AT91C_PIOA_OWER1955,138518
#define AT91C_PIOA_IFER AT91C_PIOA_IFER1956,138608
#define AT91C_PIOA_PDSR AT91C_PIOA_PDSR1957,138698
#define AT91C_PIOA_PPUER AT91C_PIOA_PPUER1958,138784
#define AT91C_PIOA_OSR AT91C_PIOA_OSR1959,138870
#define AT91C_PIOA_ASR AT91C_PIOA_ASR1960,138954
#define AT91C_PIOA_MDDR AT91C_PIOA_MDDR1961,139033
#define AT91C_PIOA_CODR AT91C_PIOA_CODR1962,139124
#define AT91C_PIOA_MDER AT91C_PIOA_MDER1963,139212
#define AT91C_PIOA_PDR AT91C_PIOA_PDR1964,139302
#define AT91C_PIOA_IFSR AT91C_PIOA_IFSR1965,139384
#define AT91C_PIOA_OER AT91C_PIOA_OER1966,139474
#define AT91C_PIOA_PSR AT91C_PIOA_PSR1967,139558
#define AT91C_PIOB_OWDR AT91C_PIOB_OWDR1969,139705
#define AT91C_PIOB_MDER AT91C_PIOB_MDER1970,139796
#define AT91C_PIOB_PPUSR AT91C_PIOB_PPUSR1971,139886
#define AT91C_PIOB_IMR AT91C_PIOB_IMR1972,139972
#define AT91C_PIOB_ASR AT91C_PIOB_ASR1973,140057
#define AT91C_PIOB_PPUDR AT91C_PIOB_PPUDR1974,140136
#define AT91C_PIOB_PSR AT91C_PIOB_PSR1975,140223
#define AT91C_PIOB_IER AT91C_PIOB_IER1976,140304
#define AT91C_PIOB_CODR AT91C_PIOB_CODR1977,140391
#define AT91C_PIOB_OWER AT91C_PIOB_OWER1978,140479
#define AT91C_PIOB_ABSR AT91C_PIOB_ABSR1979,140569
#define AT91C_PIOB_IFDR AT91C_PIOB_IFDR1980,140656
#define AT91C_PIOB_PDSR AT91C_PIOB_PDSR1981,140747
#define AT91C_PIOB_IDR AT91C_PIOB_IDR1982,140833
#define AT91C_PIOB_OWSR AT91C_PIOB_OWSR1983,140921
#define AT91C_PIOB_PDR AT91C_PIOB_PDR1984,141011
#define AT91C_PIOB_ODR AT91C_PIOB_ODR1985,141093
#define AT91C_PIOB_IFSR AT91C_PIOB_IFSR1986,141179
#define AT91C_PIOB_PPUER AT91C_PIOB_PPUER1987,141269
#define AT91C_PIOB_SODR AT91C_PIOB_SODR1988,141355
#define AT91C_PIOB_ISR AT91C_PIOB_ISR1989,141441
#define AT91C_PIOB_ODSR AT91C_PIOB_ODSR1990,141528
#define AT91C_PIOB_OSR AT91C_PIOB_OSR1991,141617
#define AT91C_PIOB_MDSR AT91C_PIOB_MDSR1992,141701
#define AT91C_PIOB_IFER AT91C_PIOB_IFER1993,141791
#define AT91C_PIOB_BSR AT91C_PIOB_BSR1994,141881
#define AT91C_PIOB_MDDR AT91C_PIOB_MDDR1995,141960
#define AT91C_PIOB_OER AT91C_PIOB_OER1996,142051
#define AT91C_PIOB_PER AT91C_PIOB_PER1997,142135
#define AT91C_CKGR_MOR AT91C_CKGR_MOR1999,142282
#define AT91C_CKGR_PLLR AT91C_CKGR_PLLR2000,142368
#define AT91C_CKGR_MCFR AT91C_CKGR_MCFR2001,142442
#define AT91C_PMC_IDR AT91C_PMC_IDR2003,142599
#define AT91C_PMC_MOR AT91C_PMC_MOR2004,142686
#define AT91C_PMC_PLLR AT91C_PMC_PLLR2005,142771
#define AT91C_PMC_PCER AT91C_PMC_PCER2006,142844
#define AT91C_PMC_PCKR AT91C_PMC_PCKR2007,142937
#define AT91C_PMC_MCKR AT91C_PMC_MCKR2008,143025
#define AT91C_PMC_SCDR AT91C_PMC_SCDR2009,143107
#define AT91C_PMC_PCDR AT91C_PMC_PCDR2010,143197
#define AT91C_PMC_SCSR AT91C_PMC_SCSR2011,143291
#define AT91C_PMC_PCSR AT91C_PMC_PCSR2012,143380
#define AT91C_PMC_MCFR AT91C_PMC_MCFR2013,143473
#define AT91C_PMC_SCER AT91C_PMC_SCER2014,143564
#define AT91C_PMC_IMR AT91C_PMC_IMR2015,143653
#define AT91C_PMC_IER AT91C_PMC_IER2016,143737
#define AT91C_PMC_SR AT91C_PMC_SR2017,143823
#define AT91C_RSTC_RCR AT91C_RSTC_RCR2019,143965
#define AT91C_RSTC_RMR AT91C_RSTC_RMR2020,144049
#define AT91C_RSTC_RSR AT91C_RSTC_RSR2021,144130
#define AT91C_RTTC_RTSR AT91C_RTTC_RTSR2023,144279
#define AT91C_RTTC_RTMR AT91C_RTTC_RTMR2024,144366
#define AT91C_RTTC_RTVR AT91C_RTTC_RTVR2025,144451
#define AT91C_RTTC_RTAR AT91C_RTTC_RTAR2026,144537
#define AT91C_PITC_PIVR AT91C_PITC_PIVR2028,144689
#define AT91C_PITC_PISR AT91C_PITC_PISR2029,144781
#define AT91C_PITC_PIIR AT91C_PITC_PIIR2030,144874
#define AT91C_PITC_PIMR AT91C_PITC_PIMR2031,144966
#define AT91C_WDTC_WDCR AT91C_WDTC_WDCR2033,145123
#define AT91C_WDTC_WDSR AT91C_WDTC_WDSR2034,145210
#define AT91C_WDTC_WDMR AT91C_WDTC_WDMR2035,145296
#define AT91C_VREG_MR AT91C_VREG_MR2037,145446
#define AT91C_MC_ASR AT91C_MC_ASR2039,145603
#define AT91C_MC_RCR AT91C_MC_RCR2040,145687
#define AT91C_MC_FCR AT91C_MC_FCR2041,145772
#define AT91C_MC_AASR AT91C_MC_AASR2042,145857
#define AT91C_MC_FSR AT91C_MC_FSR2043,145949
#define AT91C_MC_FMR AT91C_MC_FMR2044,146033
#define AT91C_SPI1_PTCR AT91C_SPI1_PTCR2046,146185
#define AT91C_SPI1_RPR AT91C_SPI1_RPR2047,146280
#define AT91C_SPI1_TNCR AT91C_SPI1_TNCR2048,146370
#define AT91C_SPI1_TPR AT91C_SPI1_TPR2049,146466
#define AT91C_SPI1_TNPR AT91C_SPI1_TNPR2050,146557
#define AT91C_SPI1_TCR AT91C_SPI1_TCR2051,146653
#define AT91C_SPI1_RCR AT91C_SPI1_RCR2052,146744
#define AT91C_SPI1_RNPR AT91C_SPI1_RNPR2053,146834
#define AT91C_SPI1_RNCR AT91C_SPI1_RNCR2054,146929
#define AT91C_SPI1_PTSR AT91C_SPI1_PTSR2055,147024
#define AT91C_SPI1_IMR AT91C_SPI1_IMR2057,147184
#define AT91C_SPI1_IER AT91C_SPI1_IER2058,147269
#define AT91C_SPI1_MR AT91C_SPI1_MR2059,147356
#define AT91C_SPI1_RDR AT91C_SPI1_RDR2060,147431
#define AT91C_SPI1_IDR AT91C_SPI1_IDR2061,147514
#define AT91C_SPI1_SR AT91C_SPI1_SR2062,147602
#define AT91C_SPI1_TDR AT91C_SPI1_TDR2063,147679
#define AT91C_SPI1_CR AT91C_SPI1_CR2064,147763
#define AT91C_SPI1_CSR AT91C_SPI1_CSR2065,147841
#define AT91C_SPI0_PTCR AT91C_SPI0_PTCR2067,147993
#define AT91C_SPI0_TPR AT91C_SPI0_TPR2068,148088
#define AT91C_SPI0_TCR AT91C_SPI0_TCR2069,148179
#define AT91C_SPI0_RCR AT91C_SPI0_RCR2070,148270
#define AT91C_SPI0_PTSR AT91C_SPI0_PTSR2071,148360
#define AT91C_SPI0_RNPR AT91C_SPI0_RNPR2072,148454
#define AT91C_SPI0_RPR AT91C_SPI0_RPR2073,148549
#define AT91C_SPI0_TNCR AT91C_SPI0_TNCR2074,148639
#define AT91C_SPI0_RNCR AT91C_SPI0_RNCR2075,148735
#define AT91C_SPI0_TNPR AT91C_SPI0_TNPR2076,148830
#define AT91C_SPI0_IER AT91C_SPI0_IER2078,148992
#define AT91C_SPI0_SR AT91C_SPI0_SR2079,149079
#define AT91C_SPI0_IDR AT91C_SPI0_IDR2080,149156
#define AT91C_SPI0_CR AT91C_SPI0_CR2081,149244
#define AT91C_SPI0_MR AT91C_SPI0_MR2082,149322
#define AT91C_SPI0_IMR AT91C_SPI0_IMR2083,149397
#define AT91C_SPI0_TDR AT91C_SPI0_TDR2084,149482
#define AT91C_SPI0_RDR AT91C_SPI0_RDR2085,149566
#define AT91C_SPI0_CSR AT91C_SPI0_CSR2086,149649
#define AT91C_US1_RNCR AT91C_US1_RNCR2088,149800
#define AT91C_US1_PTCR AT91C_US1_PTCR2089,149894
#define AT91C_US1_TCR AT91C_US1_TCR2090,149988
#define AT91C_US1_PTSR AT91C_US1_PTSR2091,150078
#define AT91C_US1_TNPR AT91C_US1_TNPR2092,150171
#define AT91C_US1_RCR AT91C_US1_RCR2093,150266
#define AT91C_US1_RNPR AT91C_US1_RNPR2094,150355
#define AT91C_US1_RPR AT91C_US1_RPR2095,150449
#define AT91C_US1_TNCR AT91C_US1_TNCR2096,150538
#define AT91C_US1_TPR AT91C_US1_TPR2097,150633
#define AT91C_US1_IF AT91C_US1_IF2099,150788
#define AT91C_US1_NER AT91C_US1_NER2100,150869
#define AT91C_US1_RTOR AT91C_US1_RTOR2101,150948
#define AT91C_US1_CSR AT91C_US1_CSR2102,151035
#define AT91C_US1_IDR AT91C_US1_IDR2103,151119
#define AT91C_US1_IER AT91C_US1_IER2104,151206
#define AT91C_US1_THR AT91C_US1_THR2105,151292
#define AT91C_US1_TTGR AT91C_US1_TTGR2106,151381
#define AT91C_US1_RHR AT91C_US1_RHR2107,151473
#define AT91C_US1_BRGR AT91C_US1_BRGR2108,151559
#define AT91C_US1_IMR AT91C_US1_IMR2109,151648
#define AT91C_US1_FIDI AT91C_US1_FIDI2110,151732
#define AT91C_US1_CR AT91C_US1_CR2111,151813
#define AT91C_US1_MR AT91C_US1_MR2112,151890
#define AT91C_US0_TNPR AT91C_US0_TNPR2114,152033
#define AT91C_US0_RNPR AT91C_US0_RNPR2115,152128
#define AT91C_US0_TCR AT91C_US0_TCR2116,152222
#define AT91C_US0_PTCR AT91C_US0_PTCR2117,152312
#define AT91C_US0_PTSR AT91C_US0_PTSR2118,152406
#define AT91C_US0_TNCR AT91C_US0_TNCR2119,152499
#define AT91C_US0_TPR AT91C_US0_TPR2120,152594
#define AT91C_US0_RCR AT91C_US0_RCR2121,152684
#define AT91C_US0_RPR AT91C_US0_RPR2122,152773
#define AT91C_US0_RNCR AT91C_US0_RNCR2123,152862
#define AT91C_US0_BRGR AT91C_US0_BRGR2125,153021
#define AT91C_US0_NER AT91C_US0_NER2126,153110
#define AT91C_US0_CR AT91C_US0_CR2127,153189
#define AT91C_US0_IMR AT91C_US0_IMR2128,153266
#define AT91C_US0_FIDI AT91C_US0_FIDI2129,153350
#define AT91C_US0_TTGR AT91C_US0_TTGR2130,153431
#define AT91C_US0_MR AT91C_US0_MR2131,153523
#define AT91C_US0_RTOR AT91C_US0_RTOR2132,153597
#define AT91C_US0_CSR AT91C_US0_CSR2133,153684
#define AT91C_US0_RHR AT91C_US0_RHR2134,153768
#define AT91C_US0_IDR AT91C_US0_IDR2135,153854
#define AT91C_US0_THR AT91C_US0_THR2136,153941
#define AT91C_US0_IF AT91C_US0_IF2137,154030
#define AT91C_US0_IER AT91C_US0_IER2138,154111
#define AT91C_SSC_TNCR AT91C_SSC_TNCR2140,154266
#define AT91C_SSC_RPR AT91C_SSC_RPR2141,154361
#define AT91C_SSC_RNCR AT91C_SSC_RNCR2142,154450
#define AT91C_SSC_TPR AT91C_SSC_TPR2143,154544
#define AT91C_SSC_PTCR AT91C_SSC_PTCR2144,154634
#define AT91C_SSC_TCR AT91C_SSC_TCR2145,154728
#define AT91C_SSC_RCR AT91C_SSC_RCR2146,154818
#define AT91C_SSC_RNPR AT91C_SSC_RNPR2147,154907
#define AT91C_SSC_TNPR AT91C_SSC_TNPR2148,155001
#define AT91C_SSC_PTSR AT91C_SSC_PTSR2149,155096
#define AT91C_SSC_RHR AT91C_SSC_RHR2151,155254
#define AT91C_SSC_RSHR AT91C_SSC_RSHR2152,155339
#define AT91C_SSC_TFMR AT91C_SSC_TFMR2153,155429
#define AT91C_SSC_IDR AT91C_SSC_IDR2154,155518
#define AT91C_SSC_THR AT91C_SSC_THR2155,155605
#define AT91C_SSC_RCMR AT91C_SSC_RCMR2156,155691
#define AT91C_SSC_IER AT91C_SSC_IER2157,155778
#define AT91C_SSC_TSHR AT91C_SSC_TSHR2158,155864
#define AT91C_SSC_SR AT91C_SSC_SR2159,155955
#define AT91C_SSC_CMR AT91C_SSC_CMR2160,156031
#define AT91C_SSC_TCMR AT91C_SSC_TCMR2161,156111
#define AT91C_SSC_CR AT91C_SSC_CR2162,156200
#define AT91C_SSC_IMR AT91C_SSC_IMR2163,156277
#define AT91C_SSC_RFMR AT91C_SSC_RFMR2164,156361
#define AT91C_TWI_IER AT91C_TWI_IER2166,156514
#define AT91C_TWI_CR AT91C_TWI_CR2167,156600
#define AT91C_TWI_SR AT91C_TWI_SR2168,156677
#define AT91C_TWI_IMR AT91C_TWI_IMR2169,156753
#define AT91C_TWI_THR AT91C_TWI_THR2170,156837
#define AT91C_TWI_IDR AT91C_TWI_IDR2171,156923
#define AT91C_TWI_IADR AT91C_TWI_IADR2172,157010
#define AT91C_TWI_MMR AT91C_TWI_MMR2173,157096
#define AT91C_TWI_CWGR AT91C_TWI_CWGR2174,157177
#define AT91C_TWI_RHR AT91C_TWI_RHR2175,157271
#define AT91C_PWMC_CH3_CUPDR AT91C_PWMC_CH3_CUPDR2177,157426
#define AT91C_PWMC_CH3_Reserved AT91C_PWMC_CH3_Reserved2178,157520
#define AT91C_PWMC_CH3_CPRDR AT91C_PWMC_CH3_CPRDR2179,157602
#define AT91C_PWMC_CH3_CDTYR AT91C_PWMC_CH3_CDTYR2180,157696
#define AT91C_PWMC_CH3_CCNTR AT91C_PWMC_CH3_CCNTR2181,157794
#define AT91C_PWMC_CH3_CMR AT91C_PWMC_CH3_CMR2182,157889
#define AT91C_PWMC_CH2_Reserved AT91C_PWMC_CH2_Reserved2184,158049
#define AT91C_PWMC_CH2_CMR AT91C_PWMC_CH2_CMR2185,158131
#define AT91C_PWMC_CH2_CCNTR AT91C_PWMC_CH2_CCNTR2186,158221
#define AT91C_PWMC_CH2_CPRDR AT91C_PWMC_CH2_CPRDR2187,158316
#define AT91C_PWMC_CH2_CUPDR AT91C_PWMC_CH2_CUPDR2188,158410
#define AT91C_PWMC_CH2_CDTYR AT91C_PWMC_CH2_CDTYR2189,158504
#define AT91C_PWMC_CH1_Reserved AT91C_PWMC_CH1_Reserved2191,158672
#define AT91C_PWMC_CH1_CUPDR AT91C_PWMC_CH1_CUPDR2192,158754
#define AT91C_PWMC_CH1_CPRDR AT91C_PWMC_CH1_CPRDR2193,158848
#define AT91C_PWMC_CH1_CCNTR AT91C_PWMC_CH1_CCNTR2194,158942
#define AT91C_PWMC_CH1_CDTYR AT91C_PWMC_CH1_CDTYR2195,159037
#define AT91C_PWMC_CH1_CMR AT91C_PWMC_CH1_CMR2196,159135
#define AT91C_PWMC_CH0_Reserved AT91C_PWMC_CH0_Reserved2198,159295
#define AT91C_PWMC_CH0_CPRDR AT91C_PWMC_CH0_CPRDR2199,159377
#define AT91C_PWMC_CH0_CDTYR AT91C_PWMC_CH0_CDTYR2200,159471
#define AT91C_PWMC_CH0_CMR AT91C_PWMC_CH0_CMR2201,159569
#define AT91C_PWMC_CH0_CUPDR AT91C_PWMC_CH0_CUPDR2202,159659
#define AT91C_PWMC_CH0_CCNTR AT91C_PWMC_CH0_CCNTR2203,159753
#define AT91C_PWMC_IDR AT91C_PWMC_IDR2205,159914
#define AT91C_PWMC_DIS AT91C_PWMC_DIS2206,160007
#define AT91C_PWMC_IER AT91C_PWMC_IER2207,160090
#define AT91C_PWMC_VR AT91C_PWMC_VR2208,160182
#define AT91C_PWMC_ISR AT91C_PWMC_ISR2209,160265
#define AT91C_PWMC_SR AT91C_PWMC_SR2210,160357
#define AT91C_PWMC_IMR AT91C_PWMC_IMR2211,160439
#define AT91C_PWMC_MR AT91C_PWMC_MR2212,160529
#define AT91C_PWMC_ENA AT91C_PWMC_ENA2213,160609
#define AT91C_UDP_IMR AT91C_UDP_IMR2215,160756
#define AT91C_UDP_FADDR AT91C_UDP_FADDR2216,160840
#define AT91C_UDP_NUM AT91C_UDP_NUM2217,160926
#define AT91C_UDP_FDR AT91C_UDP_FDR2218,161008
#define AT91C_UDP_ISR AT91C_UDP_ISR2219,161096
#define AT91C_UDP_CSR AT91C_UDP_CSR2220,161182
#define AT91C_UDP_IDR AT91C_UDP_IDR2221,161279
#define AT91C_UDP_ICR AT91C_UDP_ICR2222,161366
#define AT91C_UDP_RSTEP AT91C_UDP_RSTEP2223,161451
#define AT91C_UDP_TXVC AT91C_UDP_TXVC2224,161535
#define AT91C_UDP_GLBSTATE AT91C_UDP_GLBSTATE2225,161624
#define AT91C_UDP_IER AT91C_UDP_IER2226,161709
#define AT91C_TC0_SR AT91C_TC0_SR2228,161860
#define AT91C_TC0_RC AT91C_TC0_RC2229,161936
#define AT91C_TC0_RB AT91C_TC0_RB2230,162007
#define AT91C_TC0_CCR AT91C_TC0_CCR2231,162078
#define AT91C_TC0_CMR AT91C_TC0_CMR2232,162163
#define AT91C_TC0_IER AT91C_TC0_IER2233,162276
#define AT91C_TC0_RA AT91C_TC0_RA2234,162362
#define AT91C_TC0_IDR AT91C_TC0_IDR2235,162433
#define AT91C_TC0_CV AT91C_TC0_CV2236,162520
#define AT91C_TC0_IMR AT91C_TC0_IMR2237,162594
#define AT91C_TC1_RB AT91C_TC1_RB2239,162743
#define AT91C_TC1_CCR AT91C_TC1_CCR2240,162814
#define AT91C_TC1_IER AT91C_TC1_IER2241,162899
#define AT91C_TC1_IDR AT91C_TC1_IDR2242,162985
#define AT91C_TC1_SR AT91C_TC1_SR2243,163072
#define AT91C_TC1_CMR AT91C_TC1_CMR2244,163148
#define AT91C_TC1_RA AT91C_TC1_RA2245,163261
#define AT91C_TC1_RC AT91C_TC1_RC2246,163332
#define AT91C_TC1_IMR AT91C_TC1_IMR2247,163403
#define AT91C_TC1_CV AT91C_TC1_CV2248,163487
#define AT91C_TC2_CMR AT91C_TC2_CMR2250,163626
#define AT91C_TC2_CCR AT91C_TC2_CCR2251,163739
#define AT91C_TC2_CV AT91C_TC2_CV2252,163824
#define AT91C_TC2_RA AT91C_TC2_RA2253,163898
#define AT91C_TC2_RB AT91C_TC2_RB2254,163969
#define AT91C_TC2_IDR AT91C_TC2_IDR2255,164040
#define AT91C_TC2_IMR AT91C_TC2_IMR2256,164127
#define AT91C_TC2_RC AT91C_TC2_RC2257,164211
#define AT91C_TC2_IER AT91C_TC2_IER2258,164282
#define AT91C_TC2_SR AT91C_TC2_SR2259,164368
#define AT91C_TCB_BMR AT91C_TCB_BMR2261,164509
#define AT91C_TCB_BCR AT91C_TCB_BCR2262,164592
#define AT91C_CAN_MB0_MDL AT91C_CAN_MB0_MDL2264,164747
#define AT91C_CAN_MB0_MAM AT91C_CAN_MB0_MAM2265,164839
#define AT91C_CAN_MB0_MCR AT91C_CAN_MB0_MCR2266,164938
#define AT91C_CAN_MB0_MID AT91C_CAN_MB0_MID2267,165029
#define AT91C_CAN_MB0_MSR AT91C_CAN_MB0_MSR2268,165115
#define AT91C_CAN_MB0_MFID AT91C_CAN_MB0_MFID2269,165205
#define AT91C_CAN_MB0_MDH AT91C_CAN_MB0_MDH2270,165299
#define AT91C_CAN_MB0_MMR AT91C_CAN_MB0_MMR2271,165392
#define AT91C_CAN_MB1_MDL AT91C_CAN_MB1_MDL2273,165549
#define AT91C_CAN_MB1_MID AT91C_CAN_MB1_MID2274,165641
#define AT91C_CAN_MB1_MMR AT91C_CAN_MB1_MMR2275,165727
#define AT91C_CAN_MB1_MSR AT91C_CAN_MB1_MSR2276,165815
#define AT91C_CAN_MB1_MAM AT91C_CAN_MB1_MAM2277,165905
#define AT91C_CAN_MB1_MDH AT91C_CAN_MB1_MDH2278,166004
#define AT91C_CAN_MB1_MCR AT91C_CAN_MB1_MCR2279,166097
#define AT91C_CAN_MB1_MFID AT91C_CAN_MB1_MFID2280,166188
#define AT91C_CAN_MB2_MCR AT91C_CAN_MB2_MCR2282,166351
#define AT91C_CAN_MB2_MDH AT91C_CAN_MB2_MDH2283,166442
#define AT91C_CAN_MB2_MID AT91C_CAN_MB2_MID2284,166535
#define AT91C_CAN_MB2_MDL AT91C_CAN_MB2_MDL2285,166621
#define AT91C_CAN_MB2_MMR AT91C_CAN_MB2_MMR2286,166713
#define AT91C_CAN_MB2_MAM AT91C_CAN_MB2_MAM2287,166801
#define AT91C_CAN_MB2_MFID AT91C_CAN_MB2_MFID2288,166900
#define AT91C_CAN_MB2_MSR AT91C_CAN_MB2_MSR2289,166994
#define AT91C_CAN_MB3_MFID AT91C_CAN_MB3_MFID2291,167153
#define AT91C_CAN_MB3_MAM AT91C_CAN_MB3_MAM2292,167247
#define AT91C_CAN_MB3_MID AT91C_CAN_MB3_MID2293,167346
#define AT91C_CAN_MB3_MCR AT91C_CAN_MB3_MCR2294,167432
#define AT91C_CAN_MB3_MMR AT91C_CAN_MB3_MMR2295,167523
#define AT91C_CAN_MB3_MSR AT91C_CAN_MB3_MSR2296,167611
#define AT91C_CAN_MB3_MDL AT91C_CAN_MB3_MDL2297,167701
#define AT91C_CAN_MB3_MDH AT91C_CAN_MB3_MDH2298,167793
#define AT91C_CAN_MB4_MID AT91C_CAN_MB4_MID2300,167955
#define AT91C_CAN_MB4_MMR AT91C_CAN_MB4_MMR2301,168041
#define AT91C_CAN_MB4_MDH AT91C_CAN_MB4_MDH2302,168129
#define AT91C_CAN_MB4_MFID AT91C_CAN_MB4_MFID2303,168222
#define AT91C_CAN_MB4_MSR AT91C_CAN_MB4_MSR2304,168316
#define AT91C_CAN_MB4_MCR AT91C_CAN_MB4_MCR2305,168406
#define AT91C_CAN_MB4_MDL AT91C_CAN_MB4_MDL2306,168497
#define AT91C_CAN_MB4_MAM AT91C_CAN_MB4_MAM2307,168589
#define AT91C_CAN_MB5_MSR AT91C_CAN_MB5_MSR2309,168757
#define AT91C_CAN_MB5_MCR AT91C_CAN_MB5_MCR2310,168847
#define AT91C_CAN_MB5_MFID AT91C_CAN_MB5_MFID2311,168938
#define AT91C_CAN_MB5_MDH AT91C_CAN_MB5_MDH2312,169032
#define AT91C_CAN_MB5_MID AT91C_CAN_MB5_MID2313,169125
#define AT91C_CAN_MB5_MMR AT91C_CAN_MB5_MMR2314,169211
#define AT91C_CAN_MB5_MDL AT91C_CAN_MB5_MDL2315,169299
#define AT91C_CAN_MB5_MAM AT91C_CAN_MB5_MAM2316,169391
#define AT91C_CAN_MB6_MFID AT91C_CAN_MB6_MFID2318,169559
#define AT91C_CAN_MB6_MID AT91C_CAN_MB6_MID2319,169653
#define AT91C_CAN_MB6_MAM AT91C_CAN_MB6_MAM2320,169739
#define AT91C_CAN_MB6_MSR AT91C_CAN_MB6_MSR2321,169838
#define AT91C_CAN_MB6_MDL AT91C_CAN_MB6_MDL2322,169928
#define AT91C_CAN_MB6_MCR AT91C_CAN_MB6_MCR2323,170020
#define AT91C_CAN_MB6_MDH AT91C_CAN_MB6_MDH2324,170111
#define AT91C_CAN_MB6_MMR AT91C_CAN_MB6_MMR2325,170204
#define AT91C_CAN_MB7_MCR AT91C_CAN_MB7_MCR2327,170361
#define AT91C_CAN_MB7_MDH AT91C_CAN_MB7_MDH2328,170452
#define AT91C_CAN_MB7_MFID AT91C_CAN_MB7_MFID2329,170545
#define AT91C_CAN_MB7_MDL AT91C_CAN_MB7_MDL2330,170639
#define AT91C_CAN_MB7_MID AT91C_CAN_MB7_MID2331,170731
#define AT91C_CAN_MB7_MMR AT91C_CAN_MB7_MMR2332,170817
#define AT91C_CAN_MB7_MAM AT91C_CAN_MB7_MAM2333,170905
#define AT91C_CAN_MB7_MSR AT91C_CAN_MB7_MSR2334,171004
#define AT91C_CAN_TCR AT91C_CAN_TCR2336,171159
#define AT91C_CAN_IMR AT91C_CAN_IMR2337,171245
#define AT91C_CAN_IER AT91C_CAN_IER2338,171329
#define AT91C_CAN_ECR AT91C_CAN_ECR2339,171415
#define AT91C_CAN_TIMESTP AT91C_CAN_TIMESTP2340,171498
#define AT91C_CAN_MR AT91C_CAN_MR2341,171580
#define AT91C_CAN_IDR AT91C_CAN_IDR2342,171654
#define AT91C_CAN_ACR AT91C_CAN_ACR2343,171741
#define AT91C_CAN_TIM AT91C_CAN_TIM2344,171824
#define AT91C_CAN_SR AT91C_CAN_SR2345,171899
#define AT91C_CAN_BR AT91C_CAN_BR2346,171975
#define AT91C_CAN_VR AT91C_CAN_VR2347,172053
#define AT91C_EMAC_ISR AT91C_EMAC_ISR2349,172196
#define AT91C_EMAC_SA4H AT91C_EMAC_SA4H2350,172283
#define AT91C_EMAC_SA1L AT91C_EMAC_SA1L2351,172381
#define AT91C_EMAC_ELE AT91C_EMAC_ELE2352,172483
#define AT91C_EMAC_LCOL AT91C_EMAC_LCOL2353,172577
#define AT91C_EMAC_RLE AT91C_EMAC_RLE2354,172662
#define AT91C_EMAC_WOL AT91C_EMAC_WOL2355,172762
#define AT91C_EMAC_DTF AT91C_EMAC_DTF2356,172844
#define AT91C_EMAC_TUND AT91C_EMAC_TUND2357,172942
#define AT91C_EMAC_NCR AT91C_EMAC_NCR2358,173036
#define AT91C_EMAC_SA4L AT91C_EMAC_SA4L2359,173122
#define AT91C_EMAC_RSR AT91C_EMAC_RSR2360,173224
#define AT91C_EMAC_SA3L AT91C_EMAC_SA3L2361,173309
#define AT91C_EMAC_TSR AT91C_EMAC_TSR2362,173411
#define AT91C_EMAC_IDR AT91C_EMAC_IDR2363,173497
#define AT91C_EMAC_RSE AT91C_EMAC_RSE2364,173585
#define AT91C_EMAC_ECOL AT91C_EMAC_ECOL2365,173677
#define AT91C_EMAC_TID AT91C_EMAC_TID2366,173767
#define AT91C_EMAC_HRB AT91C_EMAC_HRB2367,173854
#define AT91C_EMAC_TBQP AT91C_EMAC_TBQP2368,173941
#define AT91C_EMAC_USRIO AT91C_EMAC_USRIO2369,174032
#define AT91C_EMAC_PTR AT91C_EMAC_PTR2370,174121
#define AT91C_EMAC_SA2H AT91C_EMAC_SA2H2371,174202
#define AT91C_EMAC_ROV AT91C_EMAC_ROV2372,174300
#define AT91C_EMAC_ALE AT91C_EMAC_ALE2373,174393
#define AT91C_EMAC_RJA AT91C_EMAC_RJA2374,174479
#define AT91C_EMAC_RBQP AT91C_EMAC_RBQP2375,174565
#define AT91C_EMAC_TPF AT91C_EMAC_TPF2376,174655
#define AT91C_EMAC_NCFGR AT91C_EMAC_NCFGR2377,174750
#define AT91C_EMAC_HRT AT91C_EMAC_HRT2378,174843
#define AT91C_EMAC_USF AT91C_EMAC_USF2379,174928
#define AT91C_EMAC_FCSE AT91C_EMAC_FCSE2380,175015
#define AT91C_EMAC_TPQ AT91C_EMAC_TPQ2381,175112
#define AT91C_EMAC_MAN AT91C_EMAC_MAN2382,175205
#define AT91C_EMAC_FTO AT91C_EMAC_FTO2383,175291
#define AT91C_EMAC_REV AT91C_EMAC_REV2384,175383
#define AT91C_EMAC_IMR AT91C_EMAC_IMR2385,175462
#define AT91C_EMAC_SCF AT91C_EMAC_SCF2386,175547
#define AT91C_EMAC_PFR AT91C_EMAC_PFR2387,175640
#define AT91C_EMAC_MCF AT91C_EMAC_MCF2388,175732
#define AT91C_EMAC_NSR AT91C_EMAC_NSR2389,175827
#define AT91C_EMAC_SA2L AT91C_EMAC_SA2L2390,175912
#define AT91C_EMAC_FRO AT91C_EMAC_FRO2391,176014
#define AT91C_EMAC_IER AT91C_EMAC_IER2392,176103
#define AT91C_EMAC_SA1H AT91C_EMAC_SA1H2393,176190
#define AT91C_EMAC_CSE AT91C_EMAC_CSE2394,176288
#define AT91C_EMAC_SA3H AT91C_EMAC_SA3H2395,176378
#define AT91C_EMAC_RRE AT91C_EMAC_RRE2396,176476
#define AT91C_EMAC_STE AT91C_EMAC_STE2397,176570
#define AT91C_ADC_PTSR AT91C_ADC_PTSR2399,176724
#define AT91C_ADC_PTCR AT91C_ADC_PTCR2400,176817
#define AT91C_ADC_TNPR AT91C_ADC_TNPR2401,176911
#define AT91C_ADC_TNCR AT91C_ADC_TNCR2402,177006
#define AT91C_ADC_RNPR AT91C_ADC_RNPR2403,177101
#define AT91C_ADC_RNCR AT91C_ADC_RNCR2404,177195
#define AT91C_ADC_RPR AT91C_ADC_RPR2405,177289
#define AT91C_ADC_TCR AT91C_ADC_TCR2406,177378
#define AT91C_ADC_TPR AT91C_ADC_TPR2407,177468
#define AT91C_ADC_RCR AT91C_ADC_RCR2408,177558
#define AT91C_ADC_CDR2 AT91C_ADC_CDR22410,177712
#define AT91C_ADC_CDR3 AT91C_ADC_CDR32411,177800
#define AT91C_ADC_CDR0 AT91C_ADC_CDR02412,177888
#define AT91C_ADC_CDR5 AT91C_ADC_CDR52413,177976
#define AT91C_ADC_CHDR AT91C_ADC_CHDR2414,178064
#define AT91C_ADC_SR AT91C_ADC_SR2415,178153
#define AT91C_ADC_CDR4 AT91C_ADC_CDR42416,178233
#define AT91C_ADC_CDR1 AT91C_ADC_CDR12417,178321
#define AT91C_ADC_LCDR AT91C_ADC_LCDR2418,178409
#define AT91C_ADC_IDR AT91C_ADC_IDR2419,178502
#define AT91C_ADC_CR AT91C_ADC_CR2420,178593
#define AT91C_ADC_CDR7 AT91C_ADC_CDR72421,178674
#define AT91C_ADC_CDR6 AT91C_ADC_CDR62422,178762
#define AT91C_ADC_IER AT91C_ADC_IER2423,178850
#define AT91C_ADC_CHER AT91C_ADC_CHER2424,178940
#define AT91C_ADC_CHSR AT91C_ADC_CHSR2425,179028
#define AT91C_ADC_MR AT91C_ADC_MR2426,179116
#define AT91C_ADC_IMR AT91C_ADC_IMR2427,179194
#define AT91C_AES_TPR AT91C_AES_TPR2429,179351
#define AT91C_AES_PTCR AT91C_AES_PTCR2430,179441
#define AT91C_AES_RNPR AT91C_AES_RNPR2431,179535
#define AT91C_AES_TNCR AT91C_AES_TNCR2432,179629
#define AT91C_AES_TCR AT91C_AES_TCR2433,179724
#define AT91C_AES_RCR AT91C_AES_RCR2434,179814
#define AT91C_AES_RNCR AT91C_AES_RNCR2435,179903
#define AT91C_AES_TNPR AT91C_AES_TNPR2436,179997
#define AT91C_AES_RPR AT91C_AES_RPR2437,180092
#define AT91C_AES_PTSR AT91C_AES_PTSR2438,180181
#define AT91C_AES_IVxR AT91C_AES_IVxR2440,180339
#define AT91C_AES_MR AT91C_AES_MR2441,180432
#define AT91C_AES_VR AT91C_AES_VR2442,180506
#define AT91C_AES_ODATAxR AT91C_AES_ODATAxR2443,180587
#define AT91C_AES_IDATAxR AT91C_AES_IDATAxR2444,180672
#define AT91C_AES_CR AT91C_AES_CR2445,180756
#define AT91C_AES_IDR AT91C_AES_IDR2446,180833
#define AT91C_AES_IMR AT91C_AES_IMR2447,180920
#define AT91C_AES_IER AT91C_AES_IER2448,181004
#define AT91C_AES_KEYWxR AT91C_AES_KEYWxR2449,181090
#define AT91C_AES_ISR AT91C_AES_ISR2450,181171
#define AT91C_TDES_RNCR AT91C_TDES_RNCR2452,181327
#define AT91C_TDES_TCR AT91C_TDES_TCR2453,181422
#define AT91C_TDES_RCR AT91C_TDES_RCR2454,181513
#define AT91C_TDES_TNPR AT91C_TDES_TNPR2455,181603
#define AT91C_TDES_RNPR AT91C_TDES_RNPR2456,181699
#define AT91C_TDES_RPR AT91C_TDES_RPR2457,181794
#define AT91C_TDES_TNCR AT91C_TDES_TNCR2458,181884
#define AT91C_TDES_TPR AT91C_TDES_TPR2459,181980
#define AT91C_TDES_PTSR AT91C_TDES_PTSR2460,182071
#define AT91C_TDES_PTCR AT91C_TDES_PTCR2461,182165
#define AT91C_TDES_KEY2WxR AT91C_TDES_KEY2WxR2463,182326
#define AT91C_TDES_KEY3WxR AT91C_TDES_KEY3WxR2464,182412
#define AT91C_TDES_IDR AT91C_TDES_IDR2465,182498
#define AT91C_TDES_VR AT91C_TDES_VR2466,182586
#define AT91C_TDES_IVxR AT91C_TDES_IVxR2467,182669
#define AT91C_TDES_ODATAxR AT91C_TDES_ODATAxR2468,182763
#define AT91C_TDES_IMR AT91C_TDES_IMR2469,182850
#define AT91C_TDES_MR AT91C_TDES_MR2470,182935
#define AT91C_TDES_CR AT91C_TDES_CR2471,183010
#define AT91C_TDES_IER AT91C_TDES_IER2472,183088
#define AT91C_TDES_ISR AT91C_TDES_ISR2473,183175
#define AT91C_TDES_IDATAxR AT91C_TDES_IDATAxR2474,183262
#define AT91C_TDES_KEY1WxR AT91C_TDES_KEY1WxR2475,183348
#define AT91C_PIO_PA0 AT91C_PIO_PA02480,183647
#define AT91C_PA0_RXD0 AT91C_PA0_RXD02481,183726
#define AT91C_PIO_PA1 AT91C_PIO_PA12482,183809
#define AT91C_PA1_TXD0 AT91C_PA1_TXD02483,183888
#define AT91C_PIO_PA10 AT91C_PIO_PA102484,183972
#define AT91C_PA10_TWD AT91C_PA10_TWD2485,184052
#define AT91C_PIO_PA11 AT91C_PIO_PA112486,184141
#define AT91C_PA11_TWCK AT91C_PA11_TWCK2487,184221
#define AT91C_PIO_PA12 AT91C_PIO_PA122488,184311
#define AT91C_PA12_NPCS00 AT91C_PA12_NPCS002489,184391
#define AT91C_PIO_PA13 AT91C_PIO_PA132490,184486
#define AT91C_PA13_NPCS01 AT91C_PA13_NPCS012491,184566
#define AT91C_PA13_PCK1 AT91C_PA13_PCK12492,184661
#define AT91C_PIO_PA14 AT91C_PIO_PA142493,184757
#define AT91C_PA14_NPCS02 AT91C_PA14_NPCS022494,184837
#define AT91C_PA14_IRQ1 AT91C_PA14_IRQ12495,184932
#define AT91C_PIO_PA15 AT91C_PIO_PA152496,185017
#define AT91C_PA15_NPCS03 AT91C_PA15_NPCS032497,185097
#define AT91C_PA15_TCLK2 AT91C_PA15_TCLK22498,185192
#define AT91C_PIO_PA16 AT91C_PIO_PA162499,185293
#define AT91C_PA16_MISO0 AT91C_PA16_MISO02500,185373
#define AT91C_PIO_PA17 AT91C_PIO_PA172501,185459
#define AT91C_PA17_MOSI0 AT91C_PA17_MOSI02502,185539
#define AT91C_PIO_PA18 AT91C_PIO_PA182503,185626
#define AT91C_PA18_SPCK0 AT91C_PA18_SPCK02504,185706
#define AT91C_PIO_PA19 AT91C_PIO_PA192505,185789
#define AT91C_PA19_CANRX AT91C_PA19_CANRX2506,185869
#define AT91C_PIO_PA2 AT91C_PIO_PA22507,185945
#define AT91C_PA2_SCK0 AT91C_PA2_SCK02508,186024
#define AT91C_PA2_NPCS11 AT91C_PA2_NPCS112509,186107
#define AT91C_PIO_PA20 AT91C_PIO_PA202510,186200
#define AT91C_PA20_CANTX AT91C_PA20_CANTX2511,186280
#define AT91C_PIO_PA21 AT91C_PIO_PA212512,186357
#define AT91C_PA21_TF AT91C_PA21_TF2513,186437
#define AT91C_PA21_NPCS10 AT91C_PA21_NPCS102514,186525
#define AT91C_PIO_PA22 AT91C_PIO_PA222515,186620
#define AT91C_PA22_TK AT91C_PA22_TK2516,186700
#define AT91C_PA22_SPCK1 AT91C_PA22_SPCK12517,186783
#define AT91C_PIO_PA23 AT91C_PIO_PA232518,186866
#define AT91C_PA23_TD AT91C_PA23_TD2519,186946
#define AT91C_PA23_MOSI1 AT91C_PA23_MOSI12520,187028
#define AT91C_PIO_PA24 AT91C_PIO_PA242521,187115
#define AT91C_PA24_RD AT91C_PA24_RD2522,187195
#define AT91C_PA24_MISO1 AT91C_PA24_MISO12523,187276
#define AT91C_PIO_PA25 AT91C_PIO_PA252524,187362
#define AT91C_PA25_RK AT91C_PA25_RK2525,187442
#define AT91C_PA25_NPCS11 AT91C_PA25_NPCS112526,187524
#define AT91C_PIO_PA26 AT91C_PIO_PA262527,187619
#define AT91C_PA26_RF AT91C_PA26_RF2528,187699
#define AT91C_PA26_NPCS12 AT91C_PA26_NPCS122529,187786
#define AT91C_PIO_PA27 AT91C_PIO_PA272530,187881
#define AT91C_PA27_DRXD AT91C_PA27_DRXD2531,187961
#define AT91C_PA27_PCK3 AT91C_PA27_PCK32532,188049
#define AT91C_PIO_PA28 AT91C_PIO_PA282533,188145
#define AT91C_PA28_DTXD AT91C_PA28_DTXD2534,188225
#define AT91C_PIO_PA29 AT91C_PIO_PA292535,188314
#define AT91C_PA29_FIQ AT91C_PA29_FIQ2536,188394
#define AT91C_PA29_NPCS13 AT91C_PA29_NPCS132537,188483
#define AT91C_PIO_PA3 AT91C_PIO_PA32538,188578
#define AT91C_PA3_RTS0 AT91C_PA3_RTS02539,188657
#define AT91C_PA3_NPCS12 AT91C_PA3_NPCS122540,188741
#define AT91C_PIO_PA30 AT91C_PIO_PA302541,188834
#define AT91C_PA30_IRQ0 AT91C_PA30_IRQ02542,188914
#define AT91C_PA30_PCK2 AT91C_PA30_PCK22543,188999
#define AT91C_PIO_PA4 AT91C_PIO_PA42544,189095
#define AT91C_PA4_CTS0 AT91C_PA4_CTS02545,189174
#define AT91C_PA4_NPCS13 AT91C_PA4_NPCS132546,189258
#define AT91C_PIO_PA5 AT91C_PIO_PA52547,189351
#define AT91C_PA5_RXD1 AT91C_PA5_RXD12548,189430
#define AT91C_PIO_PA6 AT91C_PIO_PA62549,189513
#define AT91C_PA6_TXD1 AT91C_PA6_TXD12550,189592
#define AT91C_PIO_PA7 AT91C_PIO_PA72551,189676
#define AT91C_PA7_SCK1 AT91C_PA7_SCK12552,189755
#define AT91C_PA7_NPCS01 AT91C_PA7_NPCS012553,189838
#define AT91C_PIO_PA8 AT91C_PIO_PA82554,189931
#define AT91C_PA8_RTS1 AT91C_PA8_RTS12555,190010
#define AT91C_PA8_NPCS02 AT91C_PA8_NPCS022556,190094
#define AT91C_PIO_PA9 AT91C_PIO_PA92557,190187
#define AT91C_PA9_CTS1 AT91C_PA9_CTS12558,190266
#define AT91C_PA9_NPCS03 AT91C_PA9_NPCS032559,190350
#define AT91C_PIO_PB0 AT91C_PIO_PB02560,190443
#define AT91C_PB0_ETXCK_EREFCK AT91C_PB0_ETXCK_EREFCK2561,190522
#define AT91C_PB0_PCK0 AT91C_PB0_PCK02562,190632
#define AT91C_PIO_PB1 AT91C_PIO_PB12563,190726
#define AT91C_PB1_ETXEN AT91C_PB1_ETXEN2564,190805
#define AT91C_PIO_PB10 AT91C_PIO_PB102565,190896
#define AT91C_PB10_ETX2 AT91C_PB10_ETX22566,190976
#define AT91C_PB10_NPCS11 AT91C_PB10_NPCS112567,191069
#define AT91C_PIO_PB11 AT91C_PIO_PB112568,191164
#define AT91C_PB11_ETX3 AT91C_PB11_ETX32569,191244
#define AT91C_PB11_NPCS12 AT91C_PB11_NPCS122570,191337
#define AT91C_PIO_PB12 AT91C_PIO_PB122571,191432
#define AT91C_PB12_ETXER AT91C_PB12_ETXER2572,191512
#define AT91C_PB12_TCLK0 AT91C_PB12_TCLK02573,191612
#define AT91C_PIO_PB13 AT91C_PIO_PB132574,191713
#define AT91C_PB13_ERX2 AT91C_PB13_ERX22575,191793
#define AT91C_PB13_NPCS01 AT91C_PB13_NPCS012576,191885
#define AT91C_PIO_PB14 AT91C_PIO_PB142577,191980
#define AT91C_PB14_ERX3 AT91C_PB14_ERX32578,192060
#define AT91C_PB14_NPCS02 AT91C_PB14_NPCS022579,192152
#define AT91C_PIO_PB15 AT91C_PIO_PB152580,192247
#define AT91C_PB15_ERXDV AT91C_PB15_ERXDV2581,192327
#define AT91C_PIO_PB16 AT91C_PIO_PB162582,192423
#define AT91C_PB16_ECOL AT91C_PB16_ECOL2583,192503
#define AT91C_PB16_NPCS13 AT91C_PB16_NPCS132584,192599
#define AT91C_PIO_PB17 AT91C_PIO_PB172585,192694
#define AT91C_PB17_ERXCK AT91C_PB17_ERXCK2586,192774
#define AT91C_PB17_NPCS03 AT91C_PB17_NPCS032587,192865
#define AT91C_PIO_PB18 AT91C_PIO_PB182588,192960
#define AT91C_PB18_EF100 AT91C_PB18_EF1002589,193040
#define AT91C_PB18_ADTRG AT91C_PB18_ADTRG2590,193137
#define AT91C_PIO_PB19 AT91C_PIO_PB192591,193222
#define AT91C_PB19_PWM0 AT91C_PB19_PWM02592,193302
#define AT91C_PB19_TCLK1 AT91C_PB19_TCLK12593,193380
#define AT91C_PIO_PB2 AT91C_PIO_PB22594,193481
#define AT91C_PB2_ETX0 AT91C_PB2_ETX02595,193560
#define AT91C_PIO_PB20 AT91C_PIO_PB202596,193651
#define AT91C_PB20_PWM1 AT91C_PB20_PWM12597,193731
#define AT91C_PB20_PCK0 AT91C_PB20_PCK02598,193809
#define AT91C_PIO_PB21 AT91C_PIO_PB212599,193905
#define AT91C_PB21_PWM2 AT91C_PB21_PWM22600,193985
#define AT91C_PB21_PCK1 AT91C_PB21_PCK12601,194063
#define AT91C_PIO_PB22 AT91C_PIO_PB222602,194159
#define AT91C_PB22_PWM3 AT91C_PB22_PWM32603,194239
#define AT91C_PB22_PCK2 AT91C_PB22_PCK22604,194317
#define AT91C_PIO_PB23 AT91C_PIO_PB232605,194413
#define AT91C_PB23_TIOA0 AT91C_PB23_TIOA02606,194493
#define AT91C_PB23_DCD1 AT91C_PB23_DCD12607,194602
#define AT91C_PIO_PB24 AT91C_PIO_PB242608,194694
#define AT91C_PB24_TIOB0 AT91C_PB24_TIOB02609,194774
#define AT91C_PB24_DSR1 AT91C_PB24_DSR12610,194883
#define AT91C_PIO_PB25 AT91C_PIO_PB252611,194970
#define AT91C_PB25_TIOA1 AT91C_PB25_TIOA12612,195050
#define AT91C_PB25_DTR1 AT91C_PB25_DTR12613,195159
#define AT91C_PIO_PB26 AT91C_PIO_PB262614,195251
#define AT91C_PB26_TIOB1 AT91C_PB26_TIOB12615,195331
#define AT91C_PB26_RI1 AT91C_PB26_RI12616,195440
#define AT91C_PIO_PB27 AT91C_PIO_PB272617,195527
#define AT91C_PB27_TIOA2 AT91C_PB27_TIOA22618,195607
#define AT91C_PB27_PWM0 AT91C_PB27_PWM02619,195716
#define AT91C_PIO_PB28 AT91C_PIO_PB282620,195794
#define AT91C_PB28_TIOB2 AT91C_PB28_TIOB22621,195874
#define AT91C_PB28_PWM1 AT91C_PB28_PWM12622,195983
#define AT91C_PIO_PB29 AT91C_PIO_PB292623,196061
#define AT91C_PB29_PCK1 AT91C_PB29_PCK12624,196141
#define AT91C_PB29_PWM2 AT91C_PB29_PWM22625,196237
#define AT91C_PIO_PB3 AT91C_PIO_PB32626,196315
#define AT91C_PB3_ETX1 AT91C_PB3_ETX12627,196394
#define AT91C_PIO_PB30 AT91C_PIO_PB302628,196485
#define AT91C_PB30_PCK2 AT91C_PB30_PCK22629,196565
#define AT91C_PB30_PWM3 AT91C_PB30_PWM32630,196661
#define AT91C_PIO_PB4 AT91C_PIO_PB42631,196739
#define AT91C_PB4_ECRS_ECRSDV AT91C_PB4_ECRS_ECRSDV2632,196818
#define AT91C_PIO_PB5 AT91C_PIO_PB52633,196939
#define AT91C_PB5_ERX0 AT91C_PB5_ERX02634,197018
#define AT91C_PIO_PB6 AT91C_PIO_PB62635,197108
#define AT91C_PB6_ERX1 AT91C_PB6_ERX12636,197187
#define AT91C_PIO_PB7 AT91C_PIO_PB72637,197277
#define AT91C_PB7_ERXER AT91C_PB7_ERXER2638,197356
#define AT91C_PIO_PB8 AT91C_PIO_PB82639,197445
#define AT91C_PB8_EMDC AT91C_PB8_EMDC2640,197524
#define AT91C_PIO_PB9 AT91C_PIO_PB92641,197621
#define AT91C_PB9_EMDIO AT91C_PB9_EMDIO2642,197700
#define AT91C_ID_FIQ AT91C_ID_FIQ2647,198027
#define AT91C_ID_SYS AT91C_ID_SYS2648,198110
#define AT91C_ID_PIOA AT91C_ID_PIOA2649,198175
#define AT91C_ID_PIOB AT91C_ID_PIOB2650,198247
#define AT91C_ID_SPI0 AT91C_ID_SPI02651,198319
#define AT91C_ID_SPI1 AT91C_ID_SPI12652,198396
#define AT91C_ID_US0 AT91C_ID_US02653,198473
#define AT91C_ID_US1 AT91C_ID_US12654,198528
#define AT91C_ID_SSC AT91C_ID_SSC2655,198583
#define AT91C_ID_TWI AT91C_ID_TWI2656,198660
#define AT91C_ID_PWMC AT91C_ID_PWMC2657,198726
#define AT91C_ID_UDP AT91C_ID_UDP2658,198788
#define AT91C_ID_TC0 AT91C_ID_TC02659,198851
#define AT91C_ID_TC1 AT91C_ID_TC12660,198914
#define AT91C_ID_TC2 AT91C_ID_TC22661,198977
#define AT91C_ID_CAN AT91C_ID_CAN2662,199040
#define AT91C_ID_EMAC AT91C_ID_EMAC2663,199119
#define AT91C_ID_ADC AT91C_ID_ADC2664,199179
#define AT91C_ID_AES AT91C_ID_AES2665,199254
#define AT91C_ID_TDES AT91C_ID_TDES2666,199338
#define AT91C_ID_20_Reserved AT91C_ID_20_Reserved2667,199417
#define AT91C_ID_21_Reserved AT91C_ID_21_Reserved2668,199478
#define AT91C_ID_22_Reserved AT91C_ID_22_Reserved2669,199539
#define AT91C_ID_23_Reserved AT91C_ID_23_Reserved2670,199600
#define AT91C_ID_24_Reserved AT91C_ID_24_Reserved2671,199661
#define AT91C_ID_25_Reserved AT91C_ID_25_Reserved2672,199722
#define AT91C_ID_26_Reserved AT91C_ID_26_Reserved2673,199783
#define AT91C_ID_27_Reserved AT91C_ID_27_Reserved2674,199844
#define AT91C_ID_28_Reserved AT91C_ID_28_Reserved2675,199905
#define AT91C_ID_29_Reserved AT91C_ID_29_Reserved2676,199966
#define AT91C_ID_IRQ0 AT91C_ID_IRQ02677,200027
#define AT91C_ID_IRQ1 AT91C_ID_IRQ12678,200111
#define AT91C_BASE_SYS AT91C_BASE_SYS2683,200417
#define AT91C_BASE_AIC AT91C_BASE_AIC2684,200495
#define AT91C_BASE_PDC_DBGU AT91C_BASE_PDC_DBGU2685,200573
#define AT91C_BASE_DBGU AT91C_BASE_DBGU2686,200656
#define AT91C_BASE_PIOA AT91C_BASE_PIOA2687,200736
#define AT91C_BASE_PIOB AT91C_BASE_PIOB2688,200815
#define AT91C_BASE_CKGR AT91C_BASE_CKGR2689,200894
#define AT91C_BASE_PMC AT91C_BASE_PMC2690,200974
#define AT91C_BASE_RSTC AT91C_BASE_RSTC2691,201052
#define AT91C_BASE_RTTC AT91C_BASE_RTTC2692,201132
#define AT91C_BASE_PITC AT91C_BASE_PITC2693,201212
#define AT91C_BASE_WDTC AT91C_BASE_WDTC2694,201292
#define AT91C_BASE_VREG AT91C_BASE_VREG2695,201372
#define AT91C_BASE_MC AT91C_BASE_MC2696,201452
#define AT91C_BASE_PDC_SPI1 AT91C_BASE_PDC_SPI12697,201528
#define AT91C_BASE_SPI1 AT91C_BASE_SPI12698,201611
#define AT91C_BASE_PDC_SPI0 AT91C_BASE_PDC_SPI02699,201690
#define AT91C_BASE_SPI0 AT91C_BASE_SPI02700,201773
#define AT91C_BASE_PDC_US1 AT91C_BASE_PDC_US12701,201852
#define AT91C_BASE_US1 AT91C_BASE_US12702,201934
#define AT91C_BASE_PDC_US0 AT91C_BASE_PDC_US02703,202014
#define AT91C_BASE_US0 AT91C_BASE_US02704,202096
#define AT91C_BASE_PDC_SSC AT91C_BASE_PDC_SSC2705,202176
#define AT91C_BASE_SSC AT91C_BASE_SSC2706,202258
#define AT91C_BASE_TWI AT91C_BASE_TWI2707,202336
#define AT91C_BASE_PWMC_CH3 AT91C_BASE_PWMC_CH32708,202414
#define AT91C_BASE_PWMC_CH2 AT91C_BASE_PWMC_CH22709,202501
#define AT91C_BASE_PWMC_CH1 AT91C_BASE_PWMC_CH12710,202588
#define AT91C_BASE_PWMC_CH0 AT91C_BASE_PWMC_CH02711,202675
#define AT91C_BASE_PWMC AT91C_BASE_PWMC2712,202762
#define AT91C_BASE_UDP AT91C_BASE_UDP2713,202842
#define AT91C_BASE_TC0 AT91C_BASE_TC02714,202920
#define AT91C_BASE_TC1 AT91C_BASE_TC12715,202997
#define AT91C_BASE_TC2 AT91C_BASE_TC22716,203074
#define AT91C_BASE_TCB AT91C_BASE_TCB2717,203151
#define AT91C_BASE_CAN_MB0 AT91C_BASE_CAN_MB02718,203229
#define AT91C_BASE_CAN_MB1 AT91C_BASE_CAN_MB12719,203314
#define AT91C_BASE_CAN_MB2 AT91C_BASE_CAN_MB22720,203399
#define AT91C_BASE_CAN_MB3 AT91C_BASE_CAN_MB32721,203484
#define AT91C_BASE_CAN_MB4 AT91C_BASE_CAN_MB42722,203569
#define AT91C_BASE_CAN_MB5 AT91C_BASE_CAN_MB52723,203654
#define AT91C_BASE_CAN_MB6 AT91C_BASE_CAN_MB62724,203739
#define AT91C_BASE_CAN_MB7 AT91C_BASE_CAN_MB72725,203824
#define AT91C_BASE_CAN AT91C_BASE_CAN2726,203909
#define AT91C_BASE_EMAC AT91C_BASE_EMAC2727,203987
#define AT91C_BASE_PDC_ADC AT91C_BASE_PDC_ADC2728,204067
#define AT91C_BASE_ADC AT91C_BASE_ADC2729,204149
#define AT91C_BASE_PDC_AES AT91C_BASE_PDC_AES2730,204227
#define AT91C_BASE_AES AT91C_BASE_AES2731,204309
#define AT91C_BASE_PDC_TDES AT91C_BASE_PDC_TDES2732,204387
#define AT91C_BASE_TDES AT91C_BASE_TDES2733,204470
#define AT91C_ISRAM	AT91C_ISRAM2738,204774
#define AT91C_ISRAM_SIZE	AT91C_ISRAM_SIZE2739,204848
#define AT91C_IFLASH	AT91C_IFLASH2740,204943
#define AT91C_IFLASH_SIZE	AT91C_IFLASH_SIZE2741,205017
#define AT91F_AIC_ConfigureIt(AT91F_AIC_ConfigureIt2743,205114

os/core/ARM7_AT91SAM7S/lib_AT91SAM7X256.c,0

os/core/ARM7_AT91SAM7S/lib_AT91SAM7X256.h,35677
#define lib_AT91SAM7X256_Hlib_AT91SAM7X256_H44,2941
#define AT91C_AIC_BRANCH_OPCODE AT91C_AIC_BRANCH_OPCODE49,3171
AT91F_AIC_ConfigureIt (AT91PS_AIC pAic,	// \arg pointer to the AIC registersAT91F_AIC_ConfigureIt56,3515
AT91F_AIC_EnableIt (AT91PS_AIC pAic,	// \arg pointer to the AIC registersAT91F_AIC_EnableIt85,4645
AT91F_AIC_DisableIt (AT91PS_AIC pAic,	// \arg pointer to the AIC registersAT91F_AIC_DisableIt97,5127
AT91F_AIC_ClearIt (AT91PS_AIC pAic,	// \arg pointer to the AIC registersAT91F_AIC_ClearIt112,5737
AT91F_AIC_AcknowledgeIt (AT91PS_AIC pAic)	// \arg pointer to the AIC registersAT91F_AIC_AcknowledgeIt124,6248
AT91F_AIC_SetExceptionVector (unsigned int *pVector,	// \arg pointer to the AIC registersAT91F_AIC_SetExceptionVector134,6627
AT91F_AIC_Trig (AT91PS_AIC pAic,	// \arg pointer to the AIC registersAT91F_AIC_Trig154,7311
AT91F_AIC_IsActive (AT91PS_AIC pAic,	// \arg pointer to the AIC registersAT91F_AIC_IsActive165,7717
AT91F_AIC_IsPending (AT91PS_AIC pAic,	// \arg pointer to the AIC registersAT91F_AIC_IsPending176,8141
AT91F_AIC_Open (AT91PS_AIC pAic,	// \arg pointer to the AIC registersAT91F_AIC_Open187,8587
AT91F_PDC_SetNextRx (AT91PS_PDC pPDC,	// \arg pointer to a PDC controllerAT91F_PDC_SetNextRx221,9995
AT91F_PDC_SetNextTx (AT91PS_PDC pPDC,	// \arg pointer to a PDC controllerAT91F_PDC_SetNextTx234,10537
AT91F_PDC_SetRx (AT91PS_PDC pPDC,	// \arg pointer to a PDC controllerAT91F_PDC_SetRx247,11075
AT91F_PDC_SetTx (AT91PS_PDC pPDC,	// \arg pointer to a PDC controllerAT91F_PDC_SetTx260,11594
AT91F_PDC_EnableTx (AT91PS_PDC pPDC)	// \arg pointer to a PDC controllerAT91F_PDC_EnableTx273,12101
AT91F_PDC_EnableRx (AT91PS_PDC pPDC)	// \arg pointer to a PDC controllerAT91F_PDC_EnableRx283,12445
AT91F_PDC_DisableTx (AT91PS_PDC pPDC)	// \arg pointer to a PDC controllerAT91F_PDC_DisableTx293,12792
AT91F_PDC_DisableRx (AT91PS_PDC pPDC)	// \arg pointer to a PDC controllerAT91F_PDC_DisableRx303,13140
AT91F_PDC_IsTxEmpty (		// \return return 1 if transfer is completeAT91F_PDC_IsTxEmpty313,13525
AT91F_PDC_IsNextTxEmpty (	// \return return 1 if transfer is completeAT91F_PDC_IsNextTxEmpty324,13974
AT91F_PDC_IsRxEmpty (		// \return return 1 if transfer is completeAT91F_PDC_IsRxEmpty335,14406
AT91F_PDC_IsNextRxEmpty (	// \return return 1 if transfer is completeAT91F_PDC_IsNextRxEmpty346,14855
AT91F_PDC_Open (AT91PS_PDC pPDC)	// \arg pointer to a PDC controllerAT91F_PDC_Open357,15303
AT91F_PDC_Close (AT91PS_PDC pPDC)	// \arg pointer to a PDC controllerAT91F_PDC_Close379,16087
AT91F_PDC_SendFrame (AT91PS_PDC pPDC,AT91F_PDC_SendFrame398,16777
AT91F_PDC_ReceiveFrame (AT91PS_PDC pPDC,AT91F_PDC_ReceiveFrame428,17671
AT91F_DBGU_InterruptEnable (AT91PS_DBGU pDbgu,	// \arg  pointer to a DBGU controllerAT91F_DBGU_InterruptEnable461,18721
AT91F_DBGU_InterruptDisable (AT91PS_DBGU pDbgu,	// \arg  pointer to a DBGU controllerAT91F_DBGU_InterruptDisable472,19148
AT91F_DBGU_GetInterruptMaskStatus (	// \return DBGU Interrupt Mask StatusAT91F_DBGU_GetInterruptMaskStatus483,19603
AT91F_DBGU_IsInterruptMasked (AT91PS_DBGU pDbgu,	// \arg  pointer to a DBGU controllerAT91F_DBGU_IsInterruptMasked494,20031
AT91F_PIO_CfgPeriph (AT91PS_PIO pPio,	// \arg pointer to a PIO controllerAT91F_PIO_CfgPeriph508,20696
AT91F_PIO_CfgOutput (AT91PS_PIO pPio,	// \arg pointer to a PIO controllerAT91F_PIO_CfgOutput522,21280
AT91F_PIO_CfgInput (AT91PS_PIO pPio,	// \arg pointer to a PIO controllerAT91F_PIO_CfgInput534,21756
AT91F_PIO_CfgOpendrain (AT91PS_PIO pPio,	// \arg pointer to a PIO controllerAT91F_PIO_CfgOpendrain547,22221
AT91F_PIO_CfgPullup (AT91PS_PIO pPio,	// \arg pointer to a PIO controllerAT91F_PIO_CfgPullup560,22724
AT91F_PIO_CfgDirectDrive (AT91PS_PIO pPio,	// \arg pointer to a PIO controllerAT91F_PIO_CfgDirectDrive573,23210
AT91F_PIO_CfgInputFilter (AT91PS_PIO pPio,	// \arg pointer to a PIO controllerAT91F_PIO_CfgInputFilter586,23723
AT91F_PIO_GetInput (		// \return PIO inputAT91F_PIO_GetInput599,24228
AT91F_PIO_IsInputSet (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_IsInputSet610,24614
AT91F_PIO_SetOutput (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_SetOutput622,25031
AT91F_PIO_ClearOutput (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_ClearOutput633,25426
AT91F_PIO_ForceOutput (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_ForceOutput644,25858
AT91F_PIO_Enable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_Enable655,26246
AT91F_PIO_Disable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_Disable666,26624
AT91F_PIO_GetStatus (		// \return PIO StatusAT91F_PIO_GetStatus677,27021
AT91F_PIO_IsSet (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_IsSet688,27387
AT91F_PIO_OutputEnable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_OutputEnable699,27795
AT91F_PIO_OutputDisable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_OutputDisable710,28196
AT91F_PIO_GetOutputStatus (	// \return PIO Output StatusAT91F_PIO_GetOutputStatus721,28617
AT91F_PIO_IsOutputSet (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_IsOutputSet732,29006
AT91F_PIO_InputFilterEnable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_InputFilterEnable743,29443
AT91F_PIO_InputFilterDisable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_InputFilterDisable754,29873
AT91F_PIO_GetInputFilterStatus (	// \return PIO Input Filter StatusAT91F_PIO_GetInputFilterStatus765,30322
AT91F_PIO_IsInputFilterSet (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_IsInputFilterSet776,30733
AT91F_PIO_GetOutputDataStatus (	// \return PIO Output Data Status AT91F_PIO_GetOutputDataStatus787,31195
AT91F_PIO_InterruptEnable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_InterruptEnable798,31593
AT91F_PIO_InterruptDisable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_InterruptDisable809,32010
AT91F_PIO_GetInterruptMaskStatus (	// \return PIO Interrupt Mask StatusAT91F_PIO_GetInterruptMaskStatus820,32455
AT91F_PIO_GetInterruptStatus (	// \return PIO Interrupt StatusAT91F_PIO_GetInterruptStatus831,32878
AT91F_PIO_IsInterruptMasked (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_IsInterruptMasked842,33290
AT91F_PIO_IsInterruptSet (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_IsInterruptSet853,33740
AT91F_PIO_MultiDriverEnable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_MultiDriverEnable864,34179
AT91F_PIO_MultiDriverDisable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_MultiDriverDisable875,34596
AT91F_PIO_GetMultiDriverStatus (	// \return PIO Multi Driver StatusAT91F_PIO_GetMultiDriverStatus886,35032
AT91F_PIO_IsMultiDriverSet (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_IsMultiDriverSet897,35442
AT91F_PIO_A_RegisterSelection (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_A_RegisterSelection908,35891
AT91F_PIO_B_RegisterSelection (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_B_RegisterSelection919,36320
AT91F_PIO_Get_AB_RegisterStatus (	// \return PIO AB Register StatusAT91F_PIO_Get_AB_RegisterStatus930,36762
AT91F_PIO_IsAB_RegisterSet (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_IsAB_RegisterSet941,37173
AT91F_PIO_OutputWriteEnable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_OutputWriteEnable952,37619
AT91F_PIO_OutputWriteDisable (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_OutputWriteDisable963,38049
AT91F_PIO_GetOutputWriteStatus (	// \return PIO Output Write StatusAT91F_PIO_GetOutputWriteStatus974,38498
AT91F_PIO_IsOutputWriteSet (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_IsOutputWriteSet985,38908
AT91F_PIO_GetCfgPullup (	// \return PIO Configuration Pullup AT91F_PIO_GetCfgPullup996,39364
AT91F_PIO_IsOutputDataStatusSet (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_IsOutputDataStatusSet1007,39781
AT91F_PIO_IsCfgPullupStatusSet (AT91PS_PIO pPio,	// \arg  pointer to a PIO controllerAT91F_PIO_IsCfgPullupStatusSet1018,40253
AT91F_PMC_CfgSysClkEnableReg (AT91PS_PMC pPMC,	// \arg pointer to PMC controllerAT91F_PMC_CfgSysClkEnableReg1032,40936
AT91F_PMC_CfgSysClkDisableReg (AT91PS_PMC pPMC,	// \arg pointer to PMC controllerAT91F_PMC_CfgSysClkDisableReg1044,41400
AT91F_PMC_GetSysClkStatusReg (AT91PS_PMC pPMC	// pointer to a CAN controllerAT91F_PMC_GetSysClkStatusReg1056,41869
AT91F_PMC_EnablePeriphClock (AT91PS_PMC pPMC,	// \arg pointer to PMC controllerAT91F_PMC_EnablePeriphClock1067,42228
AT91F_PMC_DisablePeriphClock (AT91PS_PMC pPMC,	// \arg pointer to PMC controllerAT91F_PMC_DisablePeriphClock1078,42662
AT91F_PMC_GetPeriphClock (AT91PS_PMC pPMC)	// \arg pointer to PMC controllerAT91F_PMC_GetPeriphClock1089,43105
AT91F_CKGR_CfgMainOscillatorReg (AT91PS_CKGR pCKGR,	// \arg pointer to CKGR controllerAT91F_CKGR_CfgMainOscillatorReg1099,43464
AT91F_CKGR_GetMainOscillatorReg (AT91PS_CKGR pCKGR)	// \arg pointer to CKGR controllerAT91F_CKGR_GetMainOscillatorReg1110,43866
AT91F_CKGR_EnableMainOscillator (AT91PS_CKGR pCKGR)	// \arg pointer to CKGR controllerAT91F_CKGR_EnableMainOscillator1120,44239
AT91F_CKGR_DisableMainOscillator (AT91PS_CKGR pCKGR)	// \arg pointer to CKGR controllerAT91F_CKGR_DisableMainOscillator1130,44628
AT91F_CKGR_CfgMainOscStartUpTime (AT91PS_CKGR pCKGR,	// \arg pointer to CKGR controllerAT91F_CKGR_CfgMainOscStartUpTime1140,45047
AT91F_CKGR_GetMainClockFreqReg (AT91PS_CKGR pCKGR)	// \arg pointer to CKGR controllerAT91F_CKGR_GetMainClockFreqReg1153,45650
AT91F_CKGR_GetMainClock (AT91PS_CKGR pCKGR,	// \arg pointer to CKGR controllerAT91F_CKGR_GetMainClock1163,46020
AT91F_PMC_CfgMCKReg (AT91PS_PMC pPMC,	// \arg pointer to PMC controllerAT91F_PMC_CfgMCKReg1174,46465
AT91F_PMC_GetMCKReg (AT91PS_PMC pPMC)	// \arg pointer to PMC controllerAT91F_PMC_GetMCKReg1185,46846
AT91F_PMC_GetMasterClock (AT91PS_PMC pPMC,	// \arg pointer to PMC controllerAT91F_PMC_GetMasterClock1195,47252
AT91F_PMC_EnablePCK (AT91PS_PMC pPMC,	// \arg pointer to PMC controllerAT91F_PMC_EnablePCK1225,48404
AT91F_PMC_DisablePCK (AT91PS_PMC pPMC,	// \arg pointer to PMC controllerAT91F_PMC_DisablePCK1238,48882
AT91F_PMC_EnableIt (AT91PS_PMC pPMC,	// pointer to a PMC controllerAT91F_PMC_EnableIt1249,49301
AT91F_PMC_DisableIt (AT91PS_PMC pPMC,	// pointer to a PMC controllerAT91F_PMC_DisableIt1261,49713
AT91F_PMC_GetStatus (		// \return PMC Interrupt StatusAT91F_PMC_GetStatus1273,50142
AT91F_PMC_GetInterruptMaskStatus (	// \return PMC Interrupt Mask StatusAT91F_PMC_GetInterruptMaskStatus1284,50551
AT91F_PMC_IsInterruptMasked (AT91PS_PMC pPMC,	// \arg  pointer to a PMC controllerAT91F_PMC_IsInterruptMasked1295,50971
AT91F_PMC_IsStatusSet (AT91PS_PMC pPMC,	// \arg  pointer to a PMC controllerAT91F_PMC_IsStatusSet1306,51424
AT91F_RSTSoftReset (AT91PS_RSTC pRSTC, unsigned int reset)AT91F_RSTSoftReset1318,52043
AT91F_RSTSetMode (AT91PS_RSTC pRSTC, unsigned int mode)AT91F_RSTSetMode1328,52377
AT91F_RSTGetMode (AT91PS_RSTC pRSTC)AT91F_RSTGetMode1338,52715
AT91F_RSTGetStatus (AT91PS_RSTC pRSTC)AT91F_RSTGetStatus1348,53025
AT91F_RSTIsSoftRstActive (AT91PS_RSTC pRSTC)AT91F_RSTIsSoftRstActive1358,53378
AT91F_RTTSetTimeBase (AT91PS_RTTC pRTTC, unsigned int ms)AT91F_RTTSetTimeBase1371,53984
AT91F_RTTSetPrescaler (AT91PS_RTTC pRTTC, unsigned int rtpres)AT91F_RTTSetPrescaler1385,54482
AT91F_RTTRestart (AT91PS_RTTC pRTTC)AT91F_RTTRestart1397,54914
AT91F_RTTSetAlarmINT (AT91PS_RTTC pRTTC)AT91F_RTTSetAlarmINT1408,55267
AT91F_RTTClearAlarmINT (AT91PS_RTTC pRTTC)AT91F_RTTClearAlarmINT1418,55626
AT91F_RTTSetRttIncINT (AT91PS_RTTC pRTTC)AT91F_RTTSetRttIncINT1428,55984
AT91F_RTTClearRttIncINT (AT91PS_RTTC pRTTC)AT91F_RTTClearRttIncINT1438,56346
AT91F_RTTSetAlarmValue (AT91PS_RTTC pRTTC, unsigned int alarm)AT91F_RTTSetAlarmValue1448,56704
AT91F_RTTGetAlarmValue (AT91PS_RTTC pRTTC)AT91F_RTTGetAlarmValue1458,57072
AT91F_RTTGetStatus (AT91PS_RTTC pRTTC)AT91F_RTTGetStatus1468,57416
AT91F_RTTReadValue (AT91PS_RTTC pRTTC)AT91F_RTTReadValue1478,57756
AT91F_PITInit (AT91PS_PITC pPITC,AT91F_PITInit1498,58442
AT91F_PITSetPIV (AT91PS_PITC pPITC, unsigned int piv)AT91F_PITSetPIV1510,58923
AT91F_PITEnableInt (AT91PS_PITC pPITC)AT91F_PITEnableInt1521,59319
AT91F_PITDisableInt (AT91PS_PITC pPITC)AT91F_PITDisableInt1531,59651
AT91F_PITGetMode (AT91PS_PITC pPITC)AT91F_PITGetMode1541,59982
AT91F_PITGetStatus (AT91PS_PITC pPITC)AT91F_PITGetStatus1551,60301
AT91F_PITGetPIIR (AT91PS_PITC pPITC)AT91F_PITGetPIIR1561,60651
AT91F_PITGetPIVR (AT91PS_PITC pPITC)AT91F_PITGetPIVR1571,61008
AT91F_WDTSetMode (AT91PS_WDTC pWDTC, unsigned int Mode)AT91F_WDTSetMode1584,61522
AT91F_WDTRestart (AT91PS_WDTC pWDTC)AT91F_WDTRestart1594,61840
AT91F_WDTSGettatus (AT91PS_WDTC pWDTC)AT91F_WDTSGettatus1604,62158
AT91F_WDTGetPeriod (unsigned int ms)AT91F_WDTGetPeriod1614,62504
AT91F_VREG_Enable_LowPowerMode (AT91PS_VREG pVREG)AT91F_VREG_Enable_LowPowerMode1629,63078
AT91F_VREG_Disable_LowPowerMode (AT91PS_VREG pVREG)AT91F_VREG_Disable_LowPowerMode1639,63429
#define AT91C_MC_CORRECT_KEY AT91C_MC_CORRECT_KEY1646,63725
AT91F_MC_Remap (void)		//  AT91F_MC_Remap1653,64034
AT91F_MC_EFC_CfgModeReg (AT91PS_MC pMC,	// pointer to a MC controllerAT91F_MC_EFC_CfgModeReg1665,64416
AT91F_MC_EFC_GetModeReg (AT91PS_MC pMC)	// pointer to a MC controllerAT91F_MC_EFC_GetModeReg1677,64841
AT91F_MC_EFC_ComputeFMCN (int master_clock)	// master clock in HzAT91F_MC_EFC_ComputeFMCN1687,65195
AT91F_MC_EFC_PerformCmd (AT91PS_MC pMC,	// pointer to a MC controllerAT91F_MC_EFC_PerformCmd1697,65545
AT91F_MC_EFC_GetStatus (AT91PS_MC pMC)	// pointer to a MC controllerAT91F_MC_EFC_GetStatus1708,65929
AT91F_MC_EFC_IsInterruptMasked (AT91PS_MC pMC,	// \arg  pointer to a MC controllerAT91F_MC_EFC_IsInterruptMasked1718,66296
AT91F_MC_EFC_IsInterruptSet (AT91PS_MC pMC,	// \arg  pointer to a MC controllerAT91F_MC_EFC_IsInterruptSet1729,66747
AT91F_SPI_Open (const unsigned int null)	// \argAT91F_SPI_Open1743,67371
AT91F_SPI_CfgCs (AT91PS_SPI pSPI,	// pointer to a SPI controllerAT91F_SPI_CfgCs1754,67721
AT91F_SPI_EnableIt (AT91PS_SPI pSPI,	// pointer to a SPI controllerAT91F_SPI_EnableIt1767,68164
AT91F_SPI_DisableIt (AT91PS_SPI pSPI,	// pointer to a SPI controllerAT91F_SPI_DisableIt1779,68576
AT91F_SPI_Reset (AT91PS_SPI pSPI	// pointer to a SPI controllerAT91F_SPI_Reset1791,68990
AT91F_SPI_Enable (AT91PS_SPI pSPI	// pointer to a SPI controllerAT91F_SPI_Enable1803,69367
AT91F_SPI_Disable (AT91PS_SPI pSPI	// pointer to a SPI controllerAT91F_SPI_Disable1815,69747
AT91F_SPI_CfgMode (AT91PS_SPI pSPI,	// pointer to a SPI controllerAT91F_SPI_CfgMode1827,70128
AT91F_SPI_CfgPCS (AT91PS_SPI pSPI,	// pointer to a SPI controllerAT91F_SPI_CfgPCS1839,70575
AT91F_SPI_ReceiveFrame (AT91PS_SPI pSPI,AT91F_SPI_ReceiveFrame1852,71164
AT91F_SPI_SendFrame (AT91PS_SPI pSPI,AT91F_SPI_SendFrame1867,71782
AT91F_SPI_Close (AT91PS_SPI pSPI)	// \arg pointer to a SPI controllerAT91F_SPI_Close1881,72311
AT91F_SPI_PutChar (AT91PS_SPI pSPI,AT91F_SPI_PutChar1907,73096
AT91F_SPI_GetChar (const AT91PS_SPI pSPI)AT91F_SPI_GetChar1920,73639
AT91F_SPI_GetInterruptMaskStatus (	// \return SPI Interrupt Mask StatusAT91F_SPI_GetInterruptMaskStatus1930,73993
AT91F_SPI_IsInterruptMasked (AT91PS_SPI pSpi,	// \arg  pointer to a SPI controllerAT91F_SPI_IsInterruptMasked1941,74411
#define AT91C_US_ASYNC_MODE AT91C_US_ASYNC_MODE1954,75020
#define AT91C_US_ASYNC_SCK_MODE AT91C_US_ASYNC_SCK_MODE1961,75339
#define AT91C_US_SYNC_MODE AT91C_US_SYNC_MODE1968,75666
#define AT91C_US_SCK_USED AT91C_US_SCK_USED1976,75970
#define AT91C_US_ISO_READER_MODE AT91C_US_ISO_READER_MODE1979,76086
#define AT91C_US_ASYNC_IRDA_MODE AT91C_US_ASYNC_IRDA_MODE1988,76444
AT91F_US_Baudrate (const unsigned int main_clock,	// \arg peripheral clockAT91F_US_Baudrate1999,77003
AT91F_US_SetBaudrate (AT91PS_USART pUSART,	// \arg pointer to a USART controllerAT91F_US_SetBaudrate2015,77589
AT91F_US_SetTimeguard (AT91PS_USART pUSART,	// \arg pointer to a USART controllerAT91F_US_SetTimeguard2028,78122
AT91F_US_EnableIt (AT91PS_USART pUSART,	// \arg pointer to a USART controllerAT91F_US_EnableIt2040,78562
AT91F_US_DisableIt (AT91PS_USART pUSART,	// \arg pointer to a USART controllerAT91F_US_DisableIt2052,78983
AT91F_US_Configure (AT91PS_USART pUSART,	// \arg pointer to a USART controllerAT91F_US_Configure2064,79406
AT91F_US_EnableRx (AT91PS_USART pUSART)	// \arg pointer to a USART controllerAT91F_US_EnableRx2096,80498
AT91F_US_EnableTx (AT91PS_USART pUSART)	// \arg pointer to a USART controllerAT91F_US_EnableTx2107,80876
AT91F_US_ResetRx (AT91PS_USART pUSART)	// \arg pointer to a USART controllerAT91F_US_ResetRx2118,81263
AT91F_US_ResetTx (AT91PS_USART pUSART)	// \arg pointer to a USART controllerAT91F_US_ResetTx2131,81706
AT91F_US_DisableRx (AT91PS_USART pUSART)	// \arg pointer to a USART controllerAT91F_US_DisableRx2144,82136
AT91F_US_DisableTx (AT91PS_USART pUSART)	// \arg pointer to a USART controllerAT91F_US_DisableTx2155,82512
AT91F_US_Close (AT91PS_USART pUSART)	// \arg pointer to a USART controllerAT91F_US_Close2166,82935
AT91F_US_TxReady (AT91PS_USART pUSART)	// \arg pointer to a USART controllerAT91F_US_TxReady2193,83779
AT91F_US_RxReady (AT91PS_USART pUSART)	// \arg pointer to a USART controllerAT91F_US_RxReady2203,84172
AT91F_US_Error (AT91PS_USART pUSART)	// \arg pointer to a USART controllerAT91F_US_Error2213,84539
AT91F_US_PutChar (AT91PS_USART pUSART, int character)AT91F_US_PutChar2225,85023
AT91F_US_GetChar (const AT91PS_USART pUSART)AT91F_US_GetChar2235,85397
AT91F_US_SendFrame (AT91PS_USART pUSART,AT91F_US_SendFrame2245,85839
AT91F_US_ReceiveFrame (AT91PS_USART pUSART,AT91F_US_ReceiveFrame2259,86464
AT91F_US_SetIrdaFilter (AT91PS_USART pUSART, unsigned char value)AT91F_US_SetIrdaFilter2274,87005
#define AT91C_I2S_ASY_MASTER_TX_SETTING(AT91C_I2S_ASY_MASTER_TX_SETTING2287,87532
#define AT91C_I2S_ASY_TX_FRAME_SETTING(AT91C_I2S_ASY_TX_FRAME_SETTING2300,88217
AT91F_SSC_SetBaudrate (AT91PS_SSC pSSC,	// \arg pointer to a SSC controllerAT91F_SSC_SetBaudrate2313,88853
AT91F_SSC_Configure (AT91PS_SSC pSSC,	// \arg pointer to a SSC controllerAT91F_SSC_Configure2338,89598
AT91F_SSC_EnableRx (AT91PS_SSC pSSC)	// \arg pointer to a SSC controllerAT91F_SSC_EnableRx2378,90968
AT91F_SSC_DisableRx (AT91PS_SSC pSSC)	// \arg pointer to a SSC controllerAT91F_SSC_DisableRx2389,91341
AT91F_SSC_EnableTx (AT91PS_SSC pSSC)	// \arg pointer to a SSC controllerAT91F_SSC_EnableTx2400,91713
AT91F_SSC_DisableTx (AT91PS_SSC pSSC)	// \arg pointer to a SSC controllerAT91F_SSC_DisableTx2411,92088
AT91F_SSC_EnableIt (AT91PS_SSC pSSC,	// \arg pointer to a SSC controllerAT91F_SSC_EnableIt2422,92457
AT91F_SSC_DisableIt (AT91PS_SSC pSSC,	// \arg pointer to a SSC controllerAT91F_SSC_DisableIt2434,92872
AT91F_SSC_ReceiveFrame (AT91PS_SSC pSSC,AT91F_SSC_ReceiveFrame2446,93417
AT91F_SSC_SendFrame (AT91PS_SSC pSSC,AT91F_SSC_SendFrame2461,94033
AT91F_SSC_GetInterruptMaskStatus (	// \return SSC Interrupt Mask StatusAT91F_SSC_GetInterruptMaskStatus2475,94569
AT91F_SSC_IsInterruptMasked (AT91PS_SSC pSsc,	// \arg  pointer to a SSC controllerAT91F_SSC_IsInterruptMasked2486,94987
AT91F_TWI_EnableIt (AT91PS_TWI pTWI,	// \arg pointer to a TWI controllerAT91F_TWI_EnableIt2500,95619
AT91F_TWI_DisableIt (AT91PS_TWI pTWI,	// \arg pointer to a TWI controllerAT91F_TWI_DisableIt2512,96034
AT91F_TWI_Configure (AT91PS_TWI pTWI)	// \arg pointer to a TWI controllerAT91F_TWI_Configure2524,96466
AT91F_TWI_GetInterruptMaskStatus (	// \return TWI Interrupt Mask StatusAT91F_TWI_GetInterruptMaskStatus2542,96992
AT91F_TWI_IsInterruptMasked (AT91PS_TWI pTwi,	// \arg  pointer to a TWI controllerAT91F_TWI_IsInterruptMasked2553,97410
AT91F_PWMC_GetStatus (		// \return PWM Interrupt StatusAT91F_PWMC_GetStatus2567,98066
AT91F_PWMC_InterruptEnable (AT91PS_PWMC pPwm,	// \arg  pointer to a PWM controllerAT91F_PWMC_InterruptEnable2578,98452
AT91F_PWMC_InterruptDisable (AT91PS_PWMC pPwm,	// \arg  pointer to a PWM controllerAT91F_PWMC_InterruptDisable2589,98873
AT91F_PWMC_GetInterruptMaskStatus (	// \return PWM Interrupt Mask StatusAT91F_PWMC_GetInterruptMaskStatus2600,99322
AT91F_PWMC_IsInterruptMasked (AT91PS_PWMC pPWM,	// \arg  pointer to a PWM controllerAT91F_PWMC_IsInterruptMasked2611,99752
AT91F_PWMC_IsStatusSet (AT91PS_PWMC pPWM,	// \arg  pointer to a PWM controllerAT91F_PWMC_IsStatusSet2622,100212
AT91F_PWMC_CfgChannel (AT91PS_PWMC pPWM,	// \arg  pointer to a PWM controllerAT91F_PWMC_CfgChannel2633,100638
AT91F_PWMC_StartChannel (AT91PS_PWMC pPWM,	// \arg  pointer to a PWM controllerAT91F_PWMC_StartChannel2649,101295
AT91F_PWMC_StopChannel (AT91PS_PWMC pPWM,	// \arg  pointer to a PWM controllerAT91F_PWMC_StopChannel2660,101698
AT91F_PWMC_UpdateChannel (AT91PS_PWMC pPWM,	// \arg  pointer to a PWM controllerAT91F_PWMC_UpdateChannel2671,102113
AT91F_UDP_EnableIt (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_EnableIt2686,102792
AT91F_UDP_DisableIt (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_DisableIt2698,103207
AT91F_UDP_SetAddress (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_SetAddress2710,103638
AT91F_UDP_EnableEp (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_EnableEp2721,104051
AT91F_UDP_DisableEp (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_DisableEp2732,104461
AT91F_UDP_SetState (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_SetState2743,104878
AT91F_UDP_GetState (		// \return the UDP device stateAT91F_UDP_GetState2755,105345
AT91F_UDP_ResetEp (		// \return the UDP device stateAT91F_UDP_ResetEp2766,105767
AT91F_UDP_EpStall (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_EpStall2779,106231
AT91F_UDP_EpWrite (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_EpWrite2790,106649
AT91F_UDP_EpRead (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_EpRead2802,107126
AT91F_UDP_EpEndOfWr (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_EpEndOfWr2813,107559
AT91F_UDP_EpClear (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_EpClear2824,107996
AT91F_UDP_EpSet (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_EpSet2836,108465
AT91F_UDP_EpStatus (AT91PS_UDP pUDP,	// \arg pointer to a UDP controllerAT91F_UDP_EpStatus2848,108931
AT91F_UDP_GetInterruptMaskStatus (	// \return UDP Interrupt Mask StatusAT91F_UDP_GetInterruptMaskStatus2859,109367
AT91F_UDP_IsInterruptMasked (AT91PS_UDP pUdp,	// \arg  pointer to a UDP controllerAT91F_UDP_IsInterruptMasked2870,109785
AT91F_TC_InterruptEnable (AT91PS_TC pTc,	// \arg  pointer to a TC controllerAT91F_TC_InterruptEnable2884,110428
AT91F_TC_InterruptDisable (AT91PS_TC pTc,	// \arg  pointer to a TC controllerAT91F_TC_InterruptDisable2895,110835
AT91F_TC_GetInterruptMaskStatus (	// \return TC Interrupt Mask StatusAT91F_TC_GetInterruptMaskStatus2906,111270
AT91F_TC_IsInterruptMasked (AT91PS_TC pTc,	// \arg  pointer to a TC controllerAT91F_TC_IsInterruptMasked2917,111678
#define	STANDARD_FORMAT STANDARD_FORMAT2926,112074
#define	EXTENDED_FORMAT EXTENDED_FORMAT2927,112100
AT91F_InitMailboxRegisters (AT91PS_CAN_MB CAN_Mailbox,AT91F_InitMailboxRegisters2934,112388
AT91F_EnableCAN (AT91PS_CAN pCAN)	// pointer to a CAN controllerAT91F_EnableCAN2955,113085
AT91F_DisableCAN (AT91PS_CAN pCAN)	// pointer to a CAN controllerAT91F_DisableCAN2968,113559
AT91F_CAN_EnableIt (AT91PS_CAN pCAN,	// pointer to a CAN controllerAT91F_CAN_EnableIt2978,113902
AT91F_CAN_DisableIt (AT91PS_CAN pCAN,	// pointer to a CAN controllerAT91F_CAN_DisableIt2990,114314
AT91F_CAN_GetStatus (		// \return CAN Interrupt StatusAT91F_CAN_GetStatus3002,114743
AT91F_CAN_GetInterruptMaskStatus (	// \return CAN Interrupt Mask StatusAT91F_CAN_GetInterruptMaskStatus3013,115152
AT91F_CAN_IsInterruptMasked (AT91PS_CAN pCAN,	// \arg  pointer to a CAN controllerAT91F_CAN_IsInterruptMasked3024,115573
AT91F_CAN_IsStatusSet (AT91PS_CAN pCAN,	// \arg  pointer to a CAN controllerAT91F_CAN_IsStatusSet3035,116029
AT91F_CAN_CfgModeReg (AT91PS_CAN pCAN,	// pointer to a CAN controllerAT91F_CAN_CfgModeReg3046,116479
AT91F_CAN_GetModeReg (AT91PS_CAN pCAN	// pointer to a CAN controllerAT91F_CAN_GetModeReg3058,116931
AT91F_CAN_CfgBaudrateReg (AT91PS_CAN pCAN,	// pointer to a CAN controllerAT91F_CAN_CfgBaudrateReg3069,117314
AT91F_CAN_GetBaudrate (AT91PS_CAN pCAN	// pointer to a CAN controllerAT91F_CAN_GetBaudrate3081,117777
AT91F_CAN_GetInternalCounter (AT91PS_CAN pCAN	// pointer to a CAN controllerAT91F_CAN_GetInternalCounter3092,118144
AT91F_CAN_GetTimestamp (AT91PS_CAN pCAN	// pointer to a CAN controllerAT91F_CAN_GetTimestamp3103,118517
AT91F_CAN_GetErrorCounter (AT91PS_CAN pCAN	// pointer to a CAN controllerAT91F_CAN_GetErrorCounter3114,118895
AT91F_CAN_InitTransferRequest (AT91PS_CAN pCAN,	// pointer to a CAN controllerAT91F_CAN_InitTransferRequest3125,119282
AT91F_CAN_InitAbortRequest (AT91PS_CAN pCAN,	// pointer to a CAN controllerAT91F_CAN_InitAbortRequest3136,119692
AT91F_CAN_CfgMessageModeReg (AT91PS_CAN_MB CAN_Mailbox,	// pointer to a CAN MailboxAT91F_CAN_CfgMessageModeReg3147,120091
AT91F_CAN_GetMessageModeReg (AT91PS_CAN_MB CAN_Mailbox)	// pointer to a CAN MailboxAT91F_CAN_GetMessageModeReg3158,120506
AT91F_CAN_CfgMessageIDReg (AT91PS_CAN_MB CAN_Mailbox,	// pointer to a CAN MailboxAT91F_CAN_CfgMessageIDReg3169,120958
AT91F_CAN_GetMessageIDReg (AT91PS_CAN_MB CAN_Mailbox)	// pointer to a CAN MailboxAT91F_CAN_GetMessageIDReg3183,121533
AT91F_CAN_CfgMessageAcceptanceMaskReg (AT91PS_CAN_MB CAN_Mailbox,	// pointer to a CAN MailboxAT91F_CAN_CfgMessageAcceptanceMaskReg3193,121933
AT91F_CAN_GetMessageAcceptanceMaskReg (AT91PS_CAN_MB CAN_Mailbox)	// pointer to a CAN MailboxAT91F_CAN_GetMessageAcceptanceMaskReg3204,122382
AT91F_CAN_GetFamilyID (AT91PS_CAN_MB CAN_Mailbox)	// pointer to a CAN MailboxAT91F_CAN_GetFamilyID3214,122772
AT91F_CAN_CfgMessageCtrlReg (AT91PS_CAN_MB CAN_Mailbox,	// pointer to a CAN MailboxAT91F_CAN_CfgMessageCtrlReg3224,123174
AT91F_CAN_GetMessageStatus (AT91PS_CAN_MB CAN_Mailbox)	// pointer to a CAN MailboxAT91F_CAN_GetMessageStatus3235,123605
AT91F_CAN_CfgMessageDataLow (AT91PS_CAN_MB CAN_Mailbox,	// pointer to a CAN MailboxAT91F_CAN_CfgMessageDataLow3245,123974
AT91F_CAN_GetMessageDataLow (AT91PS_CAN_MB CAN_Mailbox)	// pointer to a CAN MailboxAT91F_CAN_GetMessageDataLow3256,124378
AT91F_CAN_CfgMessageDataHigh (AT91PS_CAN_MB CAN_Mailbox,	// pointer to a CAN MailboxAT91F_CAN_CfgMessageDataHigh3266,124750
AT91F_CAN_GetMessageDataHigh (AT91PS_CAN_MB CAN_Mailbox)	// pointer to a CAN MailboxAT91F_CAN_GetMessageDataHigh3277,125158
AT91F_CAN_Open (const unsigned int null)	// \argAT91F_CAN_Open3287,125517
AT91F_ADC_EnableIt (AT91PS_ADC pADC,	// pointer to a ADC controllerAT91F_ADC_EnableIt3301,126058
AT91F_ADC_DisableIt (AT91PS_ADC pADC,	// pointer to a ADC controllerAT91F_ADC_DisableIt3313,126470
AT91F_ADC_GetStatus (		// \return ADC Interrupt StatusAT91F_ADC_GetStatus3325,126899
AT91F_ADC_GetInterruptMaskStatus (	// \return ADC Interrupt Mask StatusAT91F_ADC_GetInterruptMaskStatus3336,127308
AT91F_ADC_IsInterruptMasked (AT91PS_ADC pADC,	// \arg  pointer to a ADC controllerAT91F_ADC_IsInterruptMasked3347,127729
AT91F_ADC_IsStatusSet (AT91PS_ADC pADC,	// \arg  pointer to a ADC controllerAT91F_ADC_IsStatusSet3358,128182
AT91F_ADC_CfgModeReg (AT91PS_ADC pADC,	// pointer to a ADC controllerAT91F_ADC_CfgModeReg3369,128632
AT91F_ADC_GetModeReg (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_GetModeReg3381,129084
AT91F_ADC_CfgTimings (AT91PS_ADC pADC,	// pointer to a ADC controllerAT91F_ADC_CfgTimings3392,129466
AT91F_ADC_EnableChannel (AT91PS_ADC pADC,	// pointer to a ADC controllerAT91F_ADC_EnableChannel3417,130362
AT91F_ADC_DisableChannel (AT91PS_ADC pADC,	// pointer to a ADC controllerAT91F_ADC_DisableChannel3429,130798
AT91F_ADC_GetChannelStatus (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_GetChannelStatus3441,131246
AT91F_ADC_StartConversion (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_StartConversion3452,131630
AT91F_ADC_SoftReset (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_SoftReset3463,131978
AT91F_ADC_GetLastConvertedData (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_GetLastConvertedData3474,132355
AT91F_ADC_GetConvertedDataCH0 (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_GetConvertedDataCH03485,132738
AT91F_ADC_GetConvertedDataCH1 (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_GetConvertedDataCH13496,133120
AT91F_ADC_GetConvertedDataCH2 (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_GetConvertedDataCH23507,133502
AT91F_ADC_GetConvertedDataCH3 (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_GetConvertedDataCH33518,133884
AT91F_ADC_GetConvertedDataCH4 (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_GetConvertedDataCH43529,134266
AT91F_ADC_GetConvertedDataCH5 (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_GetConvertedDataCH53540,134648
AT91F_ADC_GetConvertedDataCH6 (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_GetConvertedDataCH63551,135030
AT91F_ADC_GetConvertedDataCH7 (AT91PS_ADC pADC	// pointer to a ADC controllerAT91F_ADC_GetConvertedDataCH73562,135412
AT91F_AES_EnableIt (AT91PS_AES pAES,	// pointer to a AES controllerAT91F_AES_EnableIt3576,135962
AT91F_AES_DisableIt (AT91PS_AES pAES,	// pointer to a AES controllerAT91F_AES_DisableIt3588,136374
AT91F_AES_GetStatus (		// \return AES Interrupt StatusAT91F_AES_GetStatus3600,136803
AT91F_AES_GetInterruptMaskStatus (	// \return AES Interrupt Mask StatusAT91F_AES_GetInterruptMaskStatus3611,137213
AT91F_AES_IsInterruptMasked (AT91PS_AES pAES,	// \arg  pointer to a AES controllerAT91F_AES_IsInterruptMasked3622,137634
AT91F_AES_IsStatusSet (AT91PS_AES pAES,	// \arg  pointer to a AES controllerAT91F_AES_IsStatusSet3633,138087
AT91F_AES_CfgModeReg (AT91PS_AES pAES,	// pointer to a AES controllerAT91F_AES_CfgModeReg3644,138537
AT91F_AES_GetModeReg (AT91PS_AES pAES	// pointer to a AES controllerAT91F_AES_GetModeReg3656,138989
AT91F_AES_StartProcessing (AT91PS_AES pAES	// pointer to a AES controllerAT91F_AES_StartProcessing3667,139343
AT91F_AES_SoftReset (AT91PS_AES pAES	// pointer to a AES controllerAT91F_AES_SoftReset3678,139686
AT91F_AES_LoadNewSeed (AT91PS_AES pAES	// pointer to a AES controllerAT91F_AES_LoadNewSeed3689,140060
AT91F_AES_SetCryptoKey (AT91PS_AES pAES,	// pointer to a AES controllerAT91F_AES_SetCryptoKey3700,140419
AT91F_AES_InputData (AT91PS_AES pAES,	// pointer to a AES controllerAT91F_AES_InputData3711,140812
AT91F_AES_GetOutputData (AT91PS_AES pAES,	// pointer to a AES controllerAT91F_AES_GetOutputData3722,141218
AT91F_AES_SetInitializationVector (AT91PS_AES pAES,	// pointer to a AES controllerAT91F_AES_SetInitializationVector3733,141627
AT91F_TDES_EnableIt (AT91PS_TDES pTDES,	// pointer to a TDES controllerAT91F_TDES_EnableIt3748,142254
AT91F_TDES_DisableIt (AT91PS_TDES pTDES,	// pointer to a TDES controllerAT91F_TDES_DisableIt3760,142675
AT91F_TDES_GetStatus (		// \return TDES Interrupt StatusAT91F_TDES_GetStatus3772,143113
AT91F_TDES_GetInterruptMaskStatus (	// \return TDES Interrupt Mask StatusAT91F_TDES_GetInterruptMaskStatus3783,143533
AT91F_TDES_IsInterruptMasked (AT91PS_TDES pTDES,	// \arg  pointer to a TDES controllerAT91F_TDES_IsInterruptMasked3794,143964
AT91F_TDES_IsStatusSet (AT91PS_TDES pTDES,	// \arg  pointer to a TDES controllerAT91F_TDES_IsStatusSet3805,144426
AT91F_TDES_CfgModeReg (AT91PS_TDES pTDES,	// pointer to a TDES controllerAT91F_TDES_CfgModeReg3816,144878
AT91F_TDES_GetModeReg (AT91PS_TDES pTDES	// pointer to a TDES controllerAT91F_TDES_GetModeReg3828,145339
AT91F_TDES_StartProcessing (AT91PS_TDES pTDES	// pointer to a TDES controllerAT91F_TDES_StartProcessing3839,145700
AT91F_TDES_SoftReset (AT91PS_TDES pTDES	// pointer to a TDES controllerAT91F_TDES_SoftReset3850,146052
AT91F_TDES_SetCryptoKey1 (AT91PS_TDES pTDES,	// pointer to a TDES controllerAT91F_TDES_SetCryptoKey13861,146422
AT91F_TDES_SetCryptoKey2 (AT91PS_TDES pTDES,	// pointer to a TDES controllerAT91F_TDES_SetCryptoKey23872,146844
AT91F_TDES_SetCryptoKey3 (AT91PS_TDES pTDES,	// pointer to a TDES controllerAT91F_TDES_SetCryptoKey33883,147266
AT91F_TDES_InputData (AT91PS_TDES pTDES,	// pointer to a TDES controllerAT91F_TDES_InputData3894,147670
AT91F_TDES_GetOutputData (AT91PS_TDES pTDES,	// pointer to a TDES controllerAT91F_TDES_GetOutputData3905,148084
AT91F_TDES_SetInitializationVector (AT91PS_TDES pTDES,	// pointer to a TDES controllerAT91F_TDES_SetInitializationVector3916,148488
AT91F_DBGU_CfgPMC (void)AT91F_DBGU_CfgPMC3928,148937
AT91F_DBGU_CfgPIO (void)AT91F_DBGU_CfgPIO3939,149354
AT91F_PMC_CfgPMC (void)AT91F_PMC_CfgPMC3952,149877
AT91F_PMC_CfgPIO (void)AT91F_PMC_CfgPIO3963,150291
AT91F_VREG_CfgPMC (void)AT91F_VREG_CfgPMC3980,151225
AT91F_RSTC_CfgPMC (void)AT91F_RSTC_CfgPMC3991,151635
AT91F_SSC_CfgPMC (void)AT91F_SSC_CfgPMC4002,152043
AT91F_SSC_CfgPIO (void)AT91F_SSC_CfgPIO4013,152457
AT91F_WDTC_CfgPMC (void)AT91F_WDTC_CfgPMC4026,153109
AT91F_US1_CfgPMC (void)AT91F_US1_CfgPMC4037,153517
AT91F_US1_CfgPIO (void)AT91F_US1_CfgPIO4048,153931
AT91F_US0_CfgPMC (void)AT91F_US0_CfgPMC4065,154862
AT91F_US0_CfgPIO (void)AT91F_US0_CfgPIO4076,155276
AT91F_SPI1_CfgPMC (void)AT91F_SPI1_CfgPMC4089,155900
AT91F_SPI1_CfgPIO (void)AT91F_SPI1_CfgPIO4100,156318
AT91F_SPI0_CfgPMC (void)AT91F_SPI0_CfgPMC4117,157418
AT91F_SPI0_CfgPIO (void)AT91F_SPI0_CfgPIO4128,157836
AT91F_PITC_CfgPMC (void)AT91F_PITC_CfgPMC4145,158932
AT91F_AIC_CfgPMC (void)AT91F_AIC_CfgPMC4156,159340
AT91F_AIC_CfgPIO (void)AT91F_AIC_CfgPIO4169,159850
AT91F_AES_CfgPMC (void)AT91F_AES_CfgPMC4182,160402
AT91F_TWI_CfgPMC (void)AT91F_TWI_CfgPMC4193,160809
AT91F_TWI_CfgPIO (void)AT91F_TWI_CfgPIO4204,161223
AT91F_ADC_CfgPMC (void)AT91F_ADC_CfgPMC4217,161744
AT91F_ADC_CfgPIO (void)AT91F_ADC_CfgPIO4228,162158
AT91F_PWMC_CH3_CfgPIO (void)AT91F_PWMC_CH3_CfgPIO4241,162663
AT91F_PWMC_CH2_CfgPIO (void)AT91F_PWMC_CH2_CfgPIO4254,163203
AT91F_PWMC_CH1_CfgPIO (void)AT91F_PWMC_CH1_CfgPIO4267,163743
AT91F_PWMC_CH0_CfgPIO (void)AT91F_PWMC_CH0_CfgPIO4280,164283
AT91F_RTTC_CfgPMC (void)AT91F_RTTC_CfgPMC4293,164808
AT91F_UDP_CfgPMC (void)AT91F_UDP_CfgPMC4304,165216
AT91F_TDES_CfgPMC (void)AT91F_TDES_CfgPMC4315,165625
AT91F_EMAC_CfgPMC (void)AT91F_EMAC_CfgPMC4326,166036
AT91F_EMAC_CfgPIO (void)AT91F_EMAC_CfgPIO4337,166454
AT91F_TC0_CfgPMC (void)AT91F_TC0_CfgPMC4361,167688
AT91F_TC0_CfgPIO (void)AT91F_TC0_CfgPIO4372,168102
AT91F_TC1_CfgPMC (void)AT91F_TC1_CfgPMC4385,168658
AT91F_TC1_CfgPIO (void)AT91F_TC1_CfgPIO4396,169072
AT91F_TC2_CfgPMC (void)AT91F_TC2_CfgPMC4409,169628
AT91F_TC2_CfgPIO (void)AT91F_TC2_CfgPIO4420,170042
AT91F_MC_CfgPMC (void)AT91F_MC_CfgPMC4437,170770
AT91F_PIOA_CfgPMC (void)AT91F_PIOA_CfgPMC4448,171178
AT91F_PIOB_CfgPMC (void)AT91F_PIOB_CfgPMC4459,171589
AT91F_CAN_CfgPMC (void)AT91F_CAN_CfgPMC4470,171998
AT91F_CAN_CfgPIO (void)AT91F_CAN_CfgPIO4481,172412
AT91F_PWMC_CfgPMC (void)AT91F_PWMC_CfgPMC4494,172938

os/core/ARM7_AT91SAM7S/ioat91sam7x256.h,133110
#define AT91SAM7X256_HAT91SAM7X256_H47,3190
typedef volatile unsigned int AT91_REG;	// Hardware register definitionAT91_REG49,3214
typedef struct _AT91S_SYS_AT91S_SYS54,3513
  AT91_REG AIC_SMR[32];		// Source Mode RegisterAIC_SMR56,3541
  AT91_REG AIC_SVR[32];		// Source Vector RegisterAIC_SVR57,3590
  AT91_REG AIC_IVR;		// IRQ Vector RegisterAIC_IVR58,3641
  AT91_REG AIC_FVR;		// FIQ Vector RegisterAIC_FVR59,3685
  AT91_REG AIC_ISR;		// Interrupt Status RegisterAIC_ISR60,3729
  AT91_REG AIC_IPR;		// Interrupt Pending RegisterAIC_IPR61,3779
  AT91_REG AIC_IMR;		// Interrupt Mask RegisterAIC_IMR62,3830
  AT91_REG AIC_CISR;		// Core Interrupt Status RegisterAIC_CISR63,3878
  AT91_REG Reserved0[2];	// Reserved064,3934
  AT91_REG AIC_IECR;		// Interrupt Enable Command RegisterAIC_IECR65,3963
  AT91_REG AIC_IDCR;		// Interrupt Disable Command RegisterAIC_IDCR66,4022
  AT91_REG AIC_ICCR;		// Interrupt Clear Command RegisterAIC_ICCR67,4082
  AT91_REG AIC_ISCR;		// Interrupt Set Command RegisterAIC_ISCR68,4140
  AT91_REG AIC_EOICR;		// End of Interrupt Command RegisterAIC_EOICR69,4196
  AT91_REG AIC_SPU;		// Spurious Vector RegisterAIC_SPU70,4256
  AT91_REG AIC_DCR;		// Debug Control Register (Protect)AIC_DCR71,4305
  AT91_REG Reserved1[1];	// Reserved172,4362
  AT91_REG AIC_FFER;		// Fast Forcing Enable RegisterAIC_FFER73,4391
  AT91_REG AIC_FFDR;		// Fast Forcing Disable RegisterAIC_FFDR74,4445
  AT91_REG AIC_FFSR;		// Fast Forcing Status RegisterAIC_FFSR75,4500
  AT91_REG Reserved2[45];	// Reserved276,4554
  AT91_REG DBGU_CR;		// Control RegisterDBGU_CR77,4584
  AT91_REG DBGU_MR;		// Mode RegisterDBGU_MR78,4625
  AT91_REG DBGU_IER;		// Interrupt Enable RegisterDBGU_IER79,4663
  AT91_REG DBGU_IDR;		// Interrupt Disable RegisterDBGU_IDR80,4714
  AT91_REG DBGU_IMR;		// Interrupt Mask RegisterDBGU_IMR81,4766
  AT91_REG DBGU_CSR;		// Channel Status RegisterDBGU_CSR82,4815
  AT91_REG DBGU_RHR;		// Receiver Holding RegisterDBGU_RHR83,4864
  AT91_REG DBGU_THR;		// Transmitter Holding RegisterDBGU_THR84,4915
  AT91_REG DBGU_BRGR;		// Baud Rate Generator RegisterDBGU_BRGR85,4969
  AT91_REG Reserved3[7];	// Reserved386,5024
  AT91_REG DBGU_CIDR;		// Chip ID RegisterDBGU_CIDR87,5053
  AT91_REG DBGU_EXID;		// Chip ID Extension RegisterDBGU_EXID88,5096
  AT91_REG DBGU_FNTR;		// Force NTRST RegisterDBGU_FNTR89,5149
  AT91_REG Reserved4[45];	// Reserved490,5196
  AT91_REG DBGU_RPR;		// Receive Pointer RegisterDBGU_RPR91,5226
  AT91_REG DBGU_RCR;		// Receive Counter RegisterDBGU_RCR92,5276
  AT91_REG DBGU_TPR;		// Transmit Pointer RegisterDBGU_TPR93,5326
  AT91_REG DBGU_TCR;		// Transmit Counter RegisterDBGU_TCR94,5377
  AT91_REG DBGU_RNPR;		// Receive Next Pointer RegisterDBGU_RNPR95,5428
  AT91_REG DBGU_RNCR;		// Receive Next Counter RegisterDBGU_RNCR96,5484
  AT91_REG DBGU_TNPR;		// Transmit Next Pointer RegisterDBGU_TNPR97,5540
  AT91_REG DBGU_TNCR;		// Transmit Next Counter RegisterDBGU_TNCR98,5597
  AT91_REG DBGU_PTCR;		// PDC Transfer Control RegisterDBGU_PTCR99,5654
  AT91_REG DBGU_PTSR;		// PDC Transfer Status RegisterDBGU_PTSR100,5710
  AT91_REG Reserved5[54];	// Reserved5101,5765
  AT91_REG PIOA_PER;		// PIO Enable RegisterPIOA_PER102,5795
  AT91_REG PIOA_PDR;		// PIO Disable RegisterPIOA_PDR103,5840
  AT91_REG PIOA_PSR;		// PIO Status RegisterPIOA_PSR104,5886
  AT91_REG Reserved6[1];	// Reserved6105,5931
  AT91_REG PIOA_OER;		// Output Enable RegisterPIOA_OER106,5960
  AT91_REG PIOA_ODR;		// Output Disable RegisterrPIOA_ODR107,6008
  AT91_REG PIOA_OSR;		// Output Status RegisterPIOA_OSR108,6058
  AT91_REG Reserved7[1];	// Reserved7109,6106
  AT91_REG PIOA_IFER;		// Input Filter Enable RegisterPIOA_IFER110,6135
  AT91_REG PIOA_IFDR;		// Input Filter Disable RegisterPIOA_IFDR111,6190
  AT91_REG PIOA_IFSR;		// Input Filter Status RegisterPIOA_IFSR112,6246
  AT91_REG Reserved8[1];	// Reserved8113,6301
  AT91_REG PIOA_SODR;		// Set Output Data RegisterPIOA_SODR114,6330
  AT91_REG PIOA_CODR;		// Clear Output Data RegisterPIOA_CODR115,6381
  AT91_REG PIOA_ODSR;		// Output Data Status RegisterPIOA_ODSR116,6434
  AT91_REG PIOA_PDSR;		// Pin Data Status RegisterPIOA_PDSR117,6488
  AT91_REG PIOA_IER;		// Interrupt Enable RegisterPIOA_IER118,6539
  AT91_REG PIOA_IDR;		// Interrupt Disable RegisterPIOA_IDR119,6590
  AT91_REG PIOA_IMR;		// Interrupt Mask RegisterPIOA_IMR120,6642
  AT91_REG PIOA_ISR;		// Interrupt Status RegisterPIOA_ISR121,6691
  AT91_REG PIOA_MDER;		// Multi-driver Enable RegisterPIOA_MDER122,6742
  AT91_REG PIOA_MDDR;		// Multi-driver Disable RegisterPIOA_MDDR123,6797
  AT91_REG PIOA_MDSR;		// Multi-driver Status RegisterPIOA_MDSR124,6853
  AT91_REG Reserved9[1];	// Reserved9125,6908
  AT91_REG PIOA_PPUDR;		// Pull-up Disable RegisterPIOA_PPUDR126,6937
  AT91_REG PIOA_PPUER;		// Pull-up Enable RegisterPIOA_PPUER127,6989
  AT91_REG PIOA_PPUSR;		// Pull-up Status RegisterPIOA_PPUSR128,7040
  AT91_REG Reserved10[1];	// Reserved10129,7091
  AT91_REG PIOA_ASR;		// Select A RegisterPIOA_ASR130,7121
  AT91_REG PIOA_BSR;		// Select B RegisterPIOA_BSR131,7164
  AT91_REG PIOA_ABSR;		// AB Select Status RegisterPIOA_ABSR132,7207
  AT91_REG Reserved11[9];	// Reserved11133,7259
  AT91_REG PIOA_OWER;		// Output Write Enable RegisterPIOA_OWER134,7289
  AT91_REG PIOA_OWDR;		// Output Write Disable RegisterPIOA_OWDR135,7344
  AT91_REG PIOA_OWSR;		// Output Write Status RegisterPIOA_OWSR136,7400
  AT91_REG Reserved12[85];	// Reserved12137,7455
  AT91_REG PIOB_PER;		// PIO Enable RegisterPIOB_PER138,7486
  AT91_REG PIOB_PDR;		// PIO Disable RegisterPIOB_PDR139,7531
  AT91_REG PIOB_PSR;		// PIO Status RegisterPIOB_PSR140,7577
  AT91_REG Reserved13[1];	// Reserved13141,7622
  AT91_REG PIOB_OER;		// Output Enable RegisterPIOB_OER142,7652
  AT91_REG PIOB_ODR;		// Output Disable RegisterrPIOB_ODR143,7700
  AT91_REG PIOB_OSR;		// Output Status RegisterPIOB_OSR144,7750
  AT91_REG Reserved14[1];	// Reserved14145,7798
  AT91_REG PIOB_IFER;		// Input Filter Enable RegisterPIOB_IFER146,7828
  AT91_REG PIOB_IFDR;		// Input Filter Disable RegisterPIOB_IFDR147,7883
  AT91_REG PIOB_IFSR;		// Input Filter Status RegisterPIOB_IFSR148,7939
  AT91_REG Reserved15[1];	// Reserved15149,7994
  AT91_REG PIOB_SODR;		// Set Output Data RegisterPIOB_SODR150,8024
  AT91_REG PIOB_CODR;		// Clear Output Data RegisterPIOB_CODR151,8075
  AT91_REG PIOB_ODSR;		// Output Data Status RegisterPIOB_ODSR152,8128
  AT91_REG PIOB_PDSR;		// Pin Data Status RegisterPIOB_PDSR153,8182
  AT91_REG PIOB_IER;		// Interrupt Enable RegisterPIOB_IER154,8233
  AT91_REG PIOB_IDR;		// Interrupt Disable RegisterPIOB_IDR155,8284
  AT91_REG PIOB_IMR;		// Interrupt Mask RegisterPIOB_IMR156,8336
  AT91_REG PIOB_ISR;		// Interrupt Status RegisterPIOB_ISR157,8385
  AT91_REG PIOB_MDER;		// Multi-driver Enable RegisterPIOB_MDER158,8436
  AT91_REG PIOB_MDDR;		// Multi-driver Disable RegisterPIOB_MDDR159,8491
  AT91_REG PIOB_MDSR;		// Multi-driver Status RegisterPIOB_MDSR160,8547
  AT91_REG Reserved16[1];	// Reserved16161,8602
  AT91_REG PIOB_PPUDR;		// Pull-up Disable RegisterPIOB_PPUDR162,8632
  AT91_REG PIOB_PPUER;		// Pull-up Enable RegisterPIOB_PPUER163,8684
  AT91_REG PIOB_PPUSR;		// Pull-up Status RegisterPIOB_PPUSR164,8735
  AT91_REG Reserved17[1];	// Reserved17165,8786
  AT91_REG PIOB_ASR;		// Select A RegisterPIOB_ASR166,8816
  AT91_REG PIOB_BSR;		// Select B RegisterPIOB_BSR167,8859
  AT91_REG PIOB_ABSR;		// AB Select Status RegisterPIOB_ABSR168,8902
  AT91_REG Reserved18[9];	// Reserved18169,8954
  AT91_REG PIOB_OWER;		// Output Write Enable RegisterPIOB_OWER170,8984
  AT91_REG PIOB_OWDR;		// Output Write Disable RegisterPIOB_OWDR171,9039
  AT91_REG PIOB_OWSR;		// Output Write Status RegisterPIOB_OWSR172,9095
  AT91_REG Reserved19[341];	// Reserved19173,9150
  AT91_REG PMC_SCER;		// System Clock Enable RegisterPMC_SCER174,9182
  AT91_REG PMC_SCDR;		// System Clock Disable RegisterPMC_SCDR175,9236
  AT91_REG PMC_SCSR;		// System Clock Status RegisterPMC_SCSR176,9291
  AT91_REG Reserved20[1];	// Reserved20177,9345
  AT91_REG PMC_PCER;		// Peripheral Clock Enable RegisterPMC_PCER178,9375
  AT91_REG PMC_PCDR;		// Peripheral Clock Disable RegisterPMC_PCDR179,9433
  AT91_REG PMC_PCSR;		// Peripheral Clock Status RegisterPMC_PCSR180,9492
  AT91_REG Reserved21[1];	// Reserved21181,9550
  AT91_REG PMC_MOR;		// Main Oscillator RegisterPMC_MOR182,9580
  AT91_REG PMC_MCFR;		// Main Clock  Frequency RegisterPMC_MCFR183,9629
  AT91_REG Reserved22[1];	// Reserved22184,9685
  AT91_REG PMC_PLLR;		// PLL RegisterPMC_PLLR185,9715
  AT91_REG PMC_MCKR;		// Master Clock RegisterPMC_MCKR186,9753
  AT91_REG Reserved23[3];	// Reserved23187,9800
  AT91_REG PMC_PCKR[4];		// Programmable Clock RegisterPMC_PCKR188,9830
  AT91_REG Reserved24[4];	// Reserved24189,9886
  AT91_REG PMC_IER;		// Interrupt Enable RegisterPMC_IER190,9916
  AT91_REG PMC_IDR;		// Interrupt Disable RegisterPMC_IDR191,9966
  AT91_REG PMC_SR;		// Status RegisterPMC_SR192,10017
  AT91_REG PMC_IMR;		// Interrupt Mask RegisterPMC_IMR193,10056
  AT91_REG Reserved25[36];	// Reserved25194,10104
  AT91_REG RSTC_RCR;		// Reset Control RegisterRSTC_RCR195,10135
  AT91_REG RSTC_RSR;		// Reset Status RegisterRSTC_RSR196,10183
  AT91_REG RSTC_RMR;		// Reset Mode RegisterRSTC_RMR197,10230
  AT91_REG Reserved26[5];	// Reserved26198,10275
  AT91_REG RTTC_RTMR;		// Real-time Mode RegisterRTTC_RTMR199,10305
  AT91_REG RTTC_RTAR;		// Real-time Alarm RegisterRTTC_RTAR200,10355
  AT91_REG RTTC_RTVR;		// Real-time Value RegisterRTTC_RTVR201,10406
  AT91_REG RTTC_RTSR;		// Real-time Status RegisterRTTC_RTSR202,10457
  AT91_REG PITC_PIMR;		// Period Interval Mode RegisterPITC_PIMR203,10509
  AT91_REG PITC_PISR;		// Period Interval Status RegisterPITC_PISR204,10565
  AT91_REG PITC_PIVR;		// Period Interval Value RegisterPITC_PIVR205,10623
  AT91_REG PITC_PIIR;		// Period Interval Image RegisterPITC_PIIR206,10680
  AT91_REG WDTC_WDCR;		// Watchdog Control RegisterWDTC_WDCR207,10737
  AT91_REG WDTC_WDMR;		// Watchdog Mode RegisterWDTC_WDMR208,10789
  AT91_REG WDTC_WDSR;		// Watchdog Status RegisterWDTC_WDSR209,10838
  AT91_REG Reserved27[5];	// Reserved27210,10889
  AT91_REG VREG_MR;		// Voltage Regulator Mode RegisterVREG_MR211,10919
} AT91S_SYS, *AT91PS_SYS;AT91S_SYS212,10975
} AT91S_SYS, *AT91PS_SYS;AT91PS_SYS212,10975
typedef struct _AT91S_AIC_AT91S_AIC218,11240
  AT91_REG AIC_SMR[32];		// Source Mode RegisterAIC_SMR220,11268
  AT91_REG AIC_SVR[32];		// Source Vector RegisterAIC_SVR221,11317
  AT91_REG AIC_IVR;		// IRQ Vector RegisterAIC_IVR222,11368
  AT91_REG AIC_FVR;		// FIQ Vector RegisterAIC_FVR223,11412
  AT91_REG AIC_ISR;		// Interrupt Status RegisterAIC_ISR224,11456
  AT91_REG AIC_IPR;		// Interrupt Pending RegisterAIC_IPR225,11506
  AT91_REG AIC_IMR;		// Interrupt Mask RegisterAIC_IMR226,11557
  AT91_REG AIC_CISR;		// Core Interrupt Status RegisterAIC_CISR227,11605
  AT91_REG Reserved0[2];	// Reserved0228,11661
  AT91_REG AIC_IECR;		// Interrupt Enable Command RegisterAIC_IECR229,11690
  AT91_REG AIC_IDCR;		// Interrupt Disable Command RegisterAIC_IDCR230,11749
  AT91_REG AIC_ICCR;		// Interrupt Clear Command RegisterAIC_ICCR231,11809
  AT91_REG AIC_ISCR;		// Interrupt Set Command RegisterAIC_ISCR232,11867
  AT91_REG AIC_EOICR;		// End of Interrupt Command RegisterAIC_EOICR233,11923
  AT91_REG AIC_SPU;		// Spurious Vector RegisterAIC_SPU234,11983
  AT91_REG AIC_DCR;		// Debug Control Register (Protect)AIC_DCR235,12032
  AT91_REG Reserved1[1];	// Reserved1236,12089
  AT91_REG AIC_FFER;		// Fast Forcing Enable RegisterAIC_FFER237,12118
  AT91_REG AIC_FFDR;		// Fast Forcing Disable RegisterAIC_FFDR238,12172
  AT91_REG AIC_FFSR;		// Fast Forcing Status RegisterAIC_FFSR239,12227
} AT91S_AIC, *AT91PS_AIC;AT91S_AIC240,12281
} AT91S_AIC, *AT91PS_AIC;AT91PS_AIC240,12281
#define AT91C_AIC_PRIOR AT91C_AIC_PRIOR243,12375
#define 	AT91C_AIC_PRIOR_LOWEST AT91C_AIC_PRIOR_LOWEST244,12456
#define 	AT91C_AIC_PRIOR_HIGHEST AT91C_AIC_PRIOR_HIGHEST245,12554
#define AT91C_AIC_SRCTYPE AT91C_AIC_SRCTYPE246,12653
#define 	AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL247,12741
#define 	AT91C_AIC_SRCTYPE_EXT_LOW_LEVEL AT91C_AIC_SRCTYPE_EXT_LOW_LEVEL248,12874
#define 	AT91C_AIC_SRCTYPE_INT_POSITIVE_EDGE AT91C_AIC_SRCTYPE_INT_POSITIVE_EDGE249,13006
#define 	AT91C_AIC_SRCTYPE_EXT_NEGATIVE_EDGE AT91C_AIC_SRCTYPE_EXT_NEGATIVE_EDGE250,13142
#define 	AT91C_AIC_SRCTYPE_HIGH_LEVEL AT91C_AIC_SRCTYPE_HIGH_LEVEL251,13278
#define 	AT91C_AIC_SRCTYPE_POSITIVE_EDGE AT91C_AIC_SRCTYPE_POSITIVE_EDGE252,13423
#define AT91C_AIC_NFIQ AT91C_AIC_NFIQ254,13659
#define AT91C_AIC_NIRQ AT91C_AIC_NIRQ255,13737
#define AT91C_AIC_DCR_PROT AT91C_AIC_DCR_PROT257,13904
#define AT91C_AIC_DCR_GMSK AT91C_AIC_DCR_GMSK258,13986
typedef struct _AT91S_PDC_AT91S_PDC263,14299
  AT91_REG PDC_RPR;		// Receive Pointer RegisterPDC_RPR265,14327
  AT91_REG PDC_RCR;		// Receive Counter RegisterPDC_RCR266,14376
  AT91_REG PDC_TPR;		// Transmit Pointer RegisterPDC_TPR267,14425
  AT91_REG PDC_TCR;		// Transmit Counter RegisterPDC_TCR268,14475
  AT91_REG PDC_RNPR;		// Receive Next Pointer RegisterPDC_RNPR269,14525
  AT91_REG PDC_RNCR;		// Receive Next Counter RegisterPDC_RNCR270,14580
  AT91_REG PDC_TNPR;		// Transmit Next Pointer RegisterPDC_TNPR271,14635
  AT91_REG PDC_TNCR;		// Transmit Next Counter RegisterPDC_TNCR272,14691
  AT91_REG PDC_PTCR;		// PDC Transfer Control RegisterPDC_PTCR273,14747
  AT91_REG PDC_PTSR;		// PDC Transfer Status RegisterPDC_PTSR274,14802
} AT91S_PDC, *AT91PS_PDC;AT91S_PDC275,14856
} AT91S_PDC, *AT91PS_PDC;AT91PS_PDC275,14856
#define AT91C_PDC_RXTEN AT91C_PDC_RXTEN278,14965
#define AT91C_PDC_RXTDIS AT91C_PDC_RXTDIS279,15056
#define AT91C_PDC_TXTEN AT91C_PDC_TXTEN280,15148
#define AT91C_PDC_TXTDIS AT91C_PDC_TXTDIS281,15242
typedef struct _AT91S_DBGU_AT91S_DBGU287,15637
  AT91_REG DBGU_CR;		// Control RegisterDBGU_CR289,15666
  AT91_REG DBGU_MR;		// Mode RegisterDBGU_MR290,15707
  AT91_REG DBGU_IER;		// Interrupt Enable RegisterDBGU_IER291,15745
  AT91_REG DBGU_IDR;		// Interrupt Disable RegisterDBGU_IDR292,15796
  AT91_REG DBGU_IMR;		// Interrupt Mask RegisterDBGU_IMR293,15848
  AT91_REG DBGU_CSR;		// Channel Status RegisterDBGU_CSR294,15897
  AT91_REG DBGU_RHR;		// Receiver Holding RegisterDBGU_RHR295,15946
  AT91_REG DBGU_THR;		// Transmitter Holding RegisterDBGU_THR296,15997
  AT91_REG DBGU_BRGR;		// Baud Rate Generator RegisterDBGU_BRGR297,16051
  AT91_REG Reserved0[7];	// Reserved0298,16106
  AT91_REG DBGU_CIDR;		// Chip ID RegisterDBGU_CIDR299,16135
  AT91_REG DBGU_EXID;		// Chip ID Extension RegisterDBGU_EXID300,16178
  AT91_REG DBGU_FNTR;		// Force NTRST RegisterDBGU_FNTR301,16231
  AT91_REG Reserved1[45];	// Reserved1302,16278
  AT91_REG DBGU_RPR;		// Receive Pointer RegisterDBGU_RPR303,16308
  AT91_REG DBGU_RCR;		// Receive Counter RegisterDBGU_RCR304,16358
  AT91_REG DBGU_TPR;		// Transmit Pointer RegisterDBGU_TPR305,16408
  AT91_REG DBGU_TCR;		// Transmit Counter RegisterDBGU_TCR306,16459
  AT91_REG DBGU_RNPR;		// Receive Next Pointer RegisterDBGU_RNPR307,16510
  AT91_REG DBGU_RNCR;		// Receive Next Counter RegisterDBGU_RNCR308,16566
  AT91_REG DBGU_TNPR;		// Transmit Next Pointer RegisterDBGU_TNPR309,16622
  AT91_REG DBGU_TNCR;		// Transmit Next Counter RegisterDBGU_TNCR310,16679
  AT91_REG DBGU_PTCR;		// PDC Transfer Control RegisterDBGU_PTCR311,16736
  AT91_REG DBGU_PTSR;		// PDC Transfer Status RegisterDBGU_PTSR312,16792
} AT91S_DBGU, *AT91PS_DBGU;AT91S_DBGU313,16847
} AT91S_DBGU, *AT91PS_DBGU;AT91PS_DBGU313,16847
#define AT91C_US_RSTRX AT91C_US_RSTRX316,16955
#define AT91C_US_RSTTX AT91C_US_RSTTX317,17037
#define AT91C_US_RXEN AT91C_US_RXEN318,17122
#define AT91C_US_RXDIS AT91C_US_RXDIS319,17205
#define AT91C_US_TXEN AT91C_US_TXEN320,17289
#define AT91C_US_TXDIS AT91C_US_TXDIS321,17375
#define AT91C_US_RSTSTA AT91C_US_RSTSTA322,17462
#define AT91C_US_PAR AT91C_US_PAR324,17623
#define 	AT91C_US_PAR_EVEN AT91C_US_PAR_EVEN325,17702
#define 	AT91C_US_PAR_ODD AT91C_US_PAR_ODD326,17794
#define 	AT91C_US_PAR_SPACE AT91C_US_PAR_SPACE327,17885
#define 	AT91C_US_PAR_MARK AT91C_US_PAR_MARK328,17992
#define 	AT91C_US_PAR_NONE AT91C_US_PAR_NONE329,18098
#define 	AT91C_US_PAR_MULTI_DROP AT91C_US_PAR_MULTI_DROP330,18188
#define AT91C_US_CHMODE AT91C_US_CHMODE331,18284
#define 	AT91C_US_CHMODE_NORMAL AT91C_US_CHMODE_NORMAL332,18364
#define 	AT91C_US_CHMODE_AUTO AT91C_US_CHMODE_AUTO333,18506
#define 	AT91C_US_CHMODE_LOCAL AT91C_US_CHMODE_LOCAL334,18654
#define 	AT91C_US_CHMODE_REMOTE AT91C_US_CHMODE_REMOTE335,18818
#define AT91C_US_RXRDY AT91C_US_RXRDY337,19051
#define AT91C_US_TXRDY AT91C_US_TXRDY338,19134
#define AT91C_US_ENDRX AT91C_US_ENDRX339,19217
#define AT91C_US_ENDTX AT91C_US_ENDTX340,19318
#define AT91C_US_OVRE AT91C_US_OVRE341,19411
#define AT91C_US_FRAME AT91C_US_FRAME342,19496
#define AT91C_US_PARE AT91C_US_PARE343,19587
#define AT91C_US_TXEMPTY AT91C_US_TXEMPTY344,19677
#define AT91C_US_TXBUFE AT91C_US_TXBUFE345,19762
#define AT91C_US_RXBUFF AT91C_US_RXBUFF346,19846
#define AT91C_US_COMM_TX AT91C_US_COMM_TX347,19930
#define AT91C_US_COMM_RX AT91C_US_COMM_RX348,20015
#define AT91C_US_FORCE_NTRST AT91C_US_FORCE_NTRST353,20452
typedef struct _AT91S_PIO_AT91S_PIO358,20779
  AT91_REG PIO_PER;		// PIO Enable RegisterPIO_PER360,20807
  AT91_REG PIO_PDR;		// PIO Disable RegisterPIO_PDR361,20851
  AT91_REG PIO_PSR;		// PIO Status RegisterPIO_PSR362,20896
  AT91_REG Reserved0[1];	// Reserved0363,20940
  AT91_REG PIO_OER;		// Output Enable RegisterPIO_OER364,20969
  AT91_REG PIO_ODR;		// Output Disable RegisterrPIO_ODR365,21016
  AT91_REG PIO_OSR;		// Output Status RegisterPIO_OSR366,21065
  AT91_REG Reserved1[1];	// Reserved1367,21112
  AT91_REG PIO_IFER;		// Input Filter Enable RegisterPIO_IFER368,21141
  AT91_REG PIO_IFDR;		// Input Filter Disable RegisterPIO_IFDR369,21195
  AT91_REG PIO_IFSR;		// Input Filter Status RegisterPIO_IFSR370,21250
  AT91_REG Reserved2[1];	// Reserved2371,21304
  AT91_REG PIO_SODR;		// Set Output Data RegisterPIO_SODR372,21333
  AT91_REG PIO_CODR;		// Clear Output Data RegisterPIO_CODR373,21383
  AT91_REG PIO_ODSR;		// Output Data Status RegisterPIO_ODSR374,21435
  AT91_REG PIO_PDSR;		// Pin Data Status RegisterPIO_PDSR375,21488
  AT91_REG PIO_IER;		// Interrupt Enable RegisterPIO_IER376,21538
  AT91_REG PIO_IDR;		// Interrupt Disable RegisterPIO_IDR377,21588
  AT91_REG PIO_IMR;		// Interrupt Mask RegisterPIO_IMR378,21639
  AT91_REG PIO_ISR;		// Interrupt Status RegisterPIO_ISR379,21687
  AT91_REG PIO_MDER;		// Multi-driver Enable RegisterPIO_MDER380,21737
  AT91_REG PIO_MDDR;		// Multi-driver Disable RegisterPIO_MDDR381,21791
  AT91_REG PIO_MDSR;		// Multi-driver Status RegisterPIO_MDSR382,21846
  AT91_REG Reserved3[1];	// Reserved3383,21900
  AT91_REG PIO_PPUDR;		// Pull-up Disable RegisterPIO_PPUDR384,21929
  AT91_REG PIO_PPUER;		// Pull-up Enable RegisterPIO_PPUER385,21980
  AT91_REG PIO_PPUSR;		// Pull-up Status RegisterPIO_PPUSR386,22030
  AT91_REG Reserved4[1];	// Reserved4387,22080
  AT91_REG PIO_ASR;		// Select A RegisterPIO_ASR388,22109
  AT91_REG PIO_BSR;		// Select B RegisterPIO_BSR389,22151
  AT91_REG PIO_ABSR;		// AB Select Status RegisterPIO_ABSR390,22193
  AT91_REG Reserved5[9];	// Reserved5391,22244
  AT91_REG PIO_OWER;		// Output Write Enable RegisterPIO_OWER392,22273
  AT91_REG PIO_OWDR;		// Output Write Disable RegisterPIO_OWDR393,22327
  AT91_REG PIO_OWSR;		// Output Write Status RegisterPIO_OWSR394,22382
} AT91S_PIO, *AT91PS_PIO;AT91S_PIO395,22436
} AT91S_PIO, *AT91PS_PIO;AT91PS_PIO395,22436
typedef struct _AT91S_CKGR_AT91S_CKGR401,22697
  AT91_REG CKGR_MOR;		// Main Oscillator RegisterCKGR_MOR403,22726
  AT91_REG CKGR_MCFR;		// Main Clock  Frequency RegisterCKGR_MCFR404,22776
  AT91_REG Reserved0[1];	// Reserved0405,22833
  AT91_REG CKGR_PLLR;		// PLL RegisterCKGR_PLLR406,22862
} AT91S_CKGR, *AT91PS_CKGR;AT91S_CKGR407,22901
} AT91S_CKGR, *AT91PS_CKGR;AT91PS_CKGR407,22901
#define AT91C_CKGR_MOSCEN AT91C_CKGR_MOSCEN410,23007
#define AT91C_CKGR_OSCBYPASS AT91C_CKGR_OSCBYPASS411,23097
#define AT91C_CKGR_OSCOUNT AT91C_CKGR_OSCOUNT412,23187
#define AT91C_CKGR_MAINF AT91C_CKGR_MAINF414,23368
#define AT91C_CKGR_MAINRDY AT91C_CKGR_MAINRDY415,23459
#define AT91C_CKGR_DIV AT91C_CKGR_DIV417,23611
#define 	AT91C_CKGR_DIV_0 AT91C_CKGR_DIV_0418,23696
#define 	AT91C_CKGR_DIV_BYPASS AT91C_CKGR_DIV_BYPASS419,23792
#define AT91C_CKGR_PLLCOUNT AT91C_CKGR_PLLCOUNT420,23888
#define AT91C_CKGR_OUT AT91C_CKGR_OUT421,23968
#define 	AT91C_CKGR_OUT_0 AT91C_CKGR_OUT_0422,24062
#define 	AT91C_CKGR_OUT_1 AT91C_CKGR_OUT_1423,24178
#define 	AT91C_CKGR_OUT_2 AT91C_CKGR_OUT_2424,24294
#define 	AT91C_CKGR_OUT_3 AT91C_CKGR_OUT_3425,24410
#define AT91C_CKGR_MUL AT91C_CKGR_MUL426,24526
#define AT91C_CKGR_USBDIV AT91C_CKGR_USBDIV427,24610
#define 	AT91C_CKGR_USBDIV_0 AT91C_CKGR_USBDIV_0428,24700
#define 	AT91C_CKGR_USBDIV_1 AT91C_CKGR_USBDIV_1429,24820
#define 	AT91C_CKGR_USBDIV_2 AT91C_CKGR_USBDIV_2430,24953
typedef struct _AT91S_PMC_AT91S_PMC435,25321
  AT91_REG PMC_SCER;		// System Clock Enable RegisterPMC_SCER437,25349
  AT91_REG PMC_SCDR;		// System Clock Disable RegisterPMC_SCDR438,25403
  AT91_REG PMC_SCSR;		// System Clock Status RegisterPMC_SCSR439,25458
  AT91_REG Reserved0[1];	// Reserved0440,25512
  AT91_REG PMC_PCER;		// Peripheral Clock Enable RegisterPMC_PCER441,25541
  AT91_REG PMC_PCDR;		// Peripheral Clock Disable RegisterPMC_PCDR442,25599
  AT91_REG PMC_PCSR;		// Peripheral Clock Status RegisterPMC_PCSR443,25658
  AT91_REG Reserved1[1];	// Reserved1444,25716
  AT91_REG PMC_MOR;		// Main Oscillator RegisterPMC_MOR445,25745
  AT91_REG PMC_MCFR;		// Main Clock  Frequency RegisterPMC_MCFR446,25794
  AT91_REG Reserved2[1];	// Reserved2447,25850
  AT91_REG PMC_PLLR;		// PLL RegisterPMC_PLLR448,25879
  AT91_REG PMC_MCKR;		// Master Clock RegisterPMC_MCKR449,25917
  AT91_REG Reserved3[3];	// Reserved3450,25964
  AT91_REG PMC_PCKR[4];		// Programmable Clock RegisterPMC_PCKR451,25993
  AT91_REG Reserved4[4];	// Reserved4452,26049
  AT91_REG PMC_IER;		// Interrupt Enable RegisterPMC_IER453,26078
  AT91_REG PMC_IDR;		// Interrupt Disable RegisterPMC_IDR454,26128
  AT91_REG PMC_SR;		// Status RegisterPMC_SR455,26179
  AT91_REG PMC_IMR;		// Interrupt Mask RegisterPMC_IMR456,26218
} AT91S_PMC, *AT91PS_PMC;AT91S_PMC457,26266
} AT91S_PMC, *AT91PS_PMC;AT91PS_PMC457,26266
#define AT91C_PMC_PCK AT91C_PMC_PCK460,26373
#define AT91C_PMC_UDP AT91C_PMC_UDP461,26455
#define AT91C_PMC_PCK0 AT91C_PMC_PCK0462,26543
#define AT91C_PMC_PCK1 AT91C_PMC_PCK1463,26635
#define AT91C_PMC_PCK2 AT91C_PMC_PCK2464,26727
#define AT91C_PMC_PCK3 AT91C_PMC_PCK3465,26819
#define AT91C_PMC_CSS AT91C_PMC_CSS472,27374
#define 	AT91C_PMC_CSS_SLOW_CLK AT91C_PMC_CSS_SLOW_CLK473,27469
#define 	AT91C_PMC_CSS_MAIN_CLK AT91C_PMC_CSS_MAIN_CLK474,27566
#define 	AT91C_PMC_CSS_PLL_CLK AT91C_PMC_CSS_PLL_CLK475,27663
#define AT91C_PMC_PRES AT91C_PMC_PRES476,27764
#define 	AT91C_PMC_PRES_CLK AT91C_PMC_PRES_CLK477,27859
#define 	AT91C_PMC_PRES_CLK_2 AT91C_PMC_PRES_CLK_2478,27955
#define 	AT91C_PMC_PRES_CLK_4 AT91C_PMC_PRES_CLK_4479,28064
#define 	AT91C_PMC_PRES_CLK_8 AT91C_PMC_PRES_CLK_8480,28173
#define 	AT91C_PMC_PRES_CLK_16 AT91C_PMC_PRES_CLK_16481,28282
#define 	AT91C_PMC_PRES_CLK_32 AT91C_PMC_PRES_CLK_32482,28392
#define 	AT91C_PMC_PRES_CLK_64 AT91C_PMC_PRES_CLK_64483,28502
#define AT91C_PMC_MOSCS AT91C_PMC_MOSCS486,28773
#define AT91C_PMC_LOCK AT91C_PMC_LOCK487,28871
#define AT91C_PMC_MCKRDY AT91C_PMC_MCKRDY488,28968
#define AT91C_PMC_PCK0RDY AT91C_PMC_PCK0RDY489,29069
#define AT91C_PMC_PCK1RDY AT91C_PMC_PCK1RDY490,29171
#define AT91C_PMC_PCK2RDY AT91C_PMC_PCK2RDY491,29273
#define AT91C_PMC_PCK3RDY AT91C_PMC_PCK3RDY492,29375
typedef struct _AT91S_RSTC_AT91S_RSTC500,29943
  AT91_REG RSTC_RCR;		// Reset Control RegisterRSTC_RCR502,29972
  AT91_REG RSTC_RSR;		// Reset Status RegisterRSTC_RSR503,30020
  AT91_REG RSTC_RMR;		// Reset Mode RegisterRSTC_RMR504,30067
} AT91S_RSTC, *AT91PS_RSTC;AT91S_RSTC505,30112
} AT91S_RSTC, *AT91PS_RSTC;AT91PS_RSTC505,30112
#define AT91C_RSTC_PROCRST AT91C_RSTC_PROCRST508,30216
#define AT91C_RSTC_PERRST AT91C_RSTC_PERRST509,30299
#define AT91C_RSTC_EXTRST AT91C_RSTC_EXTRST510,30383
#define AT91C_RSTC_KEY AT91C_RSTC_KEY511,30465
#define AT91C_RSTC_URSTS AT91C_RSTC_URSTS513,30616
#define AT91C_RSTC_BODSTS AT91C_RSTC_BODSTS514,30701
#define AT91C_RSTC_RSTTYP AT91C_RSTC_RSTTYP515,30794
#define 	AT91C_RSTC_RSTTYP_POWERUP AT91C_RSTC_RSTTYP_POWERUP516,30872
#define 	AT91C_RSTC_RSTTYP_WAKEUP AT91C_RSTC_RSTTYP_WAKEUP517,30989
#define 	AT91C_RSTC_RSTTYP_WATCHDOG AT91C_RSTC_RSTTYP_WATCHDOG518,31104
#define 	AT91C_RSTC_RSTTYP_SOFTWARE AT91C_RSTC_RSTTYP_SOFTWARE519,31232
#define 	AT91C_RSTC_RSTTYP_USER AT91C_RSTC_RSTTYP_USER520,31375
#define 	AT91C_RSTC_RSTTYP_BROWNOUT AT91C_RSTC_RSTTYP_BROWNOUT521,31495
#define AT91C_RSTC_NRSTL AT91C_RSTC_NRSTL522,31604
#define AT91C_RSTC_SRCMP AT91C_RSTC_SRCMP523,31686
#define AT91C_RSTC_URSTEN AT91C_RSTC_URSTEN525,31861
#define AT91C_RSTC_URSTIEN AT91C_RSTC_URSTIEN526,31946
#define AT91C_RSTC_ERSTL AT91C_RSTC_ERSTL527,32041
#define AT91C_RSTC_BODIEN AT91C_RSTC_BODIEN528,32126
typedef struct _AT91S_RTTC_AT91S_RTTC533,32474
  AT91_REG RTTC_RTMR;		// Real-time Mode RegisterRTTC_RTMR535,32503
  AT91_REG RTTC_RTAR;		// Real-time Alarm RegisterRTTC_RTAR536,32553
  AT91_REG RTTC_RTVR;		// Real-time Value RegisterRTTC_RTVR537,32604
  AT91_REG RTTC_RTSR;		// Real-time Status RegisterRTTC_RTSR538,32655
} AT91S_RTTC, *AT91PS_RTTC;AT91S_RTTC539,32707
} AT91S_RTTC, *AT91PS_RTTC;AT91PS_RTTC539,32707
#define AT91C_RTTC_RTPRES AT91C_RTTC_RTPRES542,32813
#define AT91C_RTTC_ALMIEN AT91C_RTTC_ALMIEN543,32915
#define AT91C_RTTC_RTTINCIEN AT91C_RTTC_RTTINCIEN544,33005
#define AT91C_RTTC_RTTRST AT91C_RTTC_RTTRST545,33115
#define AT91C_RTTC_ALMV AT91C_RTTC_ALMV547,33284
#define AT91C_RTTC_CRTV AT91C_RTTC_CRTV549,33449
#define AT91C_RTTC_ALMS AT91C_RTTC_ALMS551,33619
#define AT91C_RTTC_RTTINC AT91C_RTTC_RTTINC552,33709
typedef struct _AT91S_PITC_AT91S_PITC557,34055
  AT91_REG PITC_PIMR;		// Period Interval Mode RegisterPITC_PIMR559,34084
  AT91_REG PITC_PISR;		// Period Interval Status RegisterPITC_PISR560,34140
  AT91_REG PITC_PIVR;		// Period Interval Value RegisterPITC_PIVR561,34198
  AT91_REG PITC_PIIR;		// Period Interval Image RegisterPITC_PIIR562,34255
} AT91S_PITC, *AT91PS_PITC;AT91S_PITC563,34312
} AT91S_PITC, *AT91PS_PITC;AT91PS_PITC563,34312
#define AT91C_PITC_PIV AT91C_PITC_PIV566,34426
#define AT91C_PITC_PITEN AT91C_PITC_PITEN567,34521
#define AT91C_PITC_PITIEN AT91C_PITC_PITIEN568,34620
#define AT91C_PITC_PITS AT91C_PITC_PITS570,34815
#define AT91C_PITC_CPIV AT91C_PITC_CPIV572,34999
#define AT91C_PITC_PICNT AT91C_PITC_PICNT573,35102
typedef struct _AT91S_WDTC_AT91S_WDTC579,35527
  AT91_REG WDTC_WDCR;		// Watchdog Control RegisterWDTC_WDCR581,35556
  AT91_REG WDTC_WDMR;		// Watchdog Mode RegisterWDTC_WDMR582,35608
  AT91_REG WDTC_WDSR;		// Watchdog Status RegisterWDTC_WDSR583,35657
} AT91S_WDTC, *AT91PS_WDTC;AT91S_WDTC584,35708
} AT91S_WDTC, *AT91PS_WDTC;AT91PS_WDTC584,35708
#define AT91C_WDTC_WDRSTT AT91C_WDTC_WDRSTT587,35823
#define AT91C_WDTC_KEY AT91C_WDTC_KEY588,35907
#define AT91C_WDTC_WDV AT91C_WDTC_WDV590,36073
#define AT91C_WDTC_WDFIEN AT91C_WDTC_WDFIEN591,36165
#define AT91C_WDTC_WDRSTEN AT91C_WDTC_WDRSTEN592,36264
#define AT91C_WDTC_WDRPROC AT91C_WDTC_WDRPROC593,36353
#define AT91C_WDTC_WDDIS AT91C_WDTC_WDDIS594,36443
#define AT91C_WDTC_WDD AT91C_WDTC_WDD595,36527
#define AT91C_WDTC_WDDBGHLT AT91C_WDTC_WDDBGHLT596,36617
#define AT91C_WDTC_WDIDLEHLT AT91C_WDTC_WDIDLEHLT597,36704
#define AT91C_WDTC_WDUNF AT91C_WDTC_WDUNF599,36868
#define AT91C_WDTC_WDERR AT91C_WDTC_WDERR600,36954
typedef struct _AT91S_VREG_AT91S_VREG605,37288
  AT91_REG VREG_MR;		// Voltage Regulator Mode RegisterVREG_MR607,37317
} AT91S_VREG, *AT91PS_VREG;AT91S_VREG608,37373
} AT91S_VREG, *AT91PS_VREG;AT91PS_VREG608,37373
#define AT91C_VREG_PSTDBY AT91C_VREG_PSTDBY611,37485
typedef struct _AT91S_MC_AT91S_MC616,37825
  AT91_REG MC_RCR;		// MC Remap Control RegisterMC_RCR618,37852
  AT91_REG MC_ASR;		// MC Abort Status RegisterMC_ASR619,37901
  AT91_REG MC_AASR;		// MC Abort Address Status RegisterMC_AASR620,37949
  AT91_REG Reserved0[21];	// Reserved0621,38006
  AT91_REG MC_FMR;		// MC Flash Mode RegisterMC_FMR622,38036
  AT91_REG MC_FCR;		// MC Flash Command RegisterMC_FCR623,38082
  AT91_REG MC_FSR;		// MC Flash Status RegisterMC_FSR624,38131
} AT91S_MC, *AT91PS_MC;AT91S_MC625,38179
} AT91S_MC, *AT91PS_MC;AT91PS_MC625,38179
#define AT91C_MC_RCB AT91C_MC_RCB628,38278
#define AT91C_MC_UNDADD AT91C_MC_UNDADD630,38434
#define AT91C_MC_MISADD AT91C_MC_MISADD631,38529
#define AT91C_MC_ABTSZ AT91C_MC_ABTSZ632,38625
#define 	AT91C_MC_ABTSZ_BYTE AT91C_MC_ABTSZ_BYTE633,38708
#define 	AT91C_MC_ABTSZ_HWORD AT91C_MC_ABTSZ_HWORD634,38793
#define 	AT91C_MC_ABTSZ_WORD AT91C_MC_ABTSZ_WORD635,38883
#define AT91C_MC_ABTTYP AT91C_MC_ABTTYP636,38968
#define 	AT91C_MC_ABTTYP_DATAR AT91C_MC_ABTTYP_DATAR637,39051
#define 	AT91C_MC_ABTTYP_DATAW AT91C_MC_ABTTYP_DATAW638,39142
#define 	AT91C_MC_ABTTYP_FETCH AT91C_MC_ABTTYP_FETCH639,39234
#define AT91C_MC_MST0 AT91C_MC_MST0640,39326
#define AT91C_MC_MST1 AT91C_MC_MST1641,39413
#define AT91C_MC_SVMST0 AT91C_MC_SVMST0642,39500
#define AT91C_MC_SVMST1 AT91C_MC_SVMST1643,39593
#define AT91C_MC_FRDY AT91C_MC_FRDY645,39758
#define AT91C_MC_LOCKE AT91C_MC_LOCKE646,39835
#define AT91C_MC_PROGE AT91C_MC_PROGE647,39911
#define AT91C_MC_NEBP AT91C_MC_NEBP648,39994
#define AT91C_MC_FWS AT91C_MC_FWS649,40087
#define 	AT91C_MC_FWS_0FWS AT91C_MC_FWS_0FWS650,40169
#define 	AT91C_MC_FWS_1FWS AT91C_MC_FWS_1FWS651,40288
#define 	AT91C_MC_FWS_2FWS AT91C_MC_FWS_2FWS652,40408
#define 	AT91C_MC_FWS_3FWS AT91C_MC_FWS_3FWS653,40528
#define AT91C_MC_FMCN AT91C_MC_FMCN654,40648
#define AT91C_MC_FCMD AT91C_MC_FCMD656,40820
#define 	AT91C_MC_FCMD_START_PROG AT91C_MC_FCMD_START_PROG657,40899
#define 	AT91C_MC_FCMD_LOCK AT91C_MC_FCMD_LOCK658,41027
#define 	AT91C_MC_FCMD_PROG_AND_LOCK AT91C_MC_FCMD_PROG_AND_LOCK659,41184
#define 	AT91C_MC_FCMD_UNLOCK AT91C_MC_FCMD_UNLOCK660,41342
#define 	AT91C_MC_FCMD_ERASE_ALL AT91C_MC_FCMD_ERASE_ALL661,41502
#define 	AT91C_MC_FCMD_SET_GP_NVM AT91C_MC_FCMD_SET_GP_NVM662,41668
#define 	AT91C_MC_FCMD_CLR_GP_NVM AT91C_MC_FCMD_CLR_GP_NVM663,41771
#define 	AT91C_MC_FCMD_SET_SECURITY AT91C_MC_FCMD_SET_SECURITY664,41876
#define AT91C_MC_PAGEN AT91C_MC_PAGEN665,41967
#define AT91C_MC_KEY AT91C_MC_KEY666,42046
#define AT91C_MC_SECURITY AT91C_MC_SECURITY668,42207
#define AT91C_MC_GPNVM0 AT91C_MC_GPNVM0669,42292
#define AT91C_MC_GPNVM1 AT91C_MC_GPNVM1670,42378
#define AT91C_MC_GPNVM2 AT91C_MC_GPNVM2671,42464
#define AT91C_MC_GPNVM3 AT91C_MC_GPNVM3672,42550
#define AT91C_MC_GPNVM4 AT91C_MC_GPNVM4673,42636
#define AT91C_MC_GPNVM5 AT91C_MC_GPNVM5674,42722
#define AT91C_MC_GPNVM6 AT91C_MC_GPNVM6675,42808
#define AT91C_MC_GPNVM7 AT91C_MC_GPNVM7676,42894
#define AT91C_MC_LOCKS0 AT91C_MC_LOCKS0677,42980
#define AT91C_MC_LOCKS1 AT91C_MC_LOCKS1678,43066
#define AT91C_MC_LOCKS2 AT91C_MC_LOCKS2679,43152
#define AT91C_MC_LOCKS3 AT91C_MC_LOCKS3680,43238
#define AT91C_MC_LOCKS4 AT91C_MC_LOCKS4681,43324
#define AT91C_MC_LOCKS5 AT91C_MC_LOCKS5682,43410
#define AT91C_MC_LOCKS6 AT91C_MC_LOCKS6683,43496
#define AT91C_MC_LOCKS7 AT91C_MC_LOCKS7684,43582
#define AT91C_MC_LOCKS8 AT91C_MC_LOCKS8685,43668
#define AT91C_MC_LOCKS9 AT91C_MC_LOCKS9686,43754
#define AT91C_MC_LOCKS10 AT91C_MC_LOCKS10687,43840
#define AT91C_MC_LOCKS11 AT91C_MC_LOCKS11688,43927
#define AT91C_MC_LOCKS12 AT91C_MC_LOCKS12689,44014
#define AT91C_MC_LOCKS13 AT91C_MC_LOCKS13690,44101
#define AT91C_MC_LOCKS14 AT91C_MC_LOCKS14691,44188
#define AT91C_MC_LOCKS15 AT91C_MC_LOCKS15692,44275
typedef struct _AT91S_SPI_AT91S_SPI697,44596
  AT91_REG SPI_CR;		// Control RegisterSPI_CR699,44624
  AT91_REG SPI_MR;		// Mode RegisterSPI_MR700,44664
  AT91_REG SPI_RDR;		// Receive Data RegisterSPI_RDR701,44701
  AT91_REG SPI_TDR;		// Transmit Data RegisterSPI_TDR702,44747
  AT91_REG SPI_SR;		// Status RegisterSPI_SR703,44794
  AT91_REG SPI_IER;		// Interrupt Enable RegisterSPI_IER704,44833
  AT91_REG SPI_IDR;		// Interrupt Disable RegisterSPI_IDR705,44883
  AT91_REG SPI_IMR;		// Interrupt Mask RegisterSPI_IMR706,44934
  AT91_REG Reserved0[4];	// Reserved0707,44982
  AT91_REG SPI_CSR[4];		// Chip Select RegisterSPI_CSR708,45011
  AT91_REG Reserved1[48];	// Reserved1709,45059
  AT91_REG SPI_RPR;		// Receive Pointer RegisterSPI_RPR710,45089
  AT91_REG SPI_RCR;		// Receive Counter RegisterSPI_RCR711,45138
  AT91_REG SPI_TPR;		// Transmit Pointer RegisterSPI_TPR712,45187
  AT91_REG SPI_TCR;		// Transmit Counter RegisterSPI_TCR713,45237
  AT91_REG SPI_RNPR;		// Receive Next Pointer RegisterSPI_RNPR714,45287
  AT91_REG SPI_RNCR;		// Receive Next Counter RegisterSPI_RNCR715,45342
  AT91_REG SPI_TNPR;		// Transmit Next Pointer RegisterSPI_TNPR716,45397
  AT91_REG SPI_TNCR;		// Transmit Next Counter RegisterSPI_TNCR717,45453
  AT91_REG SPI_PTCR;		// PDC Transfer Control RegisterSPI_PTCR718,45509
  AT91_REG SPI_PTSR;		// PDC Transfer Status RegisterSPI_PTSR719,45564
} AT91S_SPI, *AT91PS_SPI;AT91S_SPI720,45618
} AT91S_SPI, *AT91PS_SPI;AT91PS_SPI720,45618
#define AT91C_SPI_SPIEN AT91C_SPI_SPIEN723,45715
#define AT91C_SPI_SPIDIS AT91C_SPI_SPIDIS724,45792
#define AT91C_SPI_SWRST AT91C_SPI_SWRST725,45870
#define AT91C_SPI_LASTXFER AT91C_SPI_LASTXFER726,45955
#define AT91C_SPI_MSTR AT91C_SPI_MSTR728,46106
#define AT91C_SPI_PS AT91C_SPI_PS729,46190
#define 	AT91C_SPI_PS_FIXED AT91C_SPI_PS_FIXED730,46274
#define 	AT91C_SPI_PS_VARIABLE AT91C_SPI_PS_VARIABLE731,46377
#define AT91C_SPI_PCSDEC AT91C_SPI_PCSDEC732,46483
#define AT91C_SPI_FDIV AT91C_SPI_FDIV733,46568
#define AT91C_SPI_MODFDIS AT91C_SPI_MODFDIS734,46650
#define AT91C_SPI_LLB AT91C_SPI_LLB735,46737
#define AT91C_SPI_PCS AT91C_SPI_PCS736,46819
#define AT91C_SPI_DLYBCS AT91C_SPI_DLYBCS737,46908
#define AT91C_SPI_RD AT91C_SPI_RD739,47074
#define AT91C_SPI_RPCS AT91C_SPI_RPCS740,47156
#define AT91C_SPI_TD AT91C_SPI_TD742,47325
#define AT91C_SPI_TPCS AT91C_SPI_TPCS743,47408
#define AT91C_SPI_RDRF AT91C_SPI_RDRF745,47570
#define AT91C_SPI_TDRE AT91C_SPI_TDRE746,47663
#define AT91C_SPI_MODF AT91C_SPI_MODF747,47758
#define AT91C_SPI_OVRES AT91C_SPI_OVRES748,47841
#define AT91C_SPI_ENDRX AT91C_SPI_ENDRX749,47928
#define AT91C_SPI_ENDTX AT91C_SPI_ENDTX750,48019
#define AT91C_SPI_RXBUFF AT91C_SPI_RXBUFF751,48110
#define AT91C_SPI_TXBUFE AT91C_SPI_TXBUFE752,48193
#define AT91C_SPI_NSSR AT91C_SPI_NSSR753,48276
#define AT91C_SPI_TXEMPTY AT91C_SPI_TXEMPTY754,48357
#define AT91C_SPI_SPIENS AT91C_SPI_SPIENS755,48441
#define AT91C_SPI_CPOL AT91C_SPI_CPOL760,48823
#define AT91C_SPI_NCPHA AT91C_SPI_NCPHA761,48904
#define AT91C_SPI_CSAAT AT91C_SPI_CSAAT762,48982
#define AT91C_SPI_BITS AT91C_SPI_BITS763,49082
#define 	AT91C_SPI_BITS_8 AT91C_SPI_BITS_8764,49166
#define 	AT91C_SPI_BITS_9 AT91C_SPI_BITS_9765,49267
#define 	AT91C_SPI_BITS_10 AT91C_SPI_BITS_10766,49368
#define 	AT91C_SPI_BITS_11 AT91C_SPI_BITS_11767,49470
#define 	AT91C_SPI_BITS_12 AT91C_SPI_BITS_12768,49572
#define 	AT91C_SPI_BITS_13 AT91C_SPI_BITS_13769,49674
#define 	AT91C_SPI_BITS_14 AT91C_SPI_BITS_14770,49776
#define 	AT91C_SPI_BITS_15 AT91C_SPI_BITS_15771,49878
#define 	AT91C_SPI_BITS_16 AT91C_SPI_BITS_16772,49980
#define AT91C_SPI_SCBR AT91C_SPI_SCBR773,50082
#define AT91C_SPI_DLYBS AT91C_SPI_DLYBS774,50172
#define AT91C_SPI_DLYBCT AT91C_SPI_DLYBCT775,50257
typedef struct _AT91S_USART_AT91S_USART780,50574
  AT91_REG US_CR;		// Control RegisterUS_CR782,50604
  AT91_REG US_MR;		// Mode RegisterUS_MR783,50643
  AT91_REG US_IER;		// Interrupt Enable RegisterUS_IER784,50679
  AT91_REG US_IDR;		// Interrupt Disable RegisterUS_IDR785,50728
  AT91_REG US_IMR;		// Interrupt Mask RegisterUS_IMR786,50778
  AT91_REG US_CSR;		// Channel Status RegisterUS_CSR787,50825
  AT91_REG US_RHR;		// Receiver Holding RegisterUS_RHR788,50872
  AT91_REG US_THR;		// Transmitter Holding RegisterUS_THR789,50921
  AT91_REG US_BRGR;		// Baud Rate Generator RegisterUS_BRGR790,50973
  AT91_REG US_RTOR;		// Receiver Time-out RegisterUS_RTOR791,51026
  AT91_REG US_TTGR;		// Transmitter Time-guard RegisterUS_TTGR792,51077
  AT91_REG Reserved0[5];	// Reserved0793,51133
  AT91_REG US_FIDI;		// FI_DI_Ratio RegisterUS_FIDI794,51162
  AT91_REG US_NER;		// Nb Errors RegisterUS_NER795,51207
  AT91_REG Reserved1[1];	// Reserved1796,51249
  AT91_REG US_IF;		// IRDA_FILTER RegisterUS_IF797,51278
  AT91_REG Reserved2[44];	// Reserved2798,51321
  AT91_REG US_RPR;		// Receive Pointer RegisterUS_RPR799,51351
  AT91_REG US_RCR;		// Receive Counter RegisterUS_RCR800,51399
  AT91_REG US_TPR;		// Transmit Pointer RegisterUS_TPR801,51447
  AT91_REG US_TCR;		// Transmit Counter RegisterUS_TCR802,51496
  AT91_REG US_RNPR;		// Receive Next Pointer RegisterUS_RNPR803,51545
  AT91_REG US_RNCR;		// Receive Next Counter RegisterUS_RNCR804,51599
  AT91_REG US_TNPR;		// Transmit Next Pointer RegisterUS_TNPR805,51653
  AT91_REG US_TNCR;		// Transmit Next Counter RegisterUS_TNCR806,51708
  AT91_REG US_PTCR;		// PDC Transfer Control RegisterUS_PTCR807,51763
  AT91_REG US_PTSR;		// PDC Transfer Status RegisterUS_PTSR808,51817
} AT91S_USART, *AT91PS_USART;AT91S_USART809,51870
} AT91S_USART, *AT91PS_USART;AT91PS_USART809,51870
#define AT91C_US_STTBRK AT91C_US_STTBRK812,51979
#define AT91C_US_STPBRK AT91C_US_STPBRK813,52059
#define AT91C_US_STTTO AT91C_US_STTTO814,52138
#define AT91C_US_SENDA AT91C_US_SENDA815,52221
#define AT91C_US_RSTIT AT91C_US_RSTIT816,52302
#define AT91C_US_RSTNACK AT91C_US_RSTNACK817,52387
#define AT91C_US_RETTO AT91C_US_RETTO818,52477
#define AT91C_US_DTREN AT91C_US_DTREN819,52560
#define AT91C_US_DTRDIS AT91C_US_DTRDIS820,52655
#define AT91C_US_RTSEN AT91C_US_RTSEN821,52751
#define AT91C_US_RTSDIS AT91C_US_RTSDIS822,52842
#define AT91C_US_USMODE AT91C_US_USMODE824,53009
#define 	AT91C_US_USMODE_NORMAL AT91C_US_USMODE_NORMAL825,53088
#define 	AT91C_US_USMODE_RS485 AT91C_US_USMODE_RS485826,53173
#define 	AT91C_US_USMODE_HWHSH AT91C_US_USMODE_HWHSH827,53257
#define 	AT91C_US_USMODE_MODEM AT91C_US_USMODE_MODEM828,53356
#define 	AT91C_US_USMODE_ISO7816_0 AT91C_US_USMODE_ISO7816_0829,53440
#define 	AT91C_US_USMODE_ISO7816_1 AT91C_US_USMODE_ISO7816_1830,53542
#define 	AT91C_US_USMODE_IRDA AT91C_US_USMODE_IRDA831,53644
#define 	AT91C_US_USMODE_SWHSH AT91C_US_USMODE_SWHSH832,53727
#define AT91C_US_CLKS AT91C_US_CLKS833,53826
#define 	AT91C_US_CLKS_CLOCK AT91C_US_CLKS_CLOCK834,53943
#define 	AT91C_US_CLKS_FDIV1 AT91C_US_CLKS_FDIV1835,54031
#define 	AT91C_US_CLKS_SLOW AT91C_US_CLKS_SLOW836,54119
#define 	AT91C_US_CLKS_EXT AT91C_US_CLKS_EXT837,54218
#define AT91C_US_CHRL AT91C_US_CHRL838,54315
#define 	AT91C_US_CHRL_5_BITS AT91C_US_CHRL_5_BITS839,54432
#define 	AT91C_US_CHRL_6_BITS AT91C_US_CHRL_6_BITS840,54539
#define 	AT91C_US_CHRL_7_BITS AT91C_US_CHRL_7_BITS841,54646
#define 	AT91C_US_CHRL_8_BITS AT91C_US_CHRL_8_BITS842,54753
#define AT91C_US_SYNC AT91C_US_SYNC843,54860
#define AT91C_US_NBSTOP AT91C_US_NBSTOP844,54952
#define 	AT91C_US_NBSTOP_1_BIT AT91C_US_NBSTOP_1_BIT845,55040
#define 	AT91C_US_NBSTOP_15_BIT AT91C_US_NBSTOP_15_BIT846,55135
#define 	AT91C_US_NBSTOP_2_BIT AT91C_US_NBSTOP_2_BIT847,55286
#define AT91C_US_MSBF AT91C_US_MSBF848,55382
#define AT91C_US_MODE9 AT91C_US_MODE9849,55460
#define AT91C_US_CKLO AT91C_US_CKLO850,55551
#define AT91C_US_OVER AT91C_US_OVER851,55639
#define AT91C_US_INACK AT91C_US_INACK852,55726
#define AT91C_US_DSNACK AT91C_US_DSNACK853,55818
#define AT91C_US_MAX_ITER AT91C_US_MAX_ITER854,55910
#define AT91C_US_FILTER AT91C_US_FILTER855,56000
#define AT91C_US_RXBRK AT91C_US_RXBRK857,56176
#define AT91C_US_TIMEOUT AT91C_US_TIMEOUT858,56272
#define AT91C_US_ITERATION AT91C_US_ITERATION859,56358
#define AT91C_US_NACK AT91C_US_NACK860,56460
#define AT91C_US_RIIC AT91C_US_RIIC861,56544
#define AT91C_US_DSRIC AT91C_US_DSRIC862,56645
#define AT91C_US_DCDIC AT91C_US_DCDIC863,56746
#define AT91C_US_CTSIC AT91C_US_CTSIC864,56832
#define AT91C_US_RI AT91C_US_RI868,57195
#define AT91C_US_DSR AT91C_US_DSR869,57281
#define AT91C_US_DCD AT91C_US_DCD870,57368
#define AT91C_US_CTS AT91C_US_CTS871,57455
typedef struct _AT91S_SSC_AT91S_SSC876,57790
  AT91_REG SSC_CR;		// Control RegisterSSC_CR878,57818
  AT91_REG SSC_CMR;		// Clock Mode RegisterSSC_CMR879,57858
  AT91_REG Reserved0[2];	// Reserved0880,57902
  AT91_REG SSC_RCMR;		// Receive Clock ModeRegisterSSC_RCMR881,57931
  AT91_REG SSC_RFMR;		// Receive Frame Mode RegisterSSC_RFMR882,57983
  AT91_REG SSC_TCMR;		// Transmit Clock Mode RegisterSSC_TCMR883,58036
  AT91_REG SSC_TFMR;		// Transmit Frame Mode RegisterSSC_TFMR884,58090
  AT91_REG SSC_RHR;		// Receive Holding RegisterSSC_RHR885,58144
  AT91_REG SSC_THR;		// Transmit Holding RegisterSSC_THR886,58193
  AT91_REG Reserved1[2];	// Reserved1887,58243
  AT91_REG SSC_RSHR;		// Receive Sync Holding RegisterSSC_RSHR888,58272
  AT91_REG SSC_TSHR;		// Transmit Sync Holding RegisterSSC_TSHR889,58327
  AT91_REG Reserved2[2];	// Reserved2890,58383
  AT91_REG SSC_SR;		// Status RegisterSSC_SR891,58412
  AT91_REG SSC_IER;		// Interrupt Enable RegisterSSC_IER892,58451
  AT91_REG SSC_IDR;		// Interrupt Disable RegisterSSC_IDR893,58501
  AT91_REG SSC_IMR;		// Interrupt Mask RegisterSSC_IMR894,58552
  AT91_REG Reserved3[44];	// Reserved3895,58600
  AT91_REG SSC_RPR;		// Receive Pointer RegisterSSC_RPR896,58630
  AT91_REG SSC_RCR;		// Receive Counter RegisterSSC_RCR897,58679
  AT91_REG SSC_TPR;		// Transmit Pointer RegisterSSC_TPR898,58728
  AT91_REG SSC_TCR;		// Transmit Counter RegisterSSC_TCR899,58778
  AT91_REG SSC_RNPR;		// Receive Next Pointer RegisterSSC_RNPR900,58828
  AT91_REG SSC_RNCR;		// Receive Next Counter RegisterSSC_RNCR901,58883
  AT91_REG SSC_TNPR;		// Transmit Next Pointer RegisterSSC_TNPR902,58938
  AT91_REG SSC_TNCR;		// Transmit Next Counter RegisterSSC_TNCR903,58994
  AT91_REG SSC_PTCR;		// PDC Transfer Control RegisterSSC_PTCR904,59050
  AT91_REG SSC_PTSR;		// PDC Transfer Status RegisterSSC_PTSR905,59105
} AT91S_SSC, *AT91PS_SSC;AT91S_SSC906,59159
} AT91S_SSC, *AT91PS_SSC;AT91PS_SSC906,59159
#define AT91C_SSC_RXEN AT91C_SSC_RXEN909,59256
#define AT91C_SSC_RXDIS AT91C_SSC_RXDIS910,59337
#define AT91C_SSC_TXEN AT91C_SSC_TXEN911,59419
#define AT91C_SSC_TXDIS AT91C_SSC_TXDIS912,59501
#define AT91C_SSC_SWRST AT91C_SSC_SWRST913,59584
#define AT91C_SSC_CKS AT91C_SSC_CKS915,59749
#define 	AT91C_SSC_CKS_DIV AT91C_SSC_CKS_DIV916,59848
#define 	AT91C_SSC_CKS_TK AT91C_SSC_CKS_TK917,59936
#define 	AT91C_SSC_CKS_RK AT91C_SSC_CKS_RK918,60026
#define AT91C_SSC_CKO AT91C_SSC_CKO919,60107
#define 	AT91C_SSC_CKO_NONE AT91C_SSC_CKO_NONE920,60218
#define 	AT91C_SSC_CKO_CONTINOUS AT91C_SSC_CKO_CONTINOUS921,60358
#define 	AT91C_SSC_CKO_DATA_TX AT91C_SSC_CKO_DATA_TX922,60487
#define AT91C_SSC_CKI AT91C_SSC_CKI923,60632
#define AT91C_SSC_START AT91C_SSC_START924,60731
#define 	AT91C_SSC_START_CONTINOUS AT91C_SSC_START_CONTINOUS925,60830
#define 	AT91C_SSC_START_TX AT91C_SSC_START_TX926,61024
#define 	AT91C_SSC_START_LOW_RF AT91C_SSC_START_LOW_RF927,61129
#define 	AT91C_SSC_START_HIGH_RF AT91C_SSC_START_HIGH_RF928,61248
#define 	AT91C_SSC_START_FALL_RF AT91C_SSC_START_FALL_RF929,61368
#define 	AT91C_SSC_START_RISE_RF AT91C_SSC_START_RISE_RF930,61490
#define 	AT91C_SSC_START_LEVEL_RF AT91C_SSC_START_LEVEL_RF931,61611
#define 	AT91C_SSC_START_EDGE_RF AT91C_SSC_START_EDGE_RF932,61735
#define 	AT91C_SSC_START_0 AT91C_SSC_START_0933,61851
#define AT91C_SSC_STTDLY AT91C_SSC_STTDLY934,61943
#define AT91C_SSC_PERIOD AT91C_SSC_PERIOD935,62039
#define AT91C_SSC_DATLEN AT91C_SSC_DATLEN937,62232
#define AT91C_SSC_LOOP AT91C_SSC_LOOP938,62311
#define AT91C_SSC_MSBF AT91C_SSC_MSBF939,62387
#define AT91C_SSC_DATNB AT91C_SSC_DATNB940,62480
#define AT91C_SSC_FSLEN AT91C_SSC_FSLEN941,62568
#define AT91C_SSC_FSOS AT91C_SSC_FSOS942,62669
#define 	AT91C_SSC_FSOS_NONE AT91C_SSC_FSOS_NONE943,62780
#define 	AT91C_SSC_FSOS_NEGATIVE AT91C_SSC_FSOS_NEGATIVE944,62929
#define 	AT91C_SSC_FSOS_POSITIVE AT91C_SSC_FSOS_POSITIVE945,63070
#define 	AT91C_SSC_FSOS_LOW AT91C_SSC_FSOS_LOW946,63211
#define 	AT91C_SSC_FSOS_HIGH AT91C_SSC_FSOS_HIGH947,63369
#define 	AT91C_SSC_FSOS_TOGGLE AT91C_SSC_FSOS_TOGGLE948,63528
#define AT91C_SSC_FSEDGE AT91C_SSC_FSEDGE949,63694
#define AT91C_SSC_DATDEF AT91C_SSC_DATDEF952,63956
#define AT91C_SSC_FSDEN AT91C_SSC_FSDEN953,64041
#define AT91C_SSC_TXRDY AT91C_SSC_TXRDY955,64200
#define AT91C_SSC_TXEMPTY AT91C_SSC_TXEMPTY956,64281
#define AT91C_SSC_ENDTX AT91C_SSC_ENDTX957,64362
#define AT91C_SSC_TXBUFE AT91C_SSC_TXBUFE958,64448
#define AT91C_SSC_RXRDY AT91C_SSC_RXRDY959,64536
#define AT91C_SSC_OVRUN AT91C_SSC_OVRUN960,64616
#define AT91C_SSC_ENDRX AT91C_SSC_ENDRX961,64698
#define AT91C_SSC_RXBUFF AT91C_SSC_RXBUFF962,64781
#define AT91C_SSC_TXSYN AT91C_SSC_TXSYN963,64867
#define AT91C_SSC_RXSYN AT91C_SSC_RXSYN964,64947
#define AT91C_SSC_TXENA AT91C_SSC_TXENA965,65026
#define AT91C_SSC_RXENA AT91C_SSC_RXENA966,65108
typedef struct _AT91S_TWI_AT91S_TWI974,65658
  AT91_REG TWI_CR;		// Control RegisterTWI_CR976,65686
  AT91_REG TWI_MMR;		// Master Mode RegisterTWI_MMR977,65726
  AT91_REG Reserved0[1];	// Reserved0978,65771
  AT91_REG TWI_IADR;		// Internal Address RegisterTWI_IADR979,65800
  AT91_REG TWI_CWGR;		// Clock Waveform Generator RegisterTWI_CWGR980,65851
  AT91_REG Reserved1[3];	// Reserved1981,65910
  AT91_REG TWI_SR;		// Status RegisterTWI_SR982,65939
  AT91_REG TWI_IER;		// Interrupt Enable RegisterTWI_IER983,65978
  AT91_REG TWI_IDR;		// Interrupt Disable RegisterTWI_IDR984,66028
  AT91_REG TWI_IMR;		// Interrupt Mask RegisterTWI_IMR985,66079
  AT91_REG TWI_RHR;		// Receive Holding RegisterTWI_RHR986,66127
  AT91_REG TWI_THR;		// Transmit Holding RegisterTWI_THR987,66176
} AT91S_TWI, *AT91PS_TWI;AT91S_TWI988,66226
} AT91S_TWI, *AT91PS_TWI;AT91PS_TWI988,66226
#define AT91C_TWI_START AT91C_TWI_START991,66323
#define AT91C_TWI_STOP AT91C_TWI_STOP992,66412
#define AT91C_TWI_MSEN AT91C_TWI_MSEN993,66500
#define AT91C_TWI_MSDIS AT91C_TWI_MSDIS994,66594
#define AT91C_TWI_SWRST AT91C_TWI_SWRST995,66689
#define AT91C_TWI_IADRSZ AT91C_TWI_IADRSZ997,66845
#define 	AT91C_TWI_IADRSZ_NO AT91C_TWI_IADRSZ_NO998,66940
#define 	AT91C_TWI_IADRSZ_1_BYTE AT91C_TWI_IADRSZ_1_BYTE999,67050
#define 	AT91C_TWI_IADRSZ_2_BYTE AT91C_TWI_IADRSZ_2_BYTE1000,67166
#define 	AT91C_TWI_IADRSZ_3_BYTE AT91C_TWI_IADRSZ_3_BYTE1001,67282
#define AT91C_TWI_MREAD AT91C_TWI_MREAD1002,67400
#define AT91C_TWI_DADR AT91C_TWI_DADR1003,67488
#define AT91C_TWI_CLDIV AT91C_TWI_CLDIV1005,67660
#define AT91C_TWI_CHDIV AT91C_TWI_CHDIV1006,67745
#define AT91C_TWI_CKDIV AT91C_TWI_CKDIV1007,67831
#define AT91C_TWI_TXCOMP AT91C_TWI_TXCOMP1009,67981
#define AT91C_TWI_RXRDY AT91C_TWI_RXRDY1010,68070
#define AT91C_TWI_TXRDY AT91C_TWI_TXRDY1011,68167
#define AT91C_TWI_OVRE AT91C_TWI_OVRE1012,68265
#define AT91C_TWI_UNRE AT91C_TWI_UNRE1013,68345
#define AT91C_TWI_NACK AT91C_TWI_NACK1014,68426
typedef struct _AT91S_PWMC_CH_AT91S_PWMC_CH1022,68982
  AT91_REG PWMC_CMR;		// Channel Mode RegisterPWMC_CMR1024,69014
  AT91_REG PWMC_CDTYR;		// Channel Duty Cycle RegisterPWMC_CDTYR1025,69061
  AT91_REG PWMC_CPRDR;		// Channel Period RegisterPWMC_CPRDR1026,69116
  AT91_REG PWMC_CCNTR;		// Channel Counter RegisterPWMC_CCNTR1027,69167
  AT91_REG PWMC_CUPDR;		// Channel Update RegisterPWMC_CUPDR1028,69219
  AT91_REG PWMC_Reserved[3];	// ReservedPWMC_Reserved1029,69270
} AT91S_PWMC_CH, *AT91PS_PWMC_CH;AT91S_PWMC_CH1030,69311
} AT91S_PWMC_CH, *AT91PS_PWMC_CH;AT91PS_PWMC_CH1030,69311
#define AT91C_PWMC_CPRE AT91C_PWMC_CPRE1033,69428
#define 	AT91C_PWMC_CPRE_MCK AT91C_PWMC_CPRE_MCK1034,69529
#define 	AT91C_PWMC_CPRE_MCKA AT91C_PWMC_CPRE_MCKA1035,69609
#define 	AT91C_PWMC_CPRE_MCKB AT91C_PWMC_CPRE_MCKB1036,69689
#define AT91C_PWMC_CALG AT91C_PWMC_CALG1037,69769
#define AT91C_PWMC_CPOL AT91C_PWMC_CPOL1038,69857
#define AT91C_PWMC_CPD AT91C_PWMC_CPD1039,69944
#define AT91C_PWMC_CDTY AT91C_PWMC_CDTY1041,70126
#define AT91C_PWMC_CPRD AT91C_PWMC_CPRD1043,70301
#define AT91C_PWMC_CCNT AT91C_PWMC_CCNT1045,70473
#define AT91C_PWMC_CUPD AT91C_PWMC_CUPD1047,70646
typedef struct _AT91S_PWMC_AT91S_PWMC1052,70983
  AT91_REG PWMC_MR;		// PWMC Mode RegisterPWMC_MR1054,71012
  AT91_REG PWMC_ENA;		// PWMC Enable RegisterPWMC_ENA1055,71055
  AT91_REG PWMC_DIS;		// PWMC Disable RegisterPWMC_DIS1056,71101
  AT91_REG PWMC_SR;		// PWMC Status RegisterPWMC_SR1057,71148
  AT91_REG PWMC_IER;		// PWMC Interrupt Enable RegisterPWMC_IER1058,71193
  AT91_REG PWMC_IDR;		// PWMC Interrupt Disable RegisterPWMC_IDR1059,71249
  AT91_REG PWMC_IMR;		// PWMC Interrupt Mask RegisterPWMC_IMR1060,71306
  AT91_REG PWMC_ISR;		// PWMC Interrupt Status RegisterPWMC_ISR1061,71360
  AT91_REG Reserved0[55];	// Reserved01062,71416
  AT91_REG PWMC_VR;		// PWMC Version RegisterPWMC_VR1063,71446
  AT91_REG Reserved1[64];	// Reserved11064,71492
  AT91S_PWMC_CH PWMC_CH[4];	// PWMC ChannelPWMC_CH1065,71522
} AT91S_PWMC, *AT91PS_PWMC;AT91S_PWMC1066,71566
} AT91S_PWMC, *AT91PS_PWMC;AT91PS_PWMC1066,71566
#define AT91C_PWMC_DIVA AT91C_PWMC_DIVA1069,71665
#define AT91C_PWMC_PREA AT91C_PWMC_PREA1070,71753
#define 	AT91C_PWMC_PREA_MCK AT91C_PWMC_PREA_MCK1071,71852
#define AT91C_PWMC_DIVB AT91C_PWMC_DIVB1072,71935
#define AT91C_PWMC_PREB AT91C_PWMC_PREB1073,72023
#define 	AT91C_PWMC_PREB_MCK AT91C_PWMC_PREB_MCK1074,72122
#define AT91C_PWMC_CHID0 AT91C_PWMC_CHID01076,72278
#define AT91C_PWMC_CHID1 AT91C_PWMC_CHID11077,72358
#define AT91C_PWMC_CHID2 AT91C_PWMC_CHID21078,72438
#define AT91C_PWMC_CHID3 AT91C_PWMC_CHID31079,72518
typedef struct _AT91S_UDP_AT91S_UDP1090,73308
  AT91_REG UDP_NUM;		// Frame Number RegisterUDP_NUM1092,73336
  AT91_REG UDP_GLBSTATE;	// Global State RegisterUDP_GLBSTATE1093,73382
  AT91_REG UDP_FADDR;		// Function Address RegisterUDP_FADDR1094,73432
  AT91_REG Reserved0[1];	// Reserved01095,73484
  AT91_REG UDP_IER;		// Interrupt Enable RegisterUDP_IER1096,73513
  AT91_REG UDP_IDR;		// Interrupt Disable RegisterUDP_IDR1097,73563
  AT91_REG UDP_IMR;		// Interrupt Mask RegisterUDP_IMR1098,73614
  AT91_REG UDP_ISR;		// Interrupt Status RegisterUDP_ISR1099,73662
  AT91_REG UDP_ICR;		// Interrupt Clear RegisterUDP_ICR1100,73712
  AT91_REG Reserved1[1];	// Reserved11101,73761
  AT91_REG UDP_RSTEP;		// Reset Endpoint RegisterUDP_RSTEP1102,73790
  AT91_REG Reserved2[1];	// Reserved21103,73840
  AT91_REG UDP_CSR[6];		// Endpoint Control and Status RegisterUDP_CSR1104,73869
  AT91_REG Reserved3[2];	// Reserved31105,73933
  AT91_REG UDP_FDR[6];		// Endpoint FIFO Data RegisterUDP_FDR1106,73962
  AT91_REG Reserved4[3];	// Reserved41107,74017
  AT91_REG UDP_TXVC;		// Transceiver Control RegisterUDP_TXVC1108,74046
} AT91S_UDP, *AT91PS_UDP;AT91S_UDP1109,74100
} AT91S_UDP, *AT91PS_UDP;AT91PS_UDP1109,74100
#define AT91C_UDP_FRM_NUM AT91C_UDP_FRM_NUM1112,74207
#define AT91C_UDP_FRM_ERR AT91C_UDP_FRM_ERR1113,74327
#define AT91C_UDP_FRM_OK AT91C_UDP_FRM_OK1114,74405
#define AT91C_UDP_FADDEN AT91C_UDP_FADDEN1116,74562
#define AT91C_UDP_CONFG AT91C_UDP_CONFG1117,74652
#define AT91C_UDP_ESR AT91C_UDP_ESR1118,74729
#define AT91C_UDP_RSMINPR AT91C_UDP_RSMINPR1119,74814
#define AT91C_UDP_RMWUPE AT91C_UDP_RMWUPE1120,74915
#define AT91C_UDP_FADD AT91C_UDP_FADD1122,75085
#define AT91C_UDP_FEN AT91C_UDP_FEN1123,75175
#define AT91C_UDP_EPINT0 AT91C_UDP_EPINT01125,75338
#define AT91C_UDP_EPINT1 AT91C_UDP_EPINT11126,75425
#define AT91C_UDP_EPINT2 AT91C_UDP_EPINT21127,75512
#define AT91C_UDP_EPINT3 AT91C_UDP_EPINT31128,75599
#define AT91C_UDP_EPINT4 AT91C_UDP_EPINT41129,75686
#define AT91C_UDP_EPINT5 AT91C_UDP_EPINT51130,75773
#define AT91C_UDP_RXSUSP AT91C_UDP_RXSUSP1131,75860
#define AT91C_UDP_RXRSM AT91C_UDP_RXRSM1132,75948
#define AT91C_UDP_EXTRSM AT91C_UDP_EXTRSM1133,76035
#define AT91C_UDP_SOFINT AT91C_UDP_SOFINT1134,76131
#define AT91C_UDP_WAKEUP AT91C_UDP_WAKEUP1135,76226
#define AT91C_UDP_ENDBUSRES AT91C_UDP_ENDBUSRES1139,76555
#define AT91C_UDP_EP0 AT91C_UDP_EP01142,76814
#define AT91C_UDP_EP1 AT91C_UDP_EP11143,76897
#define AT91C_UDP_EP2 AT91C_UDP_EP21144,76980
#define AT91C_UDP_EP3 AT91C_UDP_EP31145,77063
#define AT91C_UDP_EP4 AT91C_UDP_EP41146,77146
#define AT91C_UDP_EP5 AT91C_UDP_EP51147,77229
#define AT91C_UDP_TXCOMP AT91C_UDP_TXCOMP1149,77404
#define AT91C_UDP_RX_DATA_BK0 AT91C_UDP_RX_DATA_BK01150,77533
#define AT91C_UDP_RXSETUP AT91C_UDP_RXSETUP1151,77619
#define AT91C_UDP_ISOERROR AT91C_UDP_ISOERROR1152,77729
#define AT91C_UDP_TXPKTRDY AT91C_UDP_TXPKTRDY1153,77837
#define AT91C_UDP_FORCESTALL AT91C_UDP_FORCESTALL1154,77925
#define AT91C_UDP_RX_DATA_BK1 AT91C_UDP_RX_DATA_BK11155,78054
#define AT91C_UDP_DIR AT91C_UDP_DIR1156,78192
#define AT91C_UDP_EPTYPE AT91C_UDP_EPTYPE1157,78277
#define 	AT91C_UDP_EPTYPE_CTRL AT91C_UDP_EPTYPE_CTRL1158,78357
#define 	AT91C_UDP_EPTYPE_ISO_OUT AT91C_UDP_EPTYPE_ISO_OUT1159,78448
#define 	AT91C_UDP_EPTYPE_BULK_OUT AT91C_UDP_EPTYPE_BULK_OUT1160,78547
#define 	AT91C_UDP_EPTYPE_INT_OUT AT91C_UDP_EPTYPE_INT_OUT1161,78639
#define 	AT91C_UDP_EPTYPE_ISO_IN AT91C_UDP_EPTYPE_ISO_IN1162,78736
#define 	AT91C_UDP_EPTYPE_BULK_IN AT91C_UDP_EPTYPE_BULK_IN1163,78834
#define 	AT91C_UDP_EPTYPE_INT_IN AT91C_UDP_EPTYPE_INT_IN1164,78925
#define AT91C_UDP_DTGLE AT91C_UDP_DTGLE1165,79021
#define AT91C_UDP_EPEDS AT91C_UDP_EPEDS1166,79099
#define AT91C_UDP_RXBYTECNT AT91C_UDP_RXBYTECNT1167,79189
#define AT91C_UDP_TXVDIS AT91C_UDP_TXVDIS1169,79376
#define AT91C_UDP_PUON AT91C_UDP_PUON1170,79442
typedef struct _AT91S_TC_AT91S_TC1175,79759
  AT91_REG TC_CCR;		// Channel Control RegisterTC_CCR1177,79786
  AT91_REG TC_CMR;		// Channel Mode Register (Capture Mode / Waveform Mode)TC_CMR1178,79834
  AT91_REG Reserved0[2];	// Reserved01179,79910
  AT91_REG TC_CV;		// Counter ValueTC_CV1180,79939
  AT91_REG TC_RA;		// Register ATC_RA1181,79975
  AT91_REG TC_RB;		// Register BTC_RB1182,80008
  AT91_REG TC_RC;		// Register CTC_RC1183,80041
  AT91_REG TC_SR;		// Status RegisterTC_SR1184,80074
  AT91_REG TC_IER;		// Interrupt Enable RegisterTC_IER1185,80112
  AT91_REG TC_IDR;		// Interrupt Disable RegisterTC_IDR1186,80161
  AT91_REG TC_IMR;		// Interrupt Mask RegisterTC_IMR1187,80211
} AT91S_TC, *AT91PS_TC;AT91S_TC1188,80258
} AT91S_TC, *AT91PS_TC;AT91PS_TC1188,80258
#define AT91C_TC_CLKEN AT91C_TC_CLKEN1191,80359
#define AT91C_TC_CLKDIS AT91C_TC_CLKDIS1192,80453
#define AT91C_TC_SWTRG AT91C_TC_SWTRG1193,80548
#define AT91C_TC_CLKS AT91C_TC_CLKS1195,80741
#define 	AT91C_TC_CLKS_TIMER_DIV1_CLOCK AT91C_TC_CLKS_TIMER_DIV1_CLOCK1196,80822
#define 	AT91C_TC_CLKS_TIMER_DIV2_CLOCK AT91C_TC_CLKS_TIMER_DIV2_CLOCK1197,80928
#define 	AT91C_TC_CLKS_TIMER_DIV3_CLOCK AT91C_TC_CLKS_TIMER_DIV3_CLOCK1198,81034
#define 	AT91C_TC_CLKS_TIMER_DIV4_CLOCK AT91C_TC_CLKS_TIMER_DIV4_CLOCK1199,81140
#define 	AT91C_TC_CLKS_TIMER_DIV5_CLOCK AT91C_TC_CLKS_TIMER_DIV5_CLOCK1200,81246
#define 	AT91C_TC_CLKS_XC0 AT91C_TC_CLKS_XC01201,81352
#define 	AT91C_TC_CLKS_XC1 AT91C_TC_CLKS_XC11202,81445
#define 	AT91C_TC_CLKS_XC2 AT91C_TC_CLKS_XC21203,81538
#define AT91C_TC_CLKI AT91C_TC_CLKI1204,81631
#define AT91C_TC_BURST AT91C_TC_BURST1205,81709
#define 	AT91C_TC_BURST_NONE AT91C_TC_BURST_NONE1206,81797
#define 	AT91C_TC_BURST_XC0 AT91C_TC_BURST_XC01207,81922
#define 	AT91C_TC_BURST_XC1 AT91C_TC_BURST_XC11208,82039
#define 	AT91C_TC_BURST_XC2 AT91C_TC_BURST_XC21209,82156
#define AT91C_TC_CPCSTOP AT91C_TC_CPCSTOP1210,82273
#define AT91C_TC_LDBSTOP AT91C_TC_LDBSTOP1211,82376
#define AT91C_TC_CPCDIS AT91C_TC_CPCDIS1212,82479
#define AT91C_TC_LDBDIS AT91C_TC_LDBDIS1213,82582
#define AT91C_TC_ETRGEDG AT91C_TC_ETRGEDG1214,82686
#define 	AT91C_TC_ETRGEDG_NONE AT91C_TC_ETRGEDG_NONE1215,82783
#define 	AT91C_TC_ETRGEDG_RISING AT91C_TC_ETRGEDG_RISING1216,82876
#define 	AT91C_TC_ETRGEDG_FALLING AT91C_TC_ETRGEDG_FALLING1217,82976
#define 	AT91C_TC_ETRGEDG_BOTH AT91C_TC_ETRGEDG_BOTH1218,83077
#define AT91C_TC_EEVTEDG AT91C_TC_EEVTEDG1219,83175
#define 	AT91C_TC_EEVTEDG_NONE AT91C_TC_EEVTEDG_NONE1220,83270
#define 	AT91C_TC_EEVTEDG_RISING AT91C_TC_EEVTEDG_RISING1221,83363
#define 	AT91C_TC_EEVTEDG_FALLING AT91C_TC_EEVTEDG_FALLING1222,83463
#define 	AT91C_TC_EEVTEDG_BOTH AT91C_TC_EEVTEDG_BOTH1223,83564
#define AT91C_TC_EEVT AT91C_TC_EEVT1224,83662
#define 	AT91C_TC_EEVT_TIOB AT91C_TC_EEVT_TIOB1225,83753
#define 	AT91C_TC_EEVT_XC0 AT91C_TC_EEVT_XC01226,83894
#define 	AT91C_TC_EEVT_XC1 AT91C_TC_EEVT_XC11227,84035
#define 	AT91C_TC_EEVT_XC2 AT91C_TC_EEVT_XC21228,84176
#define AT91C_TC_ABETRG AT91C_TC_ABETRG1229,84317
#define AT91C_TC_ENETRG AT91C_TC_ENETRG1230,84422
#define AT91C_TC_WAVESEL AT91C_TC_WAVESEL1231,84517
#define 	AT91C_TC_WAVESEL_UP AT91C_TC_WAVESEL_UP1232,84602
#define 	AT91C_TC_WAVESEL_UPDOWN AT91C_TC_WAVESEL_UPDOWN1233,84731
#define 	AT91C_TC_WAVESEL_UP_AUTO AT91C_TC_WAVESEL_UP_AUTO1234,84865
#define 	AT91C_TC_WAVESEL_UPDOWN_AUTO AT91C_TC_WAVESEL_UPDOWN_AUTO1235,84992
#define AT91C_TC_CPCTRG AT91C_TC_CPCTRG1236,85123
#define AT91C_TC_WAVE AT91C_TC_WAVE1237,85214
#define AT91C_TC_ACPA AT91C_TC_ACPA1238,85279
#define 	AT91C_TC_ACPA_NONE AT91C_TC_ACPA_NONE1239,85370
#define 	AT91C_TC_ACPA_SET AT91C_TC_ACPA_SET1240,85462
#define 	AT91C_TC_ACPA_CLEAR AT91C_TC_ACPA_CLEAR1241,85553
#define 	AT91C_TC_ACPA_TOGGLE AT91C_TC_ACPA_TOGGLE1242,85646
#define AT91C_TC_LDRA AT91C_TC_LDRA1243,85740
#define 	AT91C_TC_LDRA_NONE AT91C_TC_LDRA_NONE1244,85826
#define 	AT91C_TC_LDRA_RISING AT91C_TC_LDRA_RISING1245,85916
#define 	AT91C_TC_LDRA_FALLING AT91C_TC_LDRA_FALLING1246,86021
#define 	AT91C_TC_LDRA_BOTH AT91C_TC_LDRA_BOTH1247,86127
#define AT91C_TC_ACPC AT91C_TC_ACPC1248,86230
#define 	AT91C_TC_ACPC_NONE AT91C_TC_ACPC_NONE1249,86321
#define 	AT91C_TC_ACPC_SET AT91C_TC_ACPC_SET1250,86413
#define 	AT91C_TC_ACPC_CLEAR AT91C_TC_ACPC_CLEAR1251,86504
#define 	AT91C_TC_ACPC_TOGGLE AT91C_TC_ACPC_TOGGLE1252,86597
#define AT91C_TC_LDRB AT91C_TC_LDRB1253,86691
#define 	AT91C_TC_LDRB_NONE AT91C_TC_LDRB_NONE1254,86777
#define 	AT91C_TC_LDRB_RISING AT91C_TC_LDRB_RISING1255,86867
#define 	AT91C_TC_LDRB_FALLING AT91C_TC_LDRB_FALLING1256,86972
#define 	AT91C_TC_LDRB_BOTH AT91C_TC_LDRB_BOTH1257,87078
#define AT91C_TC_AEEVT AT91C_TC_AEEVT1258,87181
#define 	AT91C_TC_AEEVT_NONE AT91C_TC_AEEVT_NONE1259,87276
#define 	AT91C_TC_AEEVT_SET AT91C_TC_AEEVT_SET1260,87369
#define 	AT91C_TC_AEEVT_CLEAR AT91C_TC_AEEVT_CLEAR1261,87461
#define 	AT91C_TC_AEEVT_TOGGLE AT91C_TC_AEEVT_TOGGLE1262,87555
#define AT91C_TC_ASWTRG AT91C_TC_ASWTRG1263,87650
#define 	AT91C_TC_ASWTRG_NONE AT91C_TC_ASWTRG_NONE1264,87747
#define 	AT91C_TC_ASWTRG_SET AT91C_TC_ASWTRG_SET1265,87841
#define 	AT91C_TC_ASWTRG_CLEAR AT91C_TC_ASWTRG_CLEAR1266,87934
#define 	AT91C_TC_ASWTRG_TOGGLE AT91C_TC_ASWTRG_TOGGLE1267,88029
#define AT91C_TC_BCPB AT91C_TC_BCPB1268,88125
#define 	AT91C_TC_BCPB_NONE AT91C_TC_BCPB_NONE1269,88216
#define 	AT91C_TC_BCPB_SET AT91C_TC_BCPB_SET1270,88308
#define 	AT91C_TC_BCPB_CLEAR AT91C_TC_BCPB_CLEAR1271,88399
#define 	AT91C_TC_BCPB_TOGGLE AT91C_TC_BCPB_TOGGLE1272,88492
#define AT91C_TC_BCPC AT91C_TC_BCPC1273,88586
#define 	AT91C_TC_BCPC_NONE AT91C_TC_BCPC_NONE1274,88677
#define 	AT91C_TC_BCPC_SET AT91C_TC_BCPC_SET1275,88769
#define 	AT91C_TC_BCPC_CLEAR AT91C_TC_BCPC_CLEAR1276,88860
#define 	AT91C_TC_BCPC_TOGGLE AT91C_TC_BCPC_TOGGLE1277,88953
#define AT91C_TC_BEEVT AT91C_TC_BEEVT1278,89047
#define 	AT91C_TC_BEEVT_NONE AT91C_TC_BEEVT_NONE1279,89142
#define 	AT91C_TC_BEEVT_SET AT91C_TC_BEEVT_SET1280,89235
#define 	AT91C_TC_BEEVT_CLEAR AT91C_TC_BEEVT_CLEAR1281,89327
#define 	AT91C_TC_BEEVT_TOGGLE AT91C_TC_BEEVT_TOGGLE1282,89421
#define AT91C_TC_BSWTRG AT91C_TC_BSWTRG1283,89516
#define 	AT91C_TC_BSWTRG_NONE AT91C_TC_BSWTRG_NONE1284,89613
#define 	AT91C_TC_BSWTRG_SET AT91C_TC_BSWTRG_SET1285,89707
#define 	AT91C_TC_BSWTRG_CLEAR AT91C_TC_BSWTRG_CLEAR1286,89800
#define 	AT91C_TC_BSWTRG_TOGGLE AT91C_TC_BSWTRG_TOGGLE1287,89895
#define AT91C_TC_COVFS AT91C_TC_COVFS1289,90066
#define AT91C_TC_LOVRS AT91C_TC_LOVRS1290,90148
#define AT91C_TC_CPAS AT91C_TC_CPAS1291,90226
#define AT91C_TC_CPBS AT91C_TC_CPBS1292,90302
#define AT91C_TC_CPCS AT91C_TC_CPCS1293,90378
#define AT91C_TC_LDRAS AT91C_TC_LDRAS1294,90454
#define AT91C_TC_LDRBS AT91C_TC_LDRBS1295,90530
#define AT91C_TC_ETRGS AT91C_TC_ETRGS1296,90606
#define AT91C_TC_CLKSTA AT91C_TC_CLKSTA1297,90688
#define AT91C_TC_MTIOA AT91C_TC_MTIOA1298,90768
#define AT91C_TC_MTIOB AT91C_TC_MTIOB1299,90845
typedef struct _AT91S_TCB_AT91S_TCB1307,91411
  AT91S_TC TCB_TC0;		// TC Channel 0TCB_TC01309,91439
  AT91_REG Reserved0[4];	// Reserved01310,91476
  AT91S_TC TCB_TC1;		// TC Channel 1TCB_TC11311,91505
  AT91_REG Reserved1[4];	// Reserved11312,91542
  AT91S_TC TCB_TC2;		// TC Channel 2TCB_TC21313,91571
  AT91_REG Reserved2[4];	// Reserved21314,91608
  AT91_REG TCB_BCR;		// TC Block Control RegisterTCB_BCR1315,91637
  AT91_REG TCB_BMR;		// TC Block Mode RegisterTCB_BMR1316,91687
} AT91S_TCB, *AT91PS_TCB;AT91S_TCB1317,91734
} AT91S_TCB, *AT91PS_TCB;AT91PS_TCB1317,91734
#define AT91C_TCB_SYNC AT91C_TCB_SYNC1320,91838
#define AT91C_TCB_TC0XC0S AT91C_TCB_TC0XC0S1322,91994
#define 	AT91C_TCB_TC0XC0S_TCLK0 AT91C_TCB_TC0XC0S_TCLK01323,92094
#define 	AT91C_TCB_TC0XC0S_NONE AT91C_TCB_TC0XC0S_NONE1324,92195
#define 	AT91C_TCB_TC0XC0S_TIOA1 AT91C_TCB_TC0XC0S_TIOA11325,92302
#define 	AT91C_TCB_TC0XC0S_TIOA2 AT91C_TCB_TC0XC0S_TIOA21326,92403
#define AT91C_TCB_TC1XC1S AT91C_TCB_TC1XC1S1327,92504
#define 	AT91C_TCB_TC1XC1S_TCLK1 AT91C_TCB_TC1XC1S_TCLK11328,92604
#define 	AT91C_TCB_TC1XC1S_NONE AT91C_TCB_TC1XC1S_NONE1329,92711
#define 	AT91C_TCB_TC1XC1S_TIOA0 AT91C_TCB_TC1XC1S_TIOA01330,92824
#define 	AT91C_TCB_TC1XC1S_TIOA2 AT91C_TCB_TC1XC1S_TIOA21331,92931
#define AT91C_TCB_TC2XC2S AT91C_TCB_TC2XC2S1332,93038
#define 	AT91C_TCB_TC2XC2S_TCLK2 AT91C_TCB_TC2XC2S_TCLK21333,93138
#define 	AT91C_TCB_TC2XC2S_NONE AT91C_TCB_TC2XC2S_NONE1334,93245
#define 	AT91C_TCB_TC2XC2S_TIOA0 AT91C_TCB_TC2XC2S_TIOA01335,93358
#define 	AT91C_TCB_TC2XC2S_TIOA1 AT91C_TCB_TC2XC2S_TIOA11336,93465
typedef struct _AT91S_CAN_MB_AT91S_CAN_MB1341,93819
  AT91_REG CAN_MB_MMR;		// MailBox Mode RegisterCAN_MB_MMR1343,93850
  AT91_REG CAN_MB_MAM;		// MailBox Acceptance Mask RegisterCAN_MB_MAM1344,93899
  AT91_REG CAN_MB_MID;		// MailBox ID RegisterCAN_MB_MID1345,93959
  AT91_REG CAN_MB_MFID;		// MailBox Family ID RegisterCAN_MB_MFID1346,94006
  AT91_REG CAN_MB_MSR;		// MailBox Status RegisterCAN_MB_MSR1347,94061
  AT91_REG CAN_MB_MDL;		// MailBox Data Low RegisterCAN_MB_MDL1348,94112
  AT91_REG CAN_MB_MDH;		// MailBox Data High RegisterCAN_MB_MDH1349,94165
  AT91_REG CAN_MB_MCR;		// MailBox Control RegisterCAN_MB_MCR1350,94219
} AT91S_CAN_MB, *AT91PS_CAN_MB;AT91S_CAN_MB1351,94271
} AT91S_CAN_MB, *AT91PS_CAN_MB;AT91PS_CAN_MB1351,94271
#define AT91C_CAN_MTIMEMARK AT91C_CAN_MTIMEMARK1354,94383
#define AT91C_CAN_PRIOR AT91C_CAN_PRIOR1355,94472
#define AT91C_CAN_MOT AT91C_CAN_MOT1356,94558
#define 	AT91C_CAN_MOT_DIS AT91C_CAN_MOT_DIS1357,94647
#define 	AT91C_CAN_MOT_RX AT91C_CAN_MOT_RX1358,94730
#define 	AT91C_CAN_MOT_RXOVERWRITE AT91C_CAN_MOT_RXOVERWRITE1359,94813
#define 	AT91C_CAN_MOT_TX AT91C_CAN_MOT_TX1360,94896
#define 	AT91C_CAN_MOT_CONSUMER AT91C_CAN_MOT_CONSUMER1361,94979
#define 	AT91C_CAN_MOT_PRODUCER AT91C_CAN_MOT_PRODUCER1362,95062
#define AT91C_CAN_MIDvB AT91C_CAN_MIDvB1364,95235
#define AT91C_CAN_MIDvA AT91C_CAN_MIDvA1365,95359
#define AT91C_CAN_MIDE AT91C_CAN_MIDE1366,95465
#define AT91C_CAN_MTIMESTAMP AT91C_CAN_MTIMESTAMP1370,95797
#define AT91C_CAN_MDLC AT91C_CAN_MDLC1371,95881
#define AT91C_CAN_MRTR AT91C_CAN_MRTR1372,95975
#define AT91C_CAN_MABT AT91C_CAN_MABT1373,96080
#define AT91C_CAN_MRDY AT91C_CAN_MRDY1374,96171
#define AT91C_CAN_MMI AT91C_CAN_MMI1375,96254
#define AT91C_CAN_MACR AT91C_CAN_MACR1379,96599
#define AT91C_CAN_MTCR AT91C_CAN_MTCR1380,96694
typedef struct _AT91S_CAN_AT91S_CAN1385,97027
  AT91_REG CAN_MR;		// Mode RegisterCAN_MR1387,97055
  AT91_REG CAN_IER;		// Interrupt Enable RegisterCAN_IER1388,97092
  AT91_REG CAN_IDR;		// Interrupt Disable RegisterCAN_IDR1389,97142
  AT91_REG CAN_IMR;		// Interrupt Mask RegisterCAN_IMR1390,97193
  AT91_REG CAN_SR;		// Status RegisterCAN_SR1391,97241
  AT91_REG CAN_BR;		// Baudrate RegisterCAN_BR1392,97280
  AT91_REG CAN_TIM;		// Timer RegisterCAN_TIM1393,97321
  AT91_REG CAN_TIMESTP;		// Time Stamp RegisterCAN_TIMESTP1394,97360
  AT91_REG CAN_ECR;		// Error Counter RegisterCAN_ECR1395,97408
  AT91_REG CAN_TCR;		// Transfer Command RegisterCAN_TCR1396,97455
  AT91_REG CAN_ACR;		// Abort Command RegisterCAN_ACR1397,97505
  AT91_REG Reserved0[52];	// Reserved01398,97552
  AT91_REG CAN_VR;		// Version RegisterCAN_VR1399,97582
  AT91_REG Reserved1[64];	// Reserved11400,97622
  AT91S_CAN_MB CAN_MB0;		// CAN Mailbox 0CAN_MB01401,97652
  AT91S_CAN_MB CAN_MB1;		// CAN Mailbox 1CAN_MB11402,97694
  AT91S_CAN_MB CAN_MB2;		// CAN Mailbox 2CAN_MB21403,97736
  AT91S_CAN_MB CAN_MB3;		// CAN Mailbox 3CAN_MB31404,97778
  AT91S_CAN_MB CAN_MB4;		// CAN Mailbox 4CAN_MB41405,97820
  AT91S_CAN_MB CAN_MB5;		// CAN Mailbox 5CAN_MB51406,97862
  AT91S_CAN_MB CAN_MB6;		// CAN Mailbox 6CAN_MB61407,97904
  AT91S_CAN_MB CAN_MB7;		// CAN Mailbox 7CAN_MB71408,97946
  AT91S_CAN_MB CAN_MB8;		// CAN Mailbox 8CAN_MB81409,97988
  AT91S_CAN_MB CAN_MB9;		// CAN Mailbox 9CAN_MB91410,98030
  AT91S_CAN_MB CAN_MB10;	// CAN Mailbox 10CAN_MB101411,98072
  AT91S_CAN_MB CAN_MB11;	// CAN Mailbox 11CAN_MB111412,98115
  AT91S_CAN_MB CAN_MB12;	// CAN Mailbox 12CAN_MB121413,98158
  AT91S_CAN_MB CAN_MB13;	// CAN Mailbox 13CAN_MB131414,98201
  AT91S_CAN_MB CAN_MB14;	// CAN Mailbox 14CAN_MB141415,98244
  AT91S_CAN_MB CAN_MB15;	// CAN Mailbox 15CAN_MB151416,98287
} AT91S_CAN, *AT91PS_CAN;AT91S_CAN1417,98330
} AT91S_CAN, *AT91PS_CAN;AT91PS_CAN1417,98330
#define AT91C_CAN_CANEN AT91C_CAN_CANEN1420,98424
#define AT91C_CAN_LPM AT91C_CAN_LPM1421,98512
#define AT91C_CAN_ABM AT91C_CAN_ABM1422,98608
#define AT91C_CAN_OVL AT91C_CAN_OVL1423,98710
#define AT91C_CAN_TEOF AT91C_CAN_TEOF1424,98806
#define AT91C_CAN_TTM AT91C_CAN_TTM1425,98913
#define AT91C_CAN_TIMFRZ AT91C_CAN_TIMFRZ1426,99012
#define AT91C_CAN_DRPT AT91C_CAN_DRPT1427,99098
#define AT91C_CAN_MB0 AT91C_CAN_MB01429,99259
#define AT91C_CAN_MB1 AT91C_CAN_MB11430,99340
#define AT91C_CAN_MB2 AT91C_CAN_MB21431,99421
#define AT91C_CAN_MB3 AT91C_CAN_MB31432,99502
#define AT91C_CAN_MB4 AT91C_CAN_MB41433,99583
#define AT91C_CAN_MB5 AT91C_CAN_MB51434,99664
#define AT91C_CAN_MB6 AT91C_CAN_MB61435,99745
#define AT91C_CAN_MB7 AT91C_CAN_MB71436,99826
#define AT91C_CAN_MB8 AT91C_CAN_MB81437,99907
#define AT91C_CAN_MB9 AT91C_CAN_MB91438,99988
#define AT91C_CAN_MB10 AT91C_CAN_MB101439,100069
#define AT91C_CAN_MB11 AT91C_CAN_MB111440,100151
#define AT91C_CAN_MB12 AT91C_CAN_MB121441,100233
#define AT91C_CAN_MB13 AT91C_CAN_MB131442,100315
#define AT91C_CAN_MB14 AT91C_CAN_MB141443,100397
#define AT91C_CAN_MB15 AT91C_CAN_MB151444,100479
#define AT91C_CAN_ERRA AT91C_CAN_ERRA1445,100561
#define AT91C_CAN_WARN AT91C_CAN_WARN1446,100650
#define AT91C_CAN_ERRP AT91C_CAN_ERRP1447,100735
#define AT91C_CAN_BOFF AT91C_CAN_BOFF1448,100825
#define AT91C_CAN_SLEEP AT91C_CAN_SLEEP1449,100909
#define AT91C_CAN_WAKEUP AT91C_CAN_WAKEUP1450,100986
#define AT91C_CAN_TOVF AT91C_CAN_TOVF1451,101064
#define AT91C_CAN_TSTP AT91C_CAN_TSTP1452,101150
#define AT91C_CAN_CERR AT91C_CAN_CERR1453,101231
#define AT91C_CAN_SERR AT91C_CAN_SERR1454,101307
#define AT91C_CAN_AERR AT91C_CAN_AERR1455,101388
#define AT91C_CAN_FERR AT91C_CAN_FERR1456,101475
#define AT91C_CAN_BERR AT91C_CAN_BERR1457,101552
#define AT91C_CAN_RBSY AT91C_CAN_RBSY1461,101857
#define AT91C_CAN_TBSY AT91C_CAN_TBSY1462,101937
#define AT91C_CAN_OVLY AT91C_CAN_OVLY1463,102020
#define AT91C_CAN_PHASE2 AT91C_CAN_PHASE21465,102172
#define AT91C_CAN_PHASE1 AT91C_CAN_PHASE11466,102254
#define AT91C_CAN_PROPAG AT91C_CAN_PROPAG1467,102336
#define AT91C_CAN_SYNC AT91C_CAN_SYNC1468,102429
#define AT91C_CAN_BRP AT91C_CAN_BRP1469,102533
#define AT91C_CAN_SMP AT91C_CAN_SMP1470,102619
#define AT91C_CAN_TIMER AT91C_CAN_TIMER1472,102769
#define AT91C_CAN_REC AT91C_CAN_REC1475,103006
#define AT91C_CAN_TEC AT91C_CAN_TEC1476,103095
#define AT91C_CAN_TIMRST AT91C_CAN_TIMRST1478,103266
typedef struct _AT91S_EMAC_AT91S_EMAC1484,103656
  AT91_REG EMAC_NCR;		// Network Control RegisterEMAC_NCR1486,103685
  AT91_REG EMAC_NCFGR;		// Network Configuration RegisterEMAC_NCFGR1487,103735
  AT91_REG EMAC_NSR;		// Network Status RegisterEMAC_NSR1488,103793
  AT91_REG Reserved0[2];	// Reserved01489,103842
  AT91_REG EMAC_TSR;		// Transmit Status RegisterEMAC_TSR1490,103871
  AT91_REG EMAC_RBQP;		// Receive Buffer Queue PointerEMAC_RBQP1491,103921
  AT91_REG EMAC_TBQP;		// Transmit Buffer Queue PointerEMAC_TBQP1492,103976
  AT91_REG EMAC_RSR;		// Receive Status RegisterEMAC_RSR1493,104032
  AT91_REG EMAC_ISR;		// Interrupt Status RegisterEMAC_ISR1494,104081
  AT91_REG EMAC_IER;		// Interrupt Enable RegisterEMAC_IER1495,104132
  AT91_REG EMAC_IDR;		// Interrupt Disable RegisterEMAC_IDR1496,104183
  AT91_REG EMAC_IMR;		// Interrupt Mask RegisterEMAC_IMR1497,104235
  AT91_REG EMAC_MAN;		// PHY Maintenance RegisterEMAC_MAN1498,104284
  AT91_REG EMAC_PTR;		// Pause Time RegisterEMAC_PTR1499,104334
  AT91_REG EMAC_PFR;		// Pause Frames received RegisterEMAC_PFR1500,104379
  AT91_REG EMAC_FTO;		// Frames Transmitted OK RegisterEMAC_FTO1501,104435
  AT91_REG EMAC_SCF;		// Single Collision Frame RegisterEMAC_SCF1502,104491
  AT91_REG EMAC_MCF;		// Multiple Collision Frame RegisterEMAC_MCF1503,104548
  AT91_REG EMAC_FRO;		// Frames Received OK RegisterEMAC_FRO1504,104607
  AT91_REG EMAC_FCSE;		// Frame Check Sequence Error RegisterEMAC_FCSE1505,104660
  AT91_REG EMAC_ALE;		// Alignment Error RegisterEMAC_ALE1506,104722
  AT91_REG EMAC_DTF;		// Deferred Transmission Frame RegisterEMAC_DTF1507,104772
  AT91_REG EMAC_LCOL;		// Late Collision RegisterEMAC_LCOL1508,104834
  AT91_REG EMAC_ECOL;		// Excessive Collision RegisterEMAC_ECOL1509,104884
  AT91_REG EMAC_TUND;		// Transmit Underrun Error RegisterEMAC_TUND1510,104939
  AT91_REG EMAC_CSE;		// Carrier Sense Error RegisterEMAC_CSE1511,104998
  AT91_REG EMAC_RRE;		// Receive Ressource Error RegisterEMAC_RRE1512,105052
  AT91_REG EMAC_ROV;		// Receive Overrun Errors RegisterEMAC_ROV1513,105110
  AT91_REG EMAC_RSE;		// Receive Symbol Errors RegisterEMAC_RSE1514,105167
  AT91_REG EMAC_ELE;		// Excessive Length Errors RegisterEMAC_ELE1515,105223
  AT91_REG EMAC_RJA;		// Receive Jabbers RegisterEMAC_RJA1516,105281
  AT91_REG EMAC_USF;		// Undersize Frames RegisterEMAC_USF1517,105331
  AT91_REG EMAC_STE;		// SQE Test Error RegisterEMAC_STE1518,105382
  AT91_REG EMAC_RLE;		// Receive Length Field Mismatch RegisterEMAC_RLE1519,105431
  AT91_REG EMAC_TPF;		// Transmitted Pause Frames RegisterEMAC_TPF1520,105495
  AT91_REG EMAC_HRB;		// Hash Address Bottom[31:0]EMAC_HRB1521,105554
  AT91_REG EMAC_HRT;		// Hash Address Top[63:32]EMAC_HRT1522,105605
  AT91_REG EMAC_SA1L;		// Specific Address 1 Bottom, First 4 bytesEMAC_SA1L1523,105654
  AT91_REG EMAC_SA1H;		// Specific Address 1 Top, Last 2 bytesEMAC_SA1H1524,105721
  AT91_REG EMAC_SA2L;		// Specific Address 2 Bottom, First 4 bytesEMAC_SA2L1525,105784
  AT91_REG EMAC_SA2H;		// Specific Address 2 Top, Last 2 bytesEMAC_SA2H1526,105851
  AT91_REG EMAC_SA3L;		// Specific Address 3 Bottom, First 4 bytesEMAC_SA3L1527,105914
  AT91_REG EMAC_SA3H;		// Specific Address 3 Top, Last 2 bytesEMAC_SA3H1528,105981
  AT91_REG EMAC_SA4L;		// Specific Address 4 Bottom, First 4 bytesEMAC_SA4L1529,106044
  AT91_REG EMAC_SA4H;		// Specific Address 4 Top, Last 2 bytesEMAC_SA4H1530,106111
  AT91_REG EMAC_TID;		// Type ID Checking RegisterEMAC_TID1531,106174
  AT91_REG EMAC_TPQ;		// Transmit Pause Quantum RegisterEMAC_TPQ1532,106225
  AT91_REG EMAC_USRIO;		// USER Input/Output RegisterEMAC_USRIO1533,106282
  AT91_REG EMAC_WOL;		// Wake On LAN RegisterEMAC_WOL1534,106336
  AT91_REG Reserved1[13];	// Reserved11535,106382
  AT91_REG EMAC_REV;		// Revision RegisterEMAC_REV1536,106412
} AT91S_EMAC, *AT91PS_EMAC;AT91S_EMAC1537,106455
} AT91S_EMAC, *AT91PS_EMAC;AT91PS_EMAC1537,106455
#define AT91C_EMAC_LB AT91C_EMAC_LB1540,106537
#define AT91C_EMAC_LLB AT91C_EMAC_LLB1541,106668
#define AT91C_EMAC_RE AT91C_EMAC_RE1542,106751
#define AT91C_EMAC_TE AT91C_EMAC_TE1543,106834
#define AT91C_EMAC_MPE AT91C_EMAC_MPE1544,106918
#define AT91C_EMAC_CLRSTAT AT91C_EMAC_CLRSTAT1545,107009
#define AT91C_EMAC_INCSTAT AT91C_EMAC_INCSTAT1546,107104
#define AT91C_EMAC_WESTAT AT91C_EMAC_WESTAT1547,107203
#define AT91C_EMAC_BP AT91C_EMAC_BP1548,107309
#define AT91C_EMAC_TSTART AT91C_EMAC_TSTART1549,107391
#define AT91C_EMAC_THALT AT91C_EMAC_THALT1550,107478
#define AT91C_EMAC_TPFR AT91C_EMAC_TPFR1551,107564
#define AT91C_EMAC_TZQ AT91C_EMAC_TZQ1552,107652
#define AT91C_EMAC_SPD AT91C_EMAC_SPD1554,107838
#define AT91C_EMAC_FD AT91C_EMAC_FD1555,107912
#define AT91C_EMAC_JFRAME AT91C_EMAC_JFRAME1556,107992
#define AT91C_EMAC_CAF AT91C_EMAC_CAF1557,108073
#define AT91C_EMAC_NBC AT91C_EMAC_NBC1558,108157
#define AT91C_EMAC_MTI AT91C_EMAC_MTI1559,108238
#define AT91C_EMAC_UNI AT91C_EMAC_UNI1560,108333
#define AT91C_EMAC_BIG AT91C_EMAC_BIG1561,108421
#define AT91C_EMAC_EAE AT91C_EMAC_EAE1562,108508
#define AT91C_EMAC_CLK AT91C_EMAC_CLK1563,108606
#define 	AT91C_EMAC_CLK_HCLK_8 AT91C_EMAC_CLK_HCLK_81564,108673
#define 	AT91C_EMAC_CLK_HCLK_16 AT91C_EMAC_CLK_HCLK_161565,108773
#define 	AT91C_EMAC_CLK_HCLK_32 AT91C_EMAC_CLK_HCLK_321566,108874
#define 	AT91C_EMAC_CLK_HCLK_64 AT91C_EMAC_CLK_HCLK_641567,108975
#define AT91C_EMAC_RTY AT91C_EMAC_RTY1568,109076
#define AT91C_EMAC_PAE AT91C_EMAC_PAE1569,109143
#define AT91C_EMAC_RBOF AT91C_EMAC_RBOF1570,109210
#define 	AT91C_EMAC_RBOF_OFFSET_0 AT91C_EMAC_RBOF_OFFSET_01571,109277
#define 	AT91C_EMAC_RBOF_OFFSET_1 AT91C_EMAC_RBOF_OFFSET_11572,109399
#define 	AT91C_EMAC_RBOF_OFFSET_2 AT91C_EMAC_RBOF_OFFSET_21573,109527
#define 	AT91C_EMAC_RBOF_OFFSET_3 AT91C_EMAC_RBOF_OFFSET_31574,109656
#define AT91C_EMAC_RLCE AT91C_EMAC_RLCE1575,109787
#define AT91C_EMAC_DRFCS AT91C_EMAC_DRFCS1576,109891
#define AT91C_EMAC_EFRHD AT91C_EMAC_EFRHD1577,109978
#define AT91C_EMAC_IRXFCS AT91C_EMAC_IRXFCS1578,110045
#define AT91C_EMAC_LINKR AT91C_EMAC_LINKR1580,110202
#define AT91C_EMAC_MDIO AT91C_EMAC_MDIO1581,110269
#define AT91C_EMAC_IDLE AT91C_EMAC_IDLE1582,110336
#define AT91C_EMAC_UBR AT91C_EMAC_UBR1584,110481
#define AT91C_EMAC_COL AT91C_EMAC_COL1585,110548
#define AT91C_EMAC_RLES AT91C_EMAC_RLES1586,110615
#define AT91C_EMAC_TGO AT91C_EMAC_TGO1587,110682
#define AT91C_EMAC_BEX AT91C_EMAC_BEX1588,110761
#define AT91C_EMAC_COMP AT91C_EMAC_COMP1589,110856
#define AT91C_EMAC_UND AT91C_EMAC_UND1590,110923
#define AT91C_EMAC_BNA AT91C_EMAC_BNA1592,111067
#define AT91C_EMAC_REC AT91C_EMAC_REC1593,111134
#define AT91C_EMAC_OVR AT91C_EMAC_OVR1594,111201
#define AT91C_EMAC_MFD AT91C_EMAC_MFD1596,111347
#define AT91C_EMAC_RCOMP AT91C_EMAC_RCOMP1597,111414
#define AT91C_EMAC_RXUBR AT91C_EMAC_RXUBR1598,111481
#define AT91C_EMAC_TXUBR AT91C_EMAC_TXUBR1599,111548
#define AT91C_EMAC_TUNDR AT91C_EMAC_TUNDR1600,111615
#define AT91C_EMAC_RLEX AT91C_EMAC_RLEX1601,111682
#define AT91C_EMAC_TXERR AT91C_EMAC_TXERR1602,111749
#define AT91C_EMAC_TCOMP AT91C_EMAC_TCOMP1603,111816
#define AT91C_EMAC_LINK AT91C_EMAC_LINK1604,111883
#define AT91C_EMAC_ROVR AT91C_EMAC_ROVR1605,111950
#define AT91C_EMAC_HRESP AT91C_EMAC_HRESP1606,112017
#define AT91C_EMAC_PFRE AT91C_EMAC_PFRE1607,112084
#define AT91C_EMAC_PTZ AT91C_EMAC_PTZ1608,112151
#define AT91C_EMAC_DATA AT91C_EMAC_DATA1613,112532
#define AT91C_EMAC_CODE AT91C_EMAC_CODE1614,112602
#define AT91C_EMAC_REGA AT91C_EMAC_REGA1615,112669
#define AT91C_EMAC_PHYA AT91C_EMAC_PHYA1616,112737
#define AT91C_EMAC_RW AT91C_EMAC_RW1617,112805
#define AT91C_EMAC_SOF AT91C_EMAC_SOF1618,112872
#define AT91C_EMAC_RMII AT91C_EMAC_RMII1620,113021
#define AT91C_EMAC_IP AT91C_EMAC_IP1622,113173
#define AT91C_EMAC_MAG AT91C_EMAC_MAG1623,113266
#define AT91C_EMAC_ARP AT91C_EMAC_ARP1624,113359
#define AT91C_EMAC_SA1 AT91C_EMAC_SA11625,113451
#define AT91C_EMAC_REVREF AT91C_EMAC_REVREF1627,113630
#define AT91C_EMAC_PARTREF AT91C_EMAC_PARTREF1628,113700
typedef struct _AT91S_ADC_AT91S_ADC1633,114006
  AT91_REG ADC_CR;		// ADC Control RegisterADC_CR1635,114034
  AT91_REG ADC_MR;		// ADC Mode RegisterADC_MR1636,114078
  AT91_REG Reserved0[2];	// Reserved01637,114119
  AT91_REG ADC_CHER;		// ADC Channel Enable RegisterADC_CHER1638,114148
  AT91_REG ADC_CHDR;		// ADC Channel Disable RegisterADC_CHDR1639,114201
  AT91_REG ADC_CHSR;		// ADC Channel Status RegisterADC_CHSR1640,114255
  AT91_REG ADC_SR;		// ADC Status RegisterADC_SR1641,114308
  AT91_REG ADC_LCDR;		// ADC Last Converted Data RegisterADC_LCDR1642,114351
  AT91_REG ADC_IER;		// ADC Interrupt Enable RegisterADC_IER1643,114409
  AT91_REG ADC_IDR;		// ADC Interrupt Disable RegisterADC_IDR1644,114463
  AT91_REG ADC_IMR;		// ADC Interrupt Mask RegisterADC_IMR1645,114518
  AT91_REG ADC_CDR0;		// ADC Channel Data Register 0ADC_CDR01646,114570
  AT91_REG ADC_CDR1;		// ADC Channel Data Register 1ADC_CDR11647,114623
  AT91_REG ADC_CDR2;		// ADC Channel Data Register 2ADC_CDR21648,114676
  AT91_REG ADC_CDR3;		// ADC Channel Data Register 3ADC_CDR31649,114729
  AT91_REG ADC_CDR4;		// ADC Channel Data Register 4ADC_CDR41650,114782
  AT91_REG ADC_CDR5;		// ADC Channel Data Register 5ADC_CDR51651,114835
  AT91_REG ADC_CDR6;		// ADC Channel Data Register 6ADC_CDR61652,114888
  AT91_REG ADC_CDR7;		// ADC Channel Data Register 7ADC_CDR71653,114941
  AT91_REG Reserved1[44];	// Reserved11654,114994
  AT91_REG ADC_RPR;		// Receive Pointer RegisterADC_RPR1655,115024
  AT91_REG ADC_RCR;		// Receive Counter RegisterADC_RCR1656,115073
  AT91_REG ADC_TPR;		// Transmit Pointer RegisterADC_TPR1657,115122
  AT91_REG ADC_TCR;		// Transmit Counter RegisterADC_TCR1658,115172
  AT91_REG ADC_RNPR;		// Receive Next Pointer RegisterADC_RNPR1659,115222
  AT91_REG ADC_RNCR;		// Receive Next Counter RegisterADC_RNCR1660,115277
  AT91_REG ADC_TNPR;		// Transmit Next Pointer RegisterADC_TNPR1661,115332
  AT91_REG ADC_TNCR;		// Transmit Next Counter RegisterADC_TNCR1662,115388
  AT91_REG ADC_PTCR;		// PDC Transfer Control RegisterADC_PTCR1663,115444
  AT91_REG ADC_PTSR;		// PDC Transfer Status RegisterADC_PTSR1664,115499
} AT91S_ADC, *AT91PS_ADC;AT91S_ADC1665,115553
} AT91S_ADC, *AT91PS_ADC;AT91PS_ADC1665,115553
#define AT91C_ADC_SWRST AT91C_ADC_SWRST1668,115650
#define AT91C_ADC_START AT91C_ADC_START1669,115731
#define AT91C_ADC_TRGEN AT91C_ADC_TRGEN1671,115881
#define 	AT91C_ADC_TRGEN_DIS AT91C_ADC_TRGEN_DIS1672,115962
#define 	AT91C_ADC_TRGEN_EN AT91C_ADC_TRGEN_EN1673,116121
#define AT91C_ADC_TRGSEL AT91C_ADC_TRGSEL1674,116251
#define 	AT91C_ADC_TRGSEL_TIOA0 AT91C_ADC_TRGSEL_TIOA01675,116335
#define 	AT91C_ADC_TRGSEL_TIOA1 AT91C_ADC_TRGSEL_TIOA11676,116442
#define 	AT91C_ADC_TRGSEL_TIOA2 AT91C_ADC_TRGSEL_TIOA21677,116549
#define 	AT91C_ADC_TRGSEL_TIOA3 AT91C_ADC_TRGSEL_TIOA31678,116656
#define 	AT91C_ADC_TRGSEL_TIOA4 AT91C_ADC_TRGSEL_TIOA41679,116763
#define 	AT91C_ADC_TRGSEL_TIOA5 AT91C_ADC_TRGSEL_TIOA51680,116870
#define 	AT91C_ADC_TRGSEL_EXT AT91C_ADC_TRGSEL_EXT1681,116977
#define AT91C_ADC_LOWRES AT91C_ADC_LOWRES1682,117095
#define 	AT91C_ADC_LOWRES_10_BIT AT91C_ADC_LOWRES_10_BIT1683,117173
#define 	AT91C_ADC_LOWRES_8_BIT AT91C_ADC_LOWRES_8_BIT1684,117274
#define AT91C_ADC_SLEEP AT91C_ADC_SLEEP1685,117374
#define 	AT91C_ADC_SLEEP_NORMAL_MODE AT91C_ADC_SLEEP_NORMAL_MODE1686,117451
#define 	AT91C_ADC_SLEEP_MODE AT91C_ADC_SLEEP_MODE1687,117545
#define AT91C_ADC_PRESCAL AT91C_ADC_PRESCAL1688,117638
#define AT91C_ADC_STARTUP AT91C_ADC_STARTUP1689,117730
#define AT91C_ADC_SHTIM AT91C_ADC_SHTIM1690,117810
#define AT91C_ADC_CH0 AT91C_ADC_CH01692,117979
#define AT91C_ADC_CH1 AT91C_ADC_CH11693,118055
#define AT91C_ADC_CH2 AT91C_ADC_CH21694,118131
#define AT91C_ADC_CH3 AT91C_ADC_CH31695,118207
#define AT91C_ADC_CH4 AT91C_ADC_CH41696,118283
#define AT91C_ADC_CH5 AT91C_ADC_CH51697,118359
#define AT91C_ADC_CH6 AT91C_ADC_CH61698,118435
#define AT91C_ADC_CH7 AT91C_ADC_CH71699,118511
#define AT91C_ADC_EOC0 AT91C_ADC_EOC01703,118826
#define AT91C_ADC_EOC1 AT91C_ADC_EOC11704,118910
#define AT91C_ADC_EOC2 AT91C_ADC_EOC21705,118994
#define AT91C_ADC_EOC3 AT91C_ADC_EOC31706,119078
#define AT91C_ADC_EOC4 AT91C_ADC_EOC41707,119162
#define AT91C_ADC_EOC5 AT91C_ADC_EOC51708,119246
#define AT91C_ADC_EOC6 AT91C_ADC_EOC61709,119330
#define AT91C_ADC_EOC7 AT91C_ADC_EOC71710,119414
#define AT91C_ADC_OVRE0 AT91C_ADC_OVRE01711,119498
#define AT91C_ADC_OVRE1 AT91C_ADC_OVRE11712,119578
#define AT91C_ADC_OVRE2 AT91C_ADC_OVRE21713,119658
#define AT91C_ADC_OVRE3 AT91C_ADC_OVRE31714,119738
#define AT91C_ADC_OVRE4 AT91C_ADC_OVRE41715,119818
#define AT91C_ADC_OVRE5 AT91C_ADC_OVRE51716,119898
#define AT91C_ADC_OVRE6 AT91C_ADC_OVRE61717,119978
#define AT91C_ADC_OVRE7 AT91C_ADC_OVRE71718,120058
#define AT91C_ADC_DRDY AT91C_ADC_DRDY1719,120138
#define AT91C_ADC_GOVRE AT91C_ADC_GOVRE1720,120215
#define AT91C_ADC_ENDRX AT91C_ADC_ENDRX1721,120297
#define AT91C_ADC_RXBUFF AT91C_ADC_RXBUFF1722,120388
#define AT91C_ADC_LDATA AT91C_ADC_LDATA1724,120556
#define AT91C_ADC_DATA AT91C_ADC_DATA1729,120966
typedef struct _AT91S_AES_AT91S_AES1741,121847
  AT91_REG AES_CR;		// Control RegisterAES_CR1743,121875
  AT91_REG AES_MR;		// Mode RegisterAES_MR1744,121915
  AT91_REG Reserved0[2];	// Reserved01745,121952
  AT91_REG AES_IER;		// Interrupt Enable RegisterAES_IER1746,121981
  AT91_REG AES_IDR;		// Interrupt Disable RegisterAES_IDR1747,122031
  AT91_REG AES_IMR;		// Interrupt Mask RegisterAES_IMR1748,122082
  AT91_REG AES_ISR;		// Interrupt Status RegisterAES_ISR1749,122130
  AT91_REG AES_KEYWxR[4];	// Key Word x RegisterAES_KEYWxR1750,122180
  AT91_REG Reserved1[4];	// Reserved11751,122229
  AT91_REG AES_IDATAxR[4];	// Input Data x RegisterAES_IDATAxR1752,122258
  AT91_REG AES_ODATAxR[4];	// Output Data x RegisterAES_ODATAxR1753,122310
  AT91_REG AES_IVxR[4];		// Initialization Vector x RegisterAES_IVxR1754,122363
  AT91_REG Reserved2[35];	// Reserved21755,122424
  AT91_REG AES_VR;		// AES Version RegisterAES_VR1756,122454
  AT91_REG AES_RPR;		// Receive Pointer RegisterAES_RPR1757,122498
  AT91_REG AES_RCR;		// Receive Counter RegisterAES_RCR1758,122547
  AT91_REG AES_TPR;		// Transmit Pointer RegisterAES_TPR1759,122596
  AT91_REG AES_TCR;		// Transmit Counter RegisterAES_TCR1760,122646
  AT91_REG AES_RNPR;		// Receive Next Pointer RegisterAES_RNPR1761,122696
  AT91_REG AES_RNCR;		// Receive Next Counter RegisterAES_RNCR1762,122751
  AT91_REG AES_TNPR;		// Transmit Next Pointer RegisterAES_TNPR1763,122806
  AT91_REG AES_TNCR;		// Transmit Next Counter RegisterAES_TNCR1764,122862
  AT91_REG AES_PTCR;		// PDC Transfer Control RegisterAES_PTCR1765,122918
  AT91_REG AES_PTSR;		// PDC Transfer Status RegisterAES_PTSR1766,122973
} AT91S_AES, *AT91PS_AES;AT91S_AES1767,123027
} AT91S_AES, *AT91PS_AES;AT91PS_AES1767,123027
#define AT91C_AES_START AT91C_AES_START1770,123120
#define AT91C_AES_SWRST AT91C_AES_SWRST1771,123204
#define AT91C_AES_LOADSEED AT91C_AES_LOADSEED1772,123285
#define AT91C_AES_CIPHER AT91C_AES_CIPHER1774,123451
#define AT91C_AES_PROCDLY AT91C_AES_PROCDLY1775,123533
#define AT91C_AES_SMOD AT91C_AES_SMOD1776,123616
#define 	AT91C_AES_SMOD_MANUAL AT91C_AES_SMOD_MANUAL1777,123693
#define 	AT91C_AES_SMOD_AUTO AT91C_AES_SMOD_AUTO1778,123867
#define 	AT91C_AES_SMOD_PDC AT91C_AES_SMOD_PDC1779,124008
#define AT91C_AES_OPMOD AT91C_AES_OPMOD1780,124114
#define 	AT91C_AES_OPMOD_ECB AT91C_AES_OPMOD_ECB1781,124195
#define 	AT91C_AES_OPMOD_CBC AT91C_AES_OPMOD_CBC1782,124307
#define 	AT91C_AES_OPMOD_OFB AT91C_AES_OPMOD_OFB1783,124421
#define 	AT91C_AES_OPMOD_CFB AT91C_AES_OPMOD_CFB1784,124529
#define 	AT91C_AES_OPMOD_CTR AT91C_AES_OPMOD_CTR1785,124637
#define AT91C_AES_LOD AT91C_AES_LOD1786,124737
#define AT91C_AES_CFBS AT91C_AES_CFBS1787,124825
#define 	AT91C_AES_CFBS_128_BIT AT91C_AES_CFBS_128_BIT1788,124917
#define 	AT91C_AES_CFBS_64_BIT AT91C_AES_CFBS_64_BIT1789,125007
#define 	AT91C_AES_CFBS_32_BIT AT91C_AES_CFBS_32_BIT1790,125096
#define 	AT91C_AES_CFBS_16_BIT AT91C_AES_CFBS_16_BIT1791,125185
#define 	AT91C_AES_CFBS_8_BIT AT91C_AES_CFBS_8_BIT1792,125274
#define AT91C_AES_CKEY AT91C_AES_CKEY1793,125362
#define AT91C_AES_CTYPE AT91C_AES_CTYPE1794,125447
#define 	AT91C_AES_CTYPE_TYPE1_EN AT91C_AES_CTYPE_TYPE1_EN1795,125534
#define 	AT91C_AES_CTYPE_TYPE2_EN AT91C_AES_CTYPE_TYPE2_EN1796,125650
#define 	AT91C_AES_CTYPE_TYPE3_EN AT91C_AES_CTYPE_TYPE3_EN1797,125766
#define 	AT91C_AES_CTYPE_TYPE4_EN AT91C_AES_CTYPE_TYPE4_EN1798,125882
#define 	AT91C_AES_CTYPE_TYPE5_EN AT91C_AES_CTYPE_TYPE5_EN1799,125998
#define AT91C_AES_DATRDY AT91C_AES_DATRDY1801,126192
#define AT91C_AES_ENDRX AT91C_AES_ENDRX1802,126265
#define AT91C_AES_ENDTX AT91C_AES_ENDTX1803,126351
#define AT91C_AES_RXBUFF AT91C_AES_RXBUFF1804,126438
#define AT91C_AES_TXBUFE AT91C_AES_TXBUFE1805,126525
#define AT91C_AES_URAD AT91C_AES_URAD1806,126614
#define AT91C_AES_URAT AT91C_AES_URAT1810,126948
#define 	AT91C_AES_URAT_IN_DAT_WRITE_DATPROC AT91C_AES_URAT_IN_DAT_WRITE_DATPROC1811,127054
#define 	AT91C_AES_URAT_OUT_DAT_READ_DATPROC AT91C_AES_URAT_OUT_DAT_READ_DATPROC1812,127203
#define 	AT91C_AES_URAT_MODEREG_WRITE_DATPROC AT91C_AES_URAT_MODEREG_WRITE_DATPROC1813,127338
#define 	AT91C_AES_URAT_OUT_DAT_READ_SUBKEY AT91C_AES_URAT_OUT_DAT_READ_SUBKEY1814,127470
#define 	AT91C_AES_URAT_MODEREG_WRITE_SUBKEY AT91C_AES_URAT_MODEREG_WRITE_SUBKEY1815,127609
#define 	AT91C_AES_URAT_WO_REG_READ AT91C_AES_URAT_WO_REG_READ1816,127744
typedef struct _AT91S_TDES_AT91S_TDES1821,128098
  AT91_REG TDES_CR;		// Control RegisterTDES_CR1823,128127
  AT91_REG TDES_MR;		// Mode RegisterTDES_MR1824,128168
  AT91_REG Reserved0[2];	// Reserved01825,128206
  AT91_REG TDES_IER;		// Interrupt Enable RegisterTDES_IER1826,128235
  AT91_REG TDES_IDR;		// Interrupt Disable RegisterTDES_IDR1827,128286
  AT91_REG TDES_IMR;		// Interrupt Mask RegisterTDES_IMR1828,128338
  AT91_REG TDES_ISR;		// Interrupt Status RegisterTDES_ISR1829,128387
  AT91_REG TDES_KEY1WxR[2];	// Key 1 Word x RegisterTDES_KEY1WxR1830,128438
  AT91_REG TDES_KEY2WxR[2];	// Key 2 Word x RegisterTDES_KEY2WxR1831,128491
  AT91_REG TDES_KEY3WxR[2];	// Key 3 Word x RegisterTDES_KEY3WxR1832,128544
  AT91_REG Reserved1[2];	// Reserved11833,128597
  AT91_REG TDES_IDATAxR[2];	// Input Data x RegisterTDES_IDATAxR1834,128626
  AT91_REG Reserved2[2];	// Reserved21835,128679
  AT91_REG TDES_ODATAxR[2];	// Output Data x RegisterTDES_ODATAxR1836,128708
  AT91_REG Reserved3[2];	// Reserved31837,128762
  AT91_REG TDES_IVxR[2];	// Initialization Vector x RegisterTDES_IVxR1838,128791
  AT91_REG Reserved4[37];	// Reserved41839,128852
  AT91_REG TDES_VR;		// TDES Version RegisterTDES_VR1840,128882
  AT91_REG TDES_RPR;		// Receive Pointer RegisterTDES_RPR1841,128928
  AT91_REG TDES_RCR;		// Receive Counter RegisterTDES_RCR1842,128978
  AT91_REG TDES_TPR;		// Transmit Pointer RegisterTDES_TPR1843,129028
  AT91_REG TDES_TCR;		// Transmit Counter RegisterTDES_TCR1844,129079
  AT91_REG TDES_RNPR;		// Receive Next Pointer RegisterTDES_RNPR1845,129130
  AT91_REG TDES_RNCR;		// Receive Next Counter RegisterTDES_RNCR1846,129186
  AT91_REG TDES_TNPR;		// Transmit Next Pointer RegisterTDES_TNPR1847,129242
  AT91_REG TDES_TNCR;		// Transmit Next Counter RegisterTDES_TNCR1848,129299
  AT91_REG TDES_PTCR;		// PDC Transfer Control RegisterTDES_PTCR1849,129356
  AT91_REG TDES_PTSR;		// PDC Transfer Status RegisterTDES_PTSR1850,129412
} AT91S_TDES, *AT91PS_TDES;AT91S_TDES1851,129467
} AT91S_TDES, *AT91PS_TDES;AT91PS_TDES1851,129467
#define AT91C_TDES_START AT91C_TDES_START1854,129564
#define AT91C_TDES_SWRST AT91C_TDES_SWRST1855,129649
#define AT91C_TDES_CIPHER AT91C_TDES_CIPHER1857,129796
#define AT91C_TDES_TDESMOD AT91C_TDES_TDESMOD1858,129879
#define AT91C_TDES_KEYMOD AT91C_TDES_KEYMOD1859,129972
#define AT91C_TDES_SMOD AT91C_TDES_SMOD1860,130048
#define 	AT91C_TDES_SMOD_MANUAL AT91C_TDES_SMOD_MANUAL1861,130126
#define 	AT91C_TDES_SMOD_AUTO AT91C_TDES_SMOD_AUTO1862,130303
#define 	AT91C_TDES_SMOD_PDC AT91C_TDES_SMOD_PDC1863,130447
#define AT91C_TDES_OPMOD AT91C_TDES_OPMOD1864,130555
#define 	AT91C_TDES_OPMOD_ECB AT91C_TDES_OPMOD_ECB1865,130637
#define 	AT91C_TDES_OPMOD_CBC AT91C_TDES_OPMOD_CBC1866,130751
#define 	AT91C_TDES_OPMOD_OFB AT91C_TDES_OPMOD_OFB1867,130867
#define 	AT91C_TDES_OPMOD_CFB AT91C_TDES_OPMOD_CFB1868,130977
#define AT91C_TDES_LOD AT91C_TDES_LOD1869,131087
#define AT91C_TDES_CFBS AT91C_TDES_CFBS1870,131176
#define 	AT91C_TDES_CFBS_64_BIT AT91C_TDES_CFBS_64_BIT1871,131269
#define 	AT91C_TDES_CFBS_32_BIT AT91C_TDES_CFBS_32_BIT1872,131360
#define 	AT91C_TDES_CFBS_16_BIT AT91C_TDES_CFBS_16_BIT1873,131451
#define 	AT91C_TDES_CFBS_8_BIT AT91C_TDES_CFBS_8_BIT1874,131542
#define AT91C_TDES_DATRDY AT91C_TDES_DATRDY1876,131711
#define AT91C_TDES_ENDRX AT91C_TDES_ENDRX1877,131785
#define AT91C_TDES_ENDTX AT91C_TDES_ENDTX1878,131872
#define AT91C_TDES_RXBUFF AT91C_TDES_RXBUFF1879,131960
#define AT91C_TDES_TXBUFE AT91C_TDES_TXBUFE1880,132048
#define AT91C_TDES_URAD AT91C_TDES_URAD1881,132138
#define AT91C_TDES_URAT AT91C_TDES_URAT1885,132479
#define 	AT91C_TDES_URAT_IN_DAT_WRITE_DATPROC AT91C_TDES_URAT_IN_DAT_WRITE_DATPROC1886,132586
#define 	AT91C_TDES_URAT_OUT_DAT_READ_DATPROC AT91C_TDES_URAT_OUT_DAT_READ_DATPROC1887,132737
#define 	AT91C_TDES_URAT_MODEREG_WRITE_DATPROC AT91C_TDES_URAT_MODEREG_WRITE_DATPROC1888,132874
#define 	AT91C_TDES_URAT_WO_REG_READ AT91C_TDES_URAT_WO_REG_READ1889,133008
#define AT91C_AIC_IVR AT91C_AIC_IVR1896,133479
#define AT91C_AIC_SMR AT91C_AIC_SMR1897,133559
#define AT91C_AIC_FVR AT91C_AIC_FVR1898,133640
#define AT91C_AIC_DCR AT91C_AIC_DCR1899,133720
#define AT91C_AIC_EOICR AT91C_AIC_EOICR1900,133813
#define AT91C_AIC_SVR AT91C_AIC_SVR1901,133907
#define AT91C_AIC_FFSR AT91C_AIC_FFSR1902,133990
#define AT91C_AIC_ICCR AT91C_AIC_ICCR1903,134079
#define AT91C_AIC_ISR AT91C_AIC_ISR1904,134172
#define AT91C_AIC_IMR AT91C_AIC_IMR1905,134258
#define AT91C_AIC_IPR AT91C_AIC_IPR1906,134342
#define AT91C_AIC_FFER AT91C_AIC_FFER1907,134429
#define AT91C_AIC_IECR AT91C_AIC_IECR1908,134518
#define AT91C_AIC_ISCR AT91C_AIC_ISCR1909,134612
#define AT91C_AIC_FFDR AT91C_AIC_FFDR1910,134703
#define AT91C_AIC_CISR AT91C_AIC_CISR1911,134793
#define AT91C_AIC_IDCR AT91C_AIC_IDCR1912,134884
#define AT91C_AIC_SPU AT91C_AIC_SPU1913,134979
#define AT91C_DBGU_TCR AT91C_DBGU_TCR1915,135134
#define AT91C_DBGU_RNPR AT91C_DBGU_RNPR1916,135225
#define AT91C_DBGU_TNPR AT91C_DBGU_TNPR1917,135320
#define AT91C_DBGU_TPR AT91C_DBGU_TPR1918,135416
#define AT91C_DBGU_RPR AT91C_DBGU_RPR1919,135507
#define AT91C_DBGU_RCR AT91C_DBGU_RCR1920,135597
#define AT91C_DBGU_RNCR AT91C_DBGU_RNCR1921,135687
#define AT91C_DBGU_PTCR AT91C_DBGU_PTCR1922,135782
#define AT91C_DBGU_PTSR AT91C_DBGU_PTSR1923,135877
#define AT91C_DBGU_TNCR AT91C_DBGU_TNCR1924,135971
#define AT91C_DBGU_EXID AT91C_DBGU_EXID1926,136133
#define AT91C_DBGU_BRGR AT91C_DBGU_BRGR1927,136221
#define AT91C_DBGU_IDR AT91C_DBGU_IDR1928,136311
#define AT91C_DBGU_CSR AT91C_DBGU_CSR1929,136399
#define AT91C_DBGU_CIDR AT91C_DBGU_CIDR1930,136484
#define AT91C_DBGU_MR AT91C_DBGU_MR1931,136562
#define AT91C_DBGU_IMR AT91C_DBGU_IMR1932,136637
#define AT91C_DBGU_CR AT91C_DBGU_CR1933,136722
#define AT91C_DBGU_FNTR AT91C_DBGU_FNTR1934,136800
#define AT91C_DBGU_THR AT91C_DBGU_THR1935,136882
#define AT91C_DBGU_RHR AT91C_DBGU_RHR1936,136972
#define AT91C_DBGU_IER AT91C_DBGU_IER1937,137059
#define AT91C_PIOA_ODR AT91C_PIOA_ODR1939,137212
#define AT91C_PIOA_SODR AT91C_PIOA_SODR1940,137298
#define AT91C_PIOA_ISR AT91C_PIOA_ISR1941,137384
#define AT91C_PIOA_ABSR AT91C_PIOA_ABSR1942,137471
#define AT91C_PIOA_IER AT91C_PIOA_IER1943,137558
#define AT91C_PIOA_PPUDR AT91C_PIOA_PPUDR1944,137645
#define AT91C_PIOA_IMR AT91C_PIOA_IMR1945,137732
#define AT91C_PIOA_PER AT91C_PIOA_PER1946,137817
#define AT91C_PIOA_IFDR AT91C_PIOA_IFDR1947,137898
#define AT91C_PIOA_OWDR AT91C_PIOA_OWDR1948,137989
#define AT91C_PIOA_MDSR AT91C_PIOA_MDSR1949,138080
#define AT91C_PIOA_IDR AT91C_PIOA_IDR1950,138170
#define AT91C_PIOA_ODSR AT91C_PIOA_ODSR1951,138258
#define AT91C_PIOA_PPUSR AT91C_PIOA_PPUSR1952,138347
#define AT91C_PIOA_OWSR AT91C_PIOA_OWSR1953,138433
#define AT91C_PIOA_BSR AT91C_PIOA_BSR1954,138523
#define AT91C_PIOA_OWER AT91C_PIOA_OWER1955,138602
#define AT91C_PIOA_IFER AT91C_PIOA_IFER1956,138692
#define AT91C_PIOA_PDSR AT91C_PIOA_PDSR1957,138782
#define AT91C_PIOA_PPUER AT91C_PIOA_PPUER1958,138868
#define AT91C_PIOA_OSR AT91C_PIOA_OSR1959,138954
#define AT91C_PIOA_ASR AT91C_PIOA_ASR1960,139038
#define AT91C_PIOA_MDDR AT91C_PIOA_MDDR1961,139117
#define AT91C_PIOA_CODR AT91C_PIOA_CODR1962,139208
#define AT91C_PIOA_MDER AT91C_PIOA_MDER1963,139296
#define AT91C_PIOA_PDR AT91C_PIOA_PDR1964,139386
#define AT91C_PIOA_IFSR AT91C_PIOA_IFSR1965,139468
#define AT91C_PIOA_OER AT91C_PIOA_OER1966,139558
#define AT91C_PIOA_PSR AT91C_PIOA_PSR1967,139642
#define AT91C_PIOB_OWDR AT91C_PIOB_OWDR1969,139789
#define AT91C_PIOB_MDER AT91C_PIOB_MDER1970,139880
#define AT91C_PIOB_PPUSR AT91C_PIOB_PPUSR1971,139970
#define AT91C_PIOB_IMR AT91C_PIOB_IMR1972,140056
#define AT91C_PIOB_ASR AT91C_PIOB_ASR1973,140141
#define AT91C_PIOB_PPUDR AT91C_PIOB_PPUDR1974,140220
#define AT91C_PIOB_PSR AT91C_PIOB_PSR1975,140307
#define AT91C_PIOB_IER AT91C_PIOB_IER1976,140388
#define AT91C_PIOB_CODR AT91C_PIOB_CODR1977,140475
#define AT91C_PIOB_OWER AT91C_PIOB_OWER1978,140563
#define AT91C_PIOB_ABSR AT91C_PIOB_ABSR1979,140653
#define AT91C_PIOB_IFDR AT91C_PIOB_IFDR1980,140740
#define AT91C_PIOB_PDSR AT91C_PIOB_PDSR1981,140831
#define AT91C_PIOB_IDR AT91C_PIOB_IDR1982,140917
#define AT91C_PIOB_OWSR AT91C_PIOB_OWSR1983,141005
#define AT91C_PIOB_PDR AT91C_PIOB_PDR1984,141095
#define AT91C_PIOB_ODR AT91C_PIOB_ODR1985,141177
#define AT91C_PIOB_IFSR AT91C_PIOB_IFSR1986,141263
#define AT91C_PIOB_PPUER AT91C_PIOB_PPUER1987,141353
#define AT91C_PIOB_SODR AT91C_PIOB_SODR1988,141439
#define AT91C_PIOB_ISR AT91C_PIOB_ISR1989,141525
#define AT91C_PIOB_ODSR AT91C_PIOB_ODSR1990,141612
#define AT91C_PIOB_OSR AT91C_PIOB_OSR1991,141701
#define AT91C_PIOB_MDSR AT91C_PIOB_MDSR1992,141785
#define AT91C_PIOB_IFER AT91C_PIOB_IFER1993,141875
#define AT91C_PIOB_BSR AT91C_PIOB_BSR1994,141965
#define AT91C_PIOB_MDDR AT91C_PIOB_MDDR1995,142044
#define AT91C_PIOB_OER AT91C_PIOB_OER1996,142135
#define AT91C_PIOB_PER AT91C_PIOB_PER1997,142219
#define AT91C_CKGR_MOR AT91C_CKGR_MOR1999,142366
#define AT91C_CKGR_PLLR AT91C_CKGR_PLLR2000,142452
#define AT91C_CKGR_MCFR AT91C_CKGR_MCFR2001,142526
#define AT91C_PMC_IDR AT91C_PMC_IDR2003,142683
#define AT91C_PMC_MOR AT91C_PMC_MOR2004,142770
#define AT91C_PMC_PLLR AT91C_PMC_PLLR2005,142855
#define AT91C_PMC_PCER AT91C_PMC_PCER2006,142928
#define AT91C_PMC_PCKR AT91C_PMC_PCKR2007,143021
#define AT91C_PMC_MCKR AT91C_PMC_MCKR2008,143109
#define AT91C_PMC_SCDR AT91C_PMC_SCDR2009,143191
#define AT91C_PMC_PCDR AT91C_PMC_PCDR2010,143281
#define AT91C_PMC_SCSR AT91C_PMC_SCSR2011,143375
#define AT91C_PMC_PCSR AT91C_PMC_PCSR2012,143464
#define AT91C_PMC_MCFR AT91C_PMC_MCFR2013,143557
#define AT91C_PMC_SCER AT91C_PMC_SCER2014,143648
#define AT91C_PMC_IMR AT91C_PMC_IMR2015,143737
#define AT91C_PMC_IER AT91C_PMC_IER2016,143821
#define AT91C_PMC_SR AT91C_PMC_SR2017,143907
#define AT91C_RSTC_RCR AT91C_RSTC_RCR2019,144049
#define AT91C_RSTC_RMR AT91C_RSTC_RMR2020,144133
#define AT91C_RSTC_RSR AT91C_RSTC_RSR2021,144214
#define AT91C_RTTC_RTSR AT91C_RTTC_RTSR2023,144363
#define AT91C_RTTC_RTMR AT91C_RTTC_RTMR2024,144450
#define AT91C_RTTC_RTVR AT91C_RTTC_RTVR2025,144535
#define AT91C_RTTC_RTAR AT91C_RTTC_RTAR2026,144621
#define AT91C_PITC_PIVR AT91C_PITC_PIVR2028,144773
#define AT91C_PITC_PISR AT91C_PITC_PISR2029,144865
#define AT91C_PITC_PIIR AT91C_PITC_PIIR2030,144958
#define AT91C_PITC_PIMR AT91C_PITC_PIMR2031,145050
#define AT91C_WDTC_WDCR AT91C_WDTC_WDCR2033,145207
#define AT91C_WDTC_WDSR AT91C_WDTC_WDSR2034,145294
#define AT91C_WDTC_WDMR AT91C_WDTC_WDMR2035,145380
#define AT91C_VREG_MR AT91C_VREG_MR2037,145530
#define AT91C_MC_ASR AT91C_MC_ASR2039,145687
#define AT91C_MC_RCR AT91C_MC_RCR2040,145771
#define AT91C_MC_FCR AT91C_MC_FCR2041,145856
#define AT91C_MC_AASR AT91C_MC_AASR2042,145941
#define AT91C_MC_FSR AT91C_MC_FSR2043,146033
#define AT91C_MC_FMR AT91C_MC_FMR2044,146117
#define AT91C_SPI1_PTCR AT91C_SPI1_PTCR2046,146269
#define AT91C_SPI1_RPR AT91C_SPI1_RPR2047,146364
#define AT91C_SPI1_TNCR AT91C_SPI1_TNCR2048,146454
#define AT91C_SPI1_TPR AT91C_SPI1_TPR2049,146550
#define AT91C_SPI1_TNPR AT91C_SPI1_TNPR2050,146641
#define AT91C_SPI1_TCR AT91C_SPI1_TCR2051,146737
#define AT91C_SPI1_RCR AT91C_SPI1_RCR2052,146828
#define AT91C_SPI1_RNPR AT91C_SPI1_RNPR2053,146918
#define AT91C_SPI1_RNCR AT91C_SPI1_RNCR2054,147013
#define AT91C_SPI1_PTSR AT91C_SPI1_PTSR2055,147108
#define AT91C_SPI1_IMR AT91C_SPI1_IMR2057,147268
#define AT91C_SPI1_IER AT91C_SPI1_IER2058,147353
#define AT91C_SPI1_MR AT91C_SPI1_MR2059,147440
#define AT91C_SPI1_RDR AT91C_SPI1_RDR2060,147515
#define AT91C_SPI1_IDR AT91C_SPI1_IDR2061,147598
#define AT91C_SPI1_SR AT91C_SPI1_SR2062,147686
#define AT91C_SPI1_TDR AT91C_SPI1_TDR2063,147763
#define AT91C_SPI1_CR AT91C_SPI1_CR2064,147847
#define AT91C_SPI1_CSR AT91C_SPI1_CSR2065,147925
#define AT91C_SPI0_PTCR AT91C_SPI0_PTCR2067,148077
#define AT91C_SPI0_TPR AT91C_SPI0_TPR2068,148172
#define AT91C_SPI0_TCR AT91C_SPI0_TCR2069,148263
#define AT91C_SPI0_RCR AT91C_SPI0_RCR2070,148354
#define AT91C_SPI0_PTSR AT91C_SPI0_PTSR2071,148444
#define AT91C_SPI0_RNPR AT91C_SPI0_RNPR2072,148538
#define AT91C_SPI0_RPR AT91C_SPI0_RPR2073,148633
#define AT91C_SPI0_TNCR AT91C_SPI0_TNCR2074,148723
#define AT91C_SPI0_RNCR AT91C_SPI0_RNCR2075,148819
#define AT91C_SPI0_TNPR AT91C_SPI0_TNPR2076,148914
#define AT91C_SPI0_IER AT91C_SPI0_IER2078,149076
#define AT91C_SPI0_SR AT91C_SPI0_SR2079,149163
#define AT91C_SPI0_IDR AT91C_SPI0_IDR2080,149240
#define AT91C_SPI0_CR AT91C_SPI0_CR2081,149328
#define AT91C_SPI0_MR AT91C_SPI0_MR2082,149406
#define AT91C_SPI0_IMR AT91C_SPI0_IMR2083,149481
#define AT91C_SPI0_TDR AT91C_SPI0_TDR2084,149566
#define AT91C_SPI0_RDR AT91C_SPI0_RDR2085,149650
#define AT91C_SPI0_CSR AT91C_SPI0_CSR2086,149733
#define AT91C_US1_RNCR AT91C_US1_RNCR2088,149884
#define AT91C_US1_PTCR AT91C_US1_PTCR2089,149978
#define AT91C_US1_TCR AT91C_US1_TCR2090,150072
#define AT91C_US1_PTSR AT91C_US1_PTSR2091,150162
#define AT91C_US1_TNPR AT91C_US1_TNPR2092,150255
#define AT91C_US1_RCR AT91C_US1_RCR2093,150350
#define AT91C_US1_RNPR AT91C_US1_RNPR2094,150439
#define AT91C_US1_RPR AT91C_US1_RPR2095,150533
#define AT91C_US1_TNCR AT91C_US1_TNCR2096,150622
#define AT91C_US1_TPR AT91C_US1_TPR2097,150717
#define AT91C_US1_IF AT91C_US1_IF2099,150872
#define AT91C_US1_NER AT91C_US1_NER2100,150953
#define AT91C_US1_RTOR AT91C_US1_RTOR2101,151032
#define AT91C_US1_CSR AT91C_US1_CSR2102,151119
#define AT91C_US1_IDR AT91C_US1_IDR2103,151203
#define AT91C_US1_IER AT91C_US1_IER2104,151290
#define AT91C_US1_THR AT91C_US1_THR2105,151376
#define AT91C_US1_TTGR AT91C_US1_TTGR2106,151465
#define AT91C_US1_RHR AT91C_US1_RHR2107,151557
#define AT91C_US1_BRGR AT91C_US1_BRGR2108,151643
#define AT91C_US1_IMR AT91C_US1_IMR2109,151732
#define AT91C_US1_FIDI AT91C_US1_FIDI2110,151816
#define AT91C_US1_CR AT91C_US1_CR2111,151897
#define AT91C_US1_MR AT91C_US1_MR2112,151974
#define AT91C_US0_TNPR AT91C_US0_TNPR2114,152117
#define AT91C_US0_RNPR AT91C_US0_RNPR2115,152212
#define AT91C_US0_TCR AT91C_US0_TCR2116,152306
#define AT91C_US0_PTCR AT91C_US0_PTCR2117,152396
#define AT91C_US0_PTSR AT91C_US0_PTSR2118,152490
#define AT91C_US0_TNCR AT91C_US0_TNCR2119,152583
#define AT91C_US0_TPR AT91C_US0_TPR2120,152678
#define AT91C_US0_RCR AT91C_US0_RCR2121,152768
#define AT91C_US0_RPR AT91C_US0_RPR2122,152857
#define AT91C_US0_RNCR AT91C_US0_RNCR2123,152946
#define AT91C_US0_BRGR AT91C_US0_BRGR2125,153105
#define AT91C_US0_NER AT91C_US0_NER2126,153194
#define AT91C_US0_CR AT91C_US0_CR2127,153273
#define AT91C_US0_IMR AT91C_US0_IMR2128,153350
#define AT91C_US0_FIDI AT91C_US0_FIDI2129,153434
#define AT91C_US0_TTGR AT91C_US0_TTGR2130,153515
#define AT91C_US0_MR AT91C_US0_MR2131,153607
#define AT91C_US0_RTOR AT91C_US0_RTOR2132,153681
#define AT91C_US0_CSR AT91C_US0_CSR2133,153768
#define AT91C_US0_RHR AT91C_US0_RHR2134,153852
#define AT91C_US0_IDR AT91C_US0_IDR2135,153938
#define AT91C_US0_THR AT91C_US0_THR2136,154025
#define AT91C_US0_IF AT91C_US0_IF2137,154114
#define AT91C_US0_IER AT91C_US0_IER2138,154195
#define AT91C_SSC_TNCR AT91C_SSC_TNCR2140,154350
#define AT91C_SSC_RPR AT91C_SSC_RPR2141,154445
#define AT91C_SSC_RNCR AT91C_SSC_RNCR2142,154534
#define AT91C_SSC_TPR AT91C_SSC_TPR2143,154628
#define AT91C_SSC_PTCR AT91C_SSC_PTCR2144,154718
#define AT91C_SSC_TCR AT91C_SSC_TCR2145,154812
#define AT91C_SSC_RCR AT91C_SSC_RCR2146,154902
#define AT91C_SSC_RNPR AT91C_SSC_RNPR2147,154991
#define AT91C_SSC_TNPR AT91C_SSC_TNPR2148,155085
#define AT91C_SSC_PTSR AT91C_SSC_PTSR2149,155180
#define AT91C_SSC_RHR AT91C_SSC_RHR2151,155338
#define AT91C_SSC_RSHR AT91C_SSC_RSHR2152,155423
#define AT91C_SSC_TFMR AT91C_SSC_TFMR2153,155513
#define AT91C_SSC_IDR AT91C_SSC_IDR2154,155602
#define AT91C_SSC_THR AT91C_SSC_THR2155,155689
#define AT91C_SSC_RCMR AT91C_SSC_RCMR2156,155775
#define AT91C_SSC_IER AT91C_SSC_IER2157,155862
#define AT91C_SSC_TSHR AT91C_SSC_TSHR2158,155948
#define AT91C_SSC_SR AT91C_SSC_SR2159,156039
#define AT91C_SSC_CMR AT91C_SSC_CMR2160,156115
#define AT91C_SSC_TCMR AT91C_SSC_TCMR2161,156195
#define AT91C_SSC_CR AT91C_SSC_CR2162,156284
#define AT91C_SSC_IMR AT91C_SSC_IMR2163,156361
#define AT91C_SSC_RFMR AT91C_SSC_RFMR2164,156445
#define AT91C_TWI_IER AT91C_TWI_IER2166,156598
#define AT91C_TWI_CR AT91C_TWI_CR2167,156684
#define AT91C_TWI_SR AT91C_TWI_SR2168,156761
#define AT91C_TWI_IMR AT91C_TWI_IMR2169,156837
#define AT91C_TWI_THR AT91C_TWI_THR2170,156921
#define AT91C_TWI_IDR AT91C_TWI_IDR2171,157007
#define AT91C_TWI_IADR AT91C_TWI_IADR2172,157094
#define AT91C_TWI_MMR AT91C_TWI_MMR2173,157180
#define AT91C_TWI_CWGR AT91C_TWI_CWGR2174,157261
#define AT91C_TWI_RHR AT91C_TWI_RHR2175,157355
#define AT91C_PWMC_CH3_CUPDR AT91C_PWMC_CH3_CUPDR2177,157510
#define AT91C_PWMC_CH3_Reserved AT91C_PWMC_CH3_Reserved2178,157604
#define AT91C_PWMC_CH3_CPRDR AT91C_PWMC_CH3_CPRDR2179,157686
#define AT91C_PWMC_CH3_CDTYR AT91C_PWMC_CH3_CDTYR2180,157780
#define AT91C_PWMC_CH3_CCNTR AT91C_PWMC_CH3_CCNTR2181,157878
#define AT91C_PWMC_CH3_CMR AT91C_PWMC_CH3_CMR2182,157973
#define AT91C_PWMC_CH2_Reserved AT91C_PWMC_CH2_Reserved2184,158133
#define AT91C_PWMC_CH2_CMR AT91C_PWMC_CH2_CMR2185,158215
#define AT91C_PWMC_CH2_CCNTR AT91C_PWMC_CH2_CCNTR2186,158305
#define AT91C_PWMC_CH2_CPRDR AT91C_PWMC_CH2_CPRDR2187,158400
#define AT91C_PWMC_CH2_CUPDR AT91C_PWMC_CH2_CUPDR2188,158494
#define AT91C_PWMC_CH2_CDTYR AT91C_PWMC_CH2_CDTYR2189,158588
#define AT91C_PWMC_CH1_Reserved AT91C_PWMC_CH1_Reserved2191,158756
#define AT91C_PWMC_CH1_CUPDR AT91C_PWMC_CH1_CUPDR2192,158838
#define AT91C_PWMC_CH1_CPRDR AT91C_PWMC_CH1_CPRDR2193,158932
#define AT91C_PWMC_CH1_CCNTR AT91C_PWMC_CH1_CCNTR2194,159026
#define AT91C_PWMC_CH1_CDTYR AT91C_PWMC_CH1_CDTYR2195,159121
#define AT91C_PWMC_CH1_CMR AT91C_PWMC_CH1_CMR2196,159219
#define AT91C_PWMC_CH0_Reserved AT91C_PWMC_CH0_Reserved2198,159379
#define AT91C_PWMC_CH0_CPRDR AT91C_PWMC_CH0_CPRDR2199,159461
#define AT91C_PWMC_CH0_CDTYR AT91C_PWMC_CH0_CDTYR2200,159555
#define AT91C_PWMC_CH0_CMR AT91C_PWMC_CH0_CMR2201,159653
#define AT91C_PWMC_CH0_CUPDR AT91C_PWMC_CH0_CUPDR2202,159743
#define AT91C_PWMC_CH0_CCNTR AT91C_PWMC_CH0_CCNTR2203,159837
#define AT91C_PWMC_IDR AT91C_PWMC_IDR2205,159998
#define AT91C_PWMC_DIS AT91C_PWMC_DIS2206,160091
#define AT91C_PWMC_IER AT91C_PWMC_IER2207,160174
#define AT91C_PWMC_VR AT91C_PWMC_VR2208,160266
#define AT91C_PWMC_ISR AT91C_PWMC_ISR2209,160349
#define AT91C_PWMC_SR AT91C_PWMC_SR2210,160441
#define AT91C_PWMC_IMR AT91C_PWMC_IMR2211,160523
#define AT91C_PWMC_MR AT91C_PWMC_MR2212,160613
#define AT91C_PWMC_ENA AT91C_PWMC_ENA2213,160693
#define AT91C_UDP_IMR AT91C_UDP_IMR2215,160840
#define AT91C_UDP_FADDR AT91C_UDP_FADDR2216,160924
#define AT91C_UDP_NUM AT91C_UDP_NUM2217,161010
#define AT91C_UDP_FDR AT91C_UDP_FDR2218,161092
#define AT91C_UDP_ISR AT91C_UDP_ISR2219,161180
#define AT91C_UDP_CSR AT91C_UDP_CSR2220,161266
#define AT91C_UDP_IDR AT91C_UDP_IDR2221,161363
#define AT91C_UDP_ICR AT91C_UDP_ICR2222,161450
#define AT91C_UDP_RSTEP AT91C_UDP_RSTEP2223,161535
#define AT91C_UDP_TXVC AT91C_UDP_TXVC2224,161619
#define AT91C_UDP_GLBSTATE AT91C_UDP_GLBSTATE2225,161708
#define AT91C_UDP_IER AT91C_UDP_IER2226,161793
#define AT91C_TC0_SR AT91C_TC0_SR2228,161944
#define AT91C_TC0_RC AT91C_TC0_RC2229,162020
#define AT91C_TC0_RB AT91C_TC0_RB2230,162091
#define AT91C_TC0_CCR AT91C_TC0_CCR2231,162162
#define AT91C_TC0_CMR AT91C_TC0_CMR2232,162247
#define AT91C_TC0_IER AT91C_TC0_IER2233,162360
#define AT91C_TC0_RA AT91C_TC0_RA2234,162446
#define AT91C_TC0_IDR AT91C_TC0_IDR2235,162517
#define AT91C_TC0_CV AT91C_TC0_CV2236,162604
#define AT91C_TC0_IMR AT91C_TC0_IMR2237,162678
#define AT91C_TC1_RB AT91C_TC1_RB2239,162827
#define AT91C_TC1_CCR AT91C_TC1_CCR2240,162898
#define AT91C_TC1_IER AT91C_TC1_IER2241,162983
#define AT91C_TC1_IDR AT91C_TC1_IDR2242,163069
#define AT91C_TC1_SR AT91C_TC1_SR2243,163156
#define AT91C_TC1_CMR AT91C_TC1_CMR2244,163232
#define AT91C_TC1_RA AT91C_TC1_RA2245,163345
#define AT91C_TC1_RC AT91C_TC1_RC2246,163416
#define AT91C_TC1_IMR AT91C_TC1_IMR2247,163487
#define AT91C_TC1_CV AT91C_TC1_CV2248,163571
#define AT91C_TC2_CMR AT91C_TC2_CMR2250,163710
#define AT91C_TC2_CCR AT91C_TC2_CCR2251,163823
#define AT91C_TC2_CV AT91C_TC2_CV2252,163908
#define AT91C_TC2_RA AT91C_TC2_RA2253,163982
#define AT91C_TC2_RB AT91C_TC2_RB2254,164053
#define AT91C_TC2_IDR AT91C_TC2_IDR2255,164124
#define AT91C_TC2_IMR AT91C_TC2_IMR2256,164211
#define AT91C_TC2_RC AT91C_TC2_RC2257,164295
#define AT91C_TC2_IER AT91C_TC2_IER2258,164366
#define AT91C_TC2_SR AT91C_TC2_SR2259,164452
#define AT91C_TCB_BMR AT91C_TCB_BMR2261,164593
#define AT91C_TCB_BCR AT91C_TCB_BCR2262,164676
#define AT91C_CAN_MB0_MDL AT91C_CAN_MB0_MDL2264,164831
#define AT91C_CAN_MB0_MAM AT91C_CAN_MB0_MAM2265,164923
#define AT91C_CAN_MB0_MCR AT91C_CAN_MB0_MCR2266,165022
#define AT91C_CAN_MB0_MID AT91C_CAN_MB0_MID2267,165113
#define AT91C_CAN_MB0_MSR AT91C_CAN_MB0_MSR2268,165199
#define AT91C_CAN_MB0_MFID AT91C_CAN_MB0_MFID2269,165289
#define AT91C_CAN_MB0_MDH AT91C_CAN_MB0_MDH2270,165383
#define AT91C_CAN_MB0_MMR AT91C_CAN_MB0_MMR2271,165476
#define AT91C_CAN_MB1_MDL AT91C_CAN_MB1_MDL2273,165633
#define AT91C_CAN_MB1_MID AT91C_CAN_MB1_MID2274,165725
#define AT91C_CAN_MB1_MMR AT91C_CAN_MB1_MMR2275,165811
#define AT91C_CAN_MB1_MSR AT91C_CAN_MB1_MSR2276,165899
#define AT91C_CAN_MB1_MAM AT91C_CAN_MB1_MAM2277,165989
#define AT91C_CAN_MB1_MDH AT91C_CAN_MB1_MDH2278,166088
#define AT91C_CAN_MB1_MCR AT91C_CAN_MB1_MCR2279,166181
#define AT91C_CAN_MB1_MFID AT91C_CAN_MB1_MFID2280,166272
#define AT91C_CAN_MB2_MCR AT91C_CAN_MB2_MCR2282,166435
#define AT91C_CAN_MB2_MDH AT91C_CAN_MB2_MDH2283,166526
#define AT91C_CAN_MB2_MID AT91C_CAN_MB2_MID2284,166619
#define AT91C_CAN_MB2_MDL AT91C_CAN_MB2_MDL2285,166705
#define AT91C_CAN_MB2_MMR AT91C_CAN_MB2_MMR2286,166797
#define AT91C_CAN_MB2_MAM AT91C_CAN_MB2_MAM2287,166885
#define AT91C_CAN_MB2_MFID AT91C_CAN_MB2_MFID2288,166984
#define AT91C_CAN_MB2_MSR AT91C_CAN_MB2_MSR2289,167078
#define AT91C_CAN_MB3_MFID AT91C_CAN_MB3_MFID2291,167237
#define AT91C_CAN_MB3_MAM AT91C_CAN_MB3_MAM2292,167331
#define AT91C_CAN_MB3_MID AT91C_CAN_MB3_MID2293,167430
#define AT91C_CAN_MB3_MCR AT91C_CAN_MB3_MCR2294,167516
#define AT91C_CAN_MB3_MMR AT91C_CAN_MB3_MMR2295,167607
#define AT91C_CAN_MB3_MSR AT91C_CAN_MB3_MSR2296,167695
#define AT91C_CAN_MB3_MDL AT91C_CAN_MB3_MDL2297,167785
#define AT91C_CAN_MB3_MDH AT91C_CAN_MB3_MDH2298,167877
#define AT91C_CAN_MB4_MID AT91C_CAN_MB4_MID2300,168039
#define AT91C_CAN_MB4_MMR AT91C_CAN_MB4_MMR2301,168125
#define AT91C_CAN_MB4_MDH AT91C_CAN_MB4_MDH2302,168213
#define AT91C_CAN_MB4_MFID AT91C_CAN_MB4_MFID2303,168306
#define AT91C_CAN_MB4_MSR AT91C_CAN_MB4_MSR2304,168400
#define AT91C_CAN_MB4_MCR AT91C_CAN_MB4_MCR2305,168490
#define AT91C_CAN_MB4_MDL AT91C_CAN_MB4_MDL2306,168581
#define AT91C_CAN_MB4_MAM AT91C_CAN_MB4_MAM2307,168673
#define AT91C_CAN_MB5_MSR AT91C_CAN_MB5_MSR2309,168841
#define AT91C_CAN_MB5_MCR AT91C_CAN_MB5_MCR2310,168931
#define AT91C_CAN_MB5_MFID AT91C_CAN_MB5_MFID2311,169022
#define AT91C_CAN_MB5_MDH AT91C_CAN_MB5_MDH2312,169116
#define AT91C_CAN_MB5_MID AT91C_CAN_MB5_MID2313,169209
#define AT91C_CAN_MB5_MMR AT91C_CAN_MB5_MMR2314,169295
#define AT91C_CAN_MB5_MDL AT91C_CAN_MB5_MDL2315,169383
#define AT91C_CAN_MB5_MAM AT91C_CAN_MB5_MAM2316,169475
#define AT91C_CAN_MB6_MFID AT91C_CAN_MB6_MFID2318,169643
#define AT91C_CAN_MB6_MID AT91C_CAN_MB6_MID2319,169737
#define AT91C_CAN_MB6_MAM AT91C_CAN_MB6_MAM2320,169823
#define AT91C_CAN_MB6_MSR AT91C_CAN_MB6_MSR2321,169922
#define AT91C_CAN_MB6_MDL AT91C_CAN_MB6_MDL2322,170012
#define AT91C_CAN_MB6_MCR AT91C_CAN_MB6_MCR2323,170104
#define AT91C_CAN_MB6_MDH AT91C_CAN_MB6_MDH2324,170195
#define AT91C_CAN_MB6_MMR AT91C_CAN_MB6_MMR2325,170288
#define AT91C_CAN_MB7_MCR AT91C_CAN_MB7_MCR2327,170445
#define AT91C_CAN_MB7_MDH AT91C_CAN_MB7_MDH2328,170536
#define AT91C_CAN_MB7_MFID AT91C_CAN_MB7_MFID2329,170629
#define AT91C_CAN_MB7_MDL AT91C_CAN_MB7_MDL2330,170723
#define AT91C_CAN_MB7_MID AT91C_CAN_MB7_MID2331,170815
#define AT91C_CAN_MB7_MMR AT91C_CAN_MB7_MMR2332,170901
#define AT91C_CAN_MB7_MAM AT91C_CAN_MB7_MAM2333,170989
#define AT91C_CAN_MB7_MSR AT91C_CAN_MB7_MSR2334,171088
#define AT91C_CAN_TCR AT91C_CAN_TCR2336,171243
#define AT91C_CAN_IMR AT91C_CAN_IMR2337,171329
#define AT91C_CAN_IER AT91C_CAN_IER2338,171413
#define AT91C_CAN_ECR AT91C_CAN_ECR2339,171499
#define AT91C_CAN_TIMESTP AT91C_CAN_TIMESTP2340,171582
#define AT91C_CAN_MR AT91C_CAN_MR2341,171664
#define AT91C_CAN_IDR AT91C_CAN_IDR2342,171738
#define AT91C_CAN_ACR AT91C_CAN_ACR2343,171825
#define AT91C_CAN_TIM AT91C_CAN_TIM2344,171908
#define AT91C_CAN_SR AT91C_CAN_SR2345,171983
#define AT91C_CAN_BR AT91C_CAN_BR2346,172059
#define AT91C_CAN_VR AT91C_CAN_VR2347,172137
#define AT91C_EMAC_ISR AT91C_EMAC_ISR2349,172280
#define AT91C_EMAC_SA4H AT91C_EMAC_SA4H2350,172367
#define AT91C_EMAC_SA1L AT91C_EMAC_SA1L2351,172465
#define AT91C_EMAC_ELE AT91C_EMAC_ELE2352,172567
#define AT91C_EMAC_LCOL AT91C_EMAC_LCOL2353,172661
#define AT91C_EMAC_RLE AT91C_EMAC_RLE2354,172746
#define AT91C_EMAC_WOL AT91C_EMAC_WOL2355,172846
#define AT91C_EMAC_DTF AT91C_EMAC_DTF2356,172928
#define AT91C_EMAC_TUND AT91C_EMAC_TUND2357,173026
#define AT91C_EMAC_NCR AT91C_EMAC_NCR2358,173120
#define AT91C_EMAC_SA4L AT91C_EMAC_SA4L2359,173206
#define AT91C_EMAC_RSR AT91C_EMAC_RSR2360,173308
#define AT91C_EMAC_SA3L AT91C_EMAC_SA3L2361,173393
#define AT91C_EMAC_TSR AT91C_EMAC_TSR2362,173495
#define AT91C_EMAC_IDR AT91C_EMAC_IDR2363,173581
#define AT91C_EMAC_RSE AT91C_EMAC_RSE2364,173669
#define AT91C_EMAC_ECOL AT91C_EMAC_ECOL2365,173761
#define AT91C_EMAC_TID AT91C_EMAC_TID2366,173851
#define AT91C_EMAC_HRB AT91C_EMAC_HRB2367,173938
#define AT91C_EMAC_TBQP AT91C_EMAC_TBQP2368,174025
#define AT91C_EMAC_USRIO AT91C_EMAC_USRIO2369,174116
#define AT91C_EMAC_PTR AT91C_EMAC_PTR2370,174205
#define AT91C_EMAC_SA2H AT91C_EMAC_SA2H2371,174286
#define AT91C_EMAC_ROV AT91C_EMAC_ROV2372,174384
#define AT91C_EMAC_ALE AT91C_EMAC_ALE2373,174477
#define AT91C_EMAC_RJA AT91C_EMAC_RJA2374,174563
#define AT91C_EMAC_RBQP AT91C_EMAC_RBQP2375,174649
#define AT91C_EMAC_TPF AT91C_EMAC_TPF2376,174739
#define AT91C_EMAC_NCFGR AT91C_EMAC_NCFGR2377,174834
#define AT91C_EMAC_HRT AT91C_EMAC_HRT2378,174927
#define AT91C_EMAC_USF AT91C_EMAC_USF2379,175012
#define AT91C_EMAC_FCSE AT91C_EMAC_FCSE2380,175099
#define AT91C_EMAC_TPQ AT91C_EMAC_TPQ2381,175196
#define AT91C_EMAC_MAN AT91C_EMAC_MAN2382,175289
#define AT91C_EMAC_FTO AT91C_EMAC_FTO2383,175375
#define AT91C_EMAC_REV AT91C_EMAC_REV2384,175467
#define AT91C_EMAC_IMR AT91C_EMAC_IMR2385,175546
#define AT91C_EMAC_SCF AT91C_EMAC_SCF2386,175631
#define AT91C_EMAC_PFR AT91C_EMAC_PFR2387,175724
#define AT91C_EMAC_MCF AT91C_EMAC_MCF2388,175816
#define AT91C_EMAC_NSR AT91C_EMAC_NSR2389,175911
#define AT91C_EMAC_SA2L AT91C_EMAC_SA2L2390,175996
#define AT91C_EMAC_FRO AT91C_EMAC_FRO2391,176098
#define AT91C_EMAC_IER AT91C_EMAC_IER2392,176187
#define AT91C_EMAC_SA1H AT91C_EMAC_SA1H2393,176274
#define AT91C_EMAC_CSE AT91C_EMAC_CSE2394,176372
#define AT91C_EMAC_SA3H AT91C_EMAC_SA3H2395,176462
#define AT91C_EMAC_RRE AT91C_EMAC_RRE2396,176560
#define AT91C_EMAC_STE AT91C_EMAC_STE2397,176654
#define AT91C_ADC_PTSR AT91C_ADC_PTSR2399,176808
#define AT91C_ADC_PTCR AT91C_ADC_PTCR2400,176901
#define AT91C_ADC_TNPR AT91C_ADC_TNPR2401,176995
#define AT91C_ADC_TNCR AT91C_ADC_TNCR2402,177090
#define AT91C_ADC_RNPR AT91C_ADC_RNPR2403,177185
#define AT91C_ADC_RNCR AT91C_ADC_RNCR2404,177279
#define AT91C_ADC_RPR AT91C_ADC_RPR2405,177373
#define AT91C_ADC_TCR AT91C_ADC_TCR2406,177462
#define AT91C_ADC_TPR AT91C_ADC_TPR2407,177552
#define AT91C_ADC_RCR AT91C_ADC_RCR2408,177642
#define AT91C_ADC_CDR2 AT91C_ADC_CDR22410,177796
#define AT91C_ADC_CDR3 AT91C_ADC_CDR32411,177884
#define AT91C_ADC_CDR0 AT91C_ADC_CDR02412,177972
#define AT91C_ADC_CDR5 AT91C_ADC_CDR52413,178060
#define AT91C_ADC_CHDR AT91C_ADC_CHDR2414,178148
#define AT91C_ADC_SR AT91C_ADC_SR2415,178237
#define AT91C_ADC_CDR4 AT91C_ADC_CDR42416,178317
#define AT91C_ADC_CDR1 AT91C_ADC_CDR12417,178405
#define AT91C_ADC_LCDR AT91C_ADC_LCDR2418,178493
#define AT91C_ADC_IDR AT91C_ADC_IDR2419,178586
#define AT91C_ADC_CR AT91C_ADC_CR2420,178677
#define AT91C_ADC_CDR7 AT91C_ADC_CDR72421,178758
#define AT91C_ADC_CDR6 AT91C_ADC_CDR62422,178846
#define AT91C_ADC_IER AT91C_ADC_IER2423,178934
#define AT91C_ADC_CHER AT91C_ADC_CHER2424,179024
#define AT91C_ADC_CHSR AT91C_ADC_CHSR2425,179112
#define AT91C_ADC_MR AT91C_ADC_MR2426,179200
#define AT91C_ADC_IMR AT91C_ADC_IMR2427,179278
#define AT91C_AES_TPR AT91C_AES_TPR2429,179435
#define AT91C_AES_PTCR AT91C_AES_PTCR2430,179525
#define AT91C_AES_RNPR AT91C_AES_RNPR2431,179619
#define AT91C_AES_TNCR AT91C_AES_TNCR2432,179713
#define AT91C_AES_TCR AT91C_AES_TCR2433,179808
#define AT91C_AES_RCR AT91C_AES_RCR2434,179898
#define AT91C_AES_RNCR AT91C_AES_RNCR2435,179987
#define AT91C_AES_TNPR AT91C_AES_TNPR2436,180081
#define AT91C_AES_RPR AT91C_AES_RPR2437,180176
#define AT91C_AES_PTSR AT91C_AES_PTSR2438,180265
#define AT91C_AES_IVxR AT91C_AES_IVxR2440,180423
#define AT91C_AES_MR AT91C_AES_MR2441,180516
#define AT91C_AES_VR AT91C_AES_VR2442,180590
#define AT91C_AES_ODATAxR AT91C_AES_ODATAxR2443,180671
#define AT91C_AES_IDATAxR AT91C_AES_IDATAxR2444,180756
#define AT91C_AES_CR AT91C_AES_CR2445,180840
#define AT91C_AES_IDR AT91C_AES_IDR2446,180917
#define AT91C_AES_IMR AT91C_AES_IMR2447,181004
#define AT91C_AES_IER AT91C_AES_IER2448,181088
#define AT91C_AES_KEYWxR AT91C_AES_KEYWxR2449,181174
#define AT91C_AES_ISR AT91C_AES_ISR2450,181255
#define AT91C_TDES_RNCR AT91C_TDES_RNCR2452,181411
#define AT91C_TDES_TCR AT91C_TDES_TCR2453,181506
#define AT91C_TDES_RCR AT91C_TDES_RCR2454,181597
#define AT91C_TDES_TNPR AT91C_TDES_TNPR2455,181687
#define AT91C_TDES_RNPR AT91C_TDES_RNPR2456,181783
#define AT91C_TDES_RPR AT91C_TDES_RPR2457,181878
#define AT91C_TDES_TNCR AT91C_TDES_TNCR2458,181968
#define AT91C_TDES_TPR AT91C_TDES_TPR2459,182064
#define AT91C_TDES_PTSR AT91C_TDES_PTSR2460,182155
#define AT91C_TDES_PTCR AT91C_TDES_PTCR2461,182249
#define AT91C_TDES_KEY2WxR AT91C_TDES_KEY2WxR2463,182410
#define AT91C_TDES_KEY3WxR AT91C_TDES_KEY3WxR2464,182496
#define AT91C_TDES_IDR AT91C_TDES_IDR2465,182582
#define AT91C_TDES_VR AT91C_TDES_VR2466,182670
#define AT91C_TDES_IVxR AT91C_TDES_IVxR2467,182753
#define AT91C_TDES_ODATAxR AT91C_TDES_ODATAxR2468,182847
#define AT91C_TDES_IMR AT91C_TDES_IMR2469,182934
#define AT91C_TDES_MR AT91C_TDES_MR2470,183019
#define AT91C_TDES_CR AT91C_TDES_CR2471,183094
#define AT91C_TDES_IER AT91C_TDES_IER2472,183172
#define AT91C_TDES_ISR AT91C_TDES_ISR2473,183259
#define AT91C_TDES_IDATAxR AT91C_TDES_IDATAxR2474,183346
#define AT91C_TDES_KEY1WxR AT91C_TDES_KEY1WxR2475,183432
#define AT91C_PIO_PA0 AT91C_PIO_PA02480,183731
#define AT91C_PA0_RXD0 AT91C_PA0_RXD02481,183810
#define AT91C_PIO_PA1 AT91C_PIO_PA12482,183893
#define AT91C_PA1_TXD0 AT91C_PA1_TXD02483,183972
#define AT91C_PIO_PA10 AT91C_PIO_PA102484,184056
#define AT91C_PA10_TWD AT91C_PA10_TWD2485,184136
#define AT91C_PIO_PA11 AT91C_PIO_PA112486,184225
#define AT91C_PA11_TWCK AT91C_PA11_TWCK2487,184305
#define AT91C_PIO_PA12 AT91C_PIO_PA122488,184395
#define AT91C_PA12_NPCS00 AT91C_PA12_NPCS002489,184475
#define AT91C_PIO_PA13 AT91C_PIO_PA132490,184570
#define AT91C_PA13_NPCS01 AT91C_PA13_NPCS012491,184650
#define AT91C_PA13_PCK1 AT91C_PA13_PCK12492,184745
#define AT91C_PIO_PA14 AT91C_PIO_PA142493,184841
#define AT91C_PA14_NPCS02 AT91C_PA14_NPCS022494,184921
#define AT91C_PA14_IRQ1 AT91C_PA14_IRQ12495,185016
#define AT91C_PIO_PA15 AT91C_PIO_PA152496,185101
#define AT91C_PA15_NPCS03 AT91C_PA15_NPCS032497,185181
#define AT91C_PA15_TCLK2 AT91C_PA15_TCLK22498,185276
#define AT91C_PIO_PA16 AT91C_PIO_PA162499,185377
#define AT91C_PA16_MISO0 AT91C_PA16_MISO02500,185457
#define AT91C_PIO_PA17 AT91C_PIO_PA172501,185543
#define AT91C_PA17_MOSI0 AT91C_PA17_MOSI02502,185623
#define AT91C_PIO_PA18 AT91C_PIO_PA182503,185710
#define AT91C_PA18_SPCK0 AT91C_PA18_SPCK02504,185790
#define AT91C_PIO_PA19 AT91C_PIO_PA192505,185873
#define AT91C_PA19_CANRX AT91C_PA19_CANRX2506,185953
#define AT91C_PIO_PA2 AT91C_PIO_PA22507,186029
#define AT91C_PA2_SCK0 AT91C_PA2_SCK02508,186108
#define AT91C_PA2_NPCS11 AT91C_PA2_NPCS112509,186191
#define AT91C_PIO_PA20 AT91C_PIO_PA202510,186284
#define AT91C_PA20_CANTX AT91C_PA20_CANTX2511,186364
#define AT91C_PIO_PA21 AT91C_PIO_PA212512,186441
#define AT91C_PA21_TF AT91C_PA21_TF2513,186521
#define AT91C_PA21_NPCS10 AT91C_PA21_NPCS102514,186609
#define AT91C_PIO_PA22 AT91C_PIO_PA222515,186704
#define AT91C_PA22_TK AT91C_PA22_TK2516,186784
#define AT91C_PA22_SPCK1 AT91C_PA22_SPCK12517,186867
#define AT91C_PIO_PA23 AT91C_PIO_PA232518,186950
#define AT91C_PA23_TD AT91C_PA23_TD2519,187030
#define AT91C_PA23_MOSI1 AT91C_PA23_MOSI12520,187112
#define AT91C_PIO_PA24 AT91C_PIO_PA242521,187199
#define AT91C_PA24_RD AT91C_PA24_RD2522,187279
#define AT91C_PA24_MISO1 AT91C_PA24_MISO12523,187360
#define AT91C_PIO_PA25 AT91C_PIO_PA252524,187446
#define AT91C_PA25_RK AT91C_PA25_RK2525,187526
#define AT91C_PA25_NPCS11 AT91C_PA25_NPCS112526,187608
#define AT91C_PIO_PA26 AT91C_PIO_PA262527,187703
#define AT91C_PA26_RF AT91C_PA26_RF2528,187783
#define AT91C_PA26_NPCS12 AT91C_PA26_NPCS122529,187870
#define AT91C_PIO_PA27 AT91C_PIO_PA272530,187965
#define AT91C_PA27_DRXD AT91C_PA27_DRXD2531,188045
#define AT91C_PA27_PCK3 AT91C_PA27_PCK32532,188133
#define AT91C_PIO_PA28 AT91C_PIO_PA282533,188229
#define AT91C_PA28_DTXD AT91C_PA28_DTXD2534,188309
#define AT91C_PIO_PA29 AT91C_PIO_PA292535,188398
#define AT91C_PA29_FIQ AT91C_PA29_FIQ2536,188478
#define AT91C_PA29_NPCS13 AT91C_PA29_NPCS132537,188567
#define AT91C_PIO_PA3 AT91C_PIO_PA32538,188662
#define AT91C_PA3_RTS0 AT91C_PA3_RTS02539,188741
#define AT91C_PA3_NPCS12 AT91C_PA3_NPCS122540,188825
#define AT91C_PIO_PA30 AT91C_PIO_PA302541,188918
#define AT91C_PA30_IRQ0 AT91C_PA30_IRQ02542,188998
#define AT91C_PA30_PCK2 AT91C_PA30_PCK22543,189083
#define AT91C_PIO_PA4 AT91C_PIO_PA42544,189179
#define AT91C_PA4_CTS0 AT91C_PA4_CTS02545,189258
#define AT91C_PA4_NPCS13 AT91C_PA4_NPCS132546,189342
#define AT91C_PIO_PA5 AT91C_PIO_PA52547,189435
#define AT91C_PA5_RXD1 AT91C_PA5_RXD12548,189514
#define AT91C_PIO_PA6 AT91C_PIO_PA62549,189597
#define AT91C_PA6_TXD1 AT91C_PA6_TXD12550,189676
#define AT91C_PIO_PA7 AT91C_PIO_PA72551,189760
#define AT91C_PA7_SCK1 AT91C_PA7_SCK12552,189839
#define AT91C_PA7_NPCS01 AT91C_PA7_NPCS012553,189922
#define AT91C_PIO_PA8 AT91C_PIO_PA82554,190015
#define AT91C_PA8_RTS1 AT91C_PA8_RTS12555,190094
#define AT91C_PA8_NPCS02 AT91C_PA8_NPCS022556,190178
#define AT91C_PIO_PA9 AT91C_PIO_PA92557,190271
#define AT91C_PA9_CTS1 AT91C_PA9_CTS12558,190350
#define AT91C_PA9_NPCS03 AT91C_PA9_NPCS032559,190434
#define AT91C_PIO_PB0 AT91C_PIO_PB02560,190527
#define AT91C_PB0_ETXCK_EREFCK AT91C_PB0_ETXCK_EREFCK2561,190606
#define AT91C_PB0_PCK0 AT91C_PB0_PCK02562,190716
#define AT91C_PIO_PB1 AT91C_PIO_PB12563,190810
#define AT91C_PB1_ETXEN AT91C_PB1_ETXEN2564,190889
#define AT91C_PIO_PB10 AT91C_PIO_PB102565,190980
#define AT91C_PB10_ETX2 AT91C_PB10_ETX22566,191060
#define AT91C_PB10_NPCS11 AT91C_PB10_NPCS112567,191153
#define AT91C_PIO_PB11 AT91C_PIO_PB112568,191248
#define AT91C_PB11_ETX3 AT91C_PB11_ETX32569,191328
#define AT91C_PB11_NPCS12 AT91C_PB11_NPCS122570,191421
#define AT91C_PIO_PB12 AT91C_PIO_PB122571,191516
#define AT91C_PB12_ETXER AT91C_PB12_ETXER2572,191596
#define AT91C_PB12_TCLK0 AT91C_PB12_TCLK02573,191696
#define AT91C_PIO_PB13 AT91C_PIO_PB132574,191797
#define AT91C_PB13_ERX2 AT91C_PB13_ERX22575,191877
#define AT91C_PB13_NPCS01 AT91C_PB13_NPCS012576,191969
#define AT91C_PIO_PB14 AT91C_PIO_PB142577,192064
#define AT91C_PB14_ERX3 AT91C_PB14_ERX32578,192144
#define AT91C_PB14_NPCS02 AT91C_PB14_NPCS022579,192236
#define AT91C_PIO_PB15 AT91C_PIO_PB152580,192331
#define AT91C_PB15_ERXDV AT91C_PB15_ERXDV2581,192411
#define AT91C_PIO_PB16 AT91C_PIO_PB162582,192507
#define AT91C_PB16_ECOL AT91C_PB16_ECOL2583,192587
#define AT91C_PB16_NPCS13 AT91C_PB16_NPCS132584,192683
#define AT91C_PIO_PB17 AT91C_PIO_PB172585,192778
#define AT91C_PB17_ERXCK AT91C_PB17_ERXCK2586,192858
#define AT91C_PB17_NPCS03 AT91C_PB17_NPCS032587,192949
#define AT91C_PIO_PB18 AT91C_PIO_PB182588,193044
#define AT91C_PB18_EF100 AT91C_PB18_EF1002589,193124
#define AT91C_PB18_ADTRG AT91C_PB18_ADTRG2590,193221
#define AT91C_PIO_PB19 AT91C_PIO_PB192591,193306
#define AT91C_PB19_PWM0 AT91C_PB19_PWM02592,193386
#define AT91C_PB19_TCLK1 AT91C_PB19_TCLK12593,193464
#define AT91C_PIO_PB2 AT91C_PIO_PB22594,193565
#define AT91C_PB2_ETX0 AT91C_PB2_ETX02595,193644
#define AT91C_PIO_PB20 AT91C_PIO_PB202596,193735
#define AT91C_PB20_PWM1 AT91C_PB20_PWM12597,193815
#define AT91C_PB20_PCK0 AT91C_PB20_PCK02598,193893
#define AT91C_PIO_PB21 AT91C_PIO_PB212599,193989
#define AT91C_PB21_PWM2 AT91C_PB21_PWM22600,194069
#define AT91C_PB21_PCK1 AT91C_PB21_PCK12601,194147
#define AT91C_PIO_PB22 AT91C_PIO_PB222602,194243
#define AT91C_PB22_PWM3 AT91C_PB22_PWM32603,194323
#define AT91C_PB22_PCK2 AT91C_PB22_PCK22604,194401
#define AT91C_PIO_PB23 AT91C_PIO_PB232605,194497
#define AT91C_PB23_TIOA0 AT91C_PB23_TIOA02606,194577
#define AT91C_PB23_DCD1 AT91C_PB23_DCD12607,194686
#define AT91C_PIO_PB24 AT91C_PIO_PB242608,194778
#define AT91C_PB24_TIOB0 AT91C_PB24_TIOB02609,194858
#define AT91C_PB24_DSR1 AT91C_PB24_DSR12610,194967
#define AT91C_PIO_PB25 AT91C_PIO_PB252611,195054
#define AT91C_PB25_TIOA1 AT91C_PB25_TIOA12612,195134
#define AT91C_PB25_DTR1 AT91C_PB25_DTR12613,195243
#define AT91C_PIO_PB26 AT91C_PIO_PB262614,195335
#define AT91C_PB26_TIOB1 AT91C_PB26_TIOB12615,195415
#define AT91C_PB26_RI1 AT91C_PB26_RI12616,195524
#define AT91C_PIO_PB27 AT91C_PIO_PB272617,195611
#define AT91C_PB27_TIOA2 AT91C_PB27_TIOA22618,195691
#define AT91C_PB27_PWM0 AT91C_PB27_PWM02619,195800
#define AT91C_PIO_PB28 AT91C_PIO_PB282620,195878
#define AT91C_PB28_TIOB2 AT91C_PB28_TIOB22621,195958
#define AT91C_PB28_PWM1 AT91C_PB28_PWM12622,196067
#define AT91C_PIO_PB29 AT91C_PIO_PB292623,196145
#define AT91C_PB29_PCK1 AT91C_PB29_PCK12624,196225
#define AT91C_PB29_PWM2 AT91C_PB29_PWM22625,196321
#define AT91C_PIO_PB3 AT91C_PIO_PB32626,196399
#define AT91C_PB3_ETX1 AT91C_PB3_ETX12627,196478
#define AT91C_PIO_PB30 AT91C_PIO_PB302628,196569
#define AT91C_PB30_PCK2 AT91C_PB30_PCK22629,196649
#define AT91C_PB30_PWM3 AT91C_PB30_PWM32630,196745
#define AT91C_PIO_PB4 AT91C_PIO_PB42631,196823
#define AT91C_PB4_ECRS_ECRSDV AT91C_PB4_ECRS_ECRSDV2632,196902
#define AT91C_PIO_PB5 AT91C_PIO_PB52633,197023
#define AT91C_PB5_ERX0 AT91C_PB5_ERX02634,197102
#define AT91C_PIO_PB6 AT91C_PIO_PB62635,197192
#define AT91C_PB6_ERX1 AT91C_PB6_ERX12636,197271
#define AT91C_PIO_PB7 AT91C_PIO_PB72637,197361
#define AT91C_PB7_ERXER AT91C_PB7_ERXER2638,197440
#define AT91C_PIO_PB8 AT91C_PIO_PB82639,197529
#define AT91C_PB8_EMDC AT91C_PB8_EMDC2640,197608
#define AT91C_PIO_PB9 AT91C_PIO_PB92641,197705
#define AT91C_PB9_EMDIO AT91C_PB9_EMDIO2642,197784
#define AT91C_ID_FIQ AT91C_ID_FIQ2647,198111
#define AT91C_ID_SYS AT91C_ID_SYS2648,198194
#define AT91C_ID_PIOA AT91C_ID_PIOA2649,198259
#define AT91C_ID_PIOB AT91C_ID_PIOB2650,198331
#define AT91C_ID_SPI0 AT91C_ID_SPI02651,198403
#define AT91C_ID_SPI1 AT91C_ID_SPI12652,198480
#define AT91C_ID_US0 AT91C_ID_US02653,198557
#define AT91C_ID_US1 AT91C_ID_US12654,198612
#define AT91C_ID_SSC AT91C_ID_SSC2655,198667
#define AT91C_ID_TWI AT91C_ID_TWI2656,198744
#define AT91C_ID_PWMC AT91C_ID_PWMC2657,198810
#define AT91C_ID_UDP AT91C_ID_UDP2658,198872
#define AT91C_ID_TC0 AT91C_ID_TC02659,198935
#define AT91C_ID_TC1 AT91C_ID_TC12660,198998
#define AT91C_ID_TC2 AT91C_ID_TC22661,199061
#define AT91C_ID_CAN AT91C_ID_CAN2662,199124
#define AT91C_ID_EMAC AT91C_ID_EMAC2663,199203
#define AT91C_ID_ADC AT91C_ID_ADC2664,199263
#define AT91C_ID_AES AT91C_ID_AES2665,199338
#define AT91C_ID_TDES AT91C_ID_TDES2666,199422
#define AT91C_ID_20_Reserved AT91C_ID_20_Reserved2667,199501
#define AT91C_ID_21_Reserved AT91C_ID_21_Reserved2668,199562
#define AT91C_ID_22_Reserved AT91C_ID_22_Reserved2669,199623
#define AT91C_ID_23_Reserved AT91C_ID_23_Reserved2670,199684
#define AT91C_ID_24_Reserved AT91C_ID_24_Reserved2671,199745
#define AT91C_ID_25_Reserved AT91C_ID_25_Reserved2672,199806
#define AT91C_ID_26_Reserved AT91C_ID_26_Reserved2673,199867
#define AT91C_ID_27_Reserved AT91C_ID_27_Reserved2674,199928
#define AT91C_ID_28_Reserved AT91C_ID_28_Reserved2675,199989
#define AT91C_ID_29_Reserved AT91C_ID_29_Reserved2676,200050
#define AT91C_ID_IRQ0 AT91C_ID_IRQ02677,200111
#define AT91C_ID_IRQ1 AT91C_ID_IRQ12678,200195
#define AT91C_BASE_SYS AT91C_BASE_SYS2683,200501
#define AT91C_BASE_AIC AT91C_BASE_AIC2684,200579
#define AT91C_BASE_PDC_DBGU AT91C_BASE_PDC_DBGU2685,200657
#define AT91C_BASE_DBGU AT91C_BASE_DBGU2686,200740
#define AT91C_BASE_PIOA AT91C_BASE_PIOA2687,200820
#define AT91C_BASE_PIOB AT91C_BASE_PIOB2688,200899
#define AT91C_BASE_CKGR AT91C_BASE_CKGR2689,200978
#define AT91C_BASE_PMC AT91C_BASE_PMC2690,201058
#define AT91C_BASE_RSTC AT91C_BASE_RSTC2691,201136
#define AT91C_BASE_RTTC AT91C_BASE_RTTC2692,201216
#define AT91C_BASE_PITC AT91C_BASE_PITC2693,201296
#define AT91C_BASE_WDTC AT91C_BASE_WDTC2694,201376
#define AT91C_BASE_VREG AT91C_BASE_VREG2695,201456
#define AT91C_BASE_MC AT91C_BASE_MC2696,201536
#define AT91C_BASE_PDC_SPI1 AT91C_BASE_PDC_SPI12697,201612
#define AT91C_BASE_SPI1 AT91C_BASE_SPI12698,201695
#define AT91C_BASE_PDC_SPI0 AT91C_BASE_PDC_SPI02699,201774
#define AT91C_BASE_SPI0 AT91C_BASE_SPI02700,201857
#define AT91C_BASE_PDC_US1 AT91C_BASE_PDC_US12701,201936
#define AT91C_BASE_US1 AT91C_BASE_US12702,202018
#define AT91C_BASE_PDC_US0 AT91C_BASE_PDC_US02703,202098
#define AT91C_BASE_US0 AT91C_BASE_US02704,202180
#define AT91C_BASE_PDC_SSC AT91C_BASE_PDC_SSC2705,202260
#define AT91C_BASE_SSC AT91C_BASE_SSC2706,202342
#define AT91C_BASE_TWI AT91C_BASE_TWI2707,202420
#define AT91C_BASE_PWMC_CH3 AT91C_BASE_PWMC_CH32708,202498
#define AT91C_BASE_PWMC_CH2 AT91C_BASE_PWMC_CH22709,202585
#define AT91C_BASE_PWMC_CH1 AT91C_BASE_PWMC_CH12710,202672
#define AT91C_BASE_PWMC_CH0 AT91C_BASE_PWMC_CH02711,202759
#define AT91C_BASE_PWMC AT91C_BASE_PWMC2712,202846
#define AT91C_BASE_UDP AT91C_BASE_UDP2713,202926
#define AT91C_BASE_TC0 AT91C_BASE_TC02714,203004
#define AT91C_BASE_TC1 AT91C_BASE_TC12715,203081
#define AT91C_BASE_TC2 AT91C_BASE_TC22716,203158
#define AT91C_BASE_TCB AT91C_BASE_TCB2717,203235
#define AT91C_BASE_CAN_MB0 AT91C_BASE_CAN_MB02718,203313
#define AT91C_BASE_CAN_MB1 AT91C_BASE_CAN_MB12719,203398
#define AT91C_BASE_CAN_MB2 AT91C_BASE_CAN_MB22720,203483
#define AT91C_BASE_CAN_MB3 AT91C_BASE_CAN_MB32721,203568
#define AT91C_BASE_CAN_MB4 AT91C_BASE_CAN_MB42722,203653
#define AT91C_BASE_CAN_MB5 AT91C_BASE_CAN_MB52723,203738
#define AT91C_BASE_CAN_MB6 AT91C_BASE_CAN_MB62724,203823
#define AT91C_BASE_CAN_MB7 AT91C_BASE_CAN_MB72725,203908
#define AT91C_BASE_CAN AT91C_BASE_CAN2726,203993
#define AT91C_BASE_EMAC AT91C_BASE_EMAC2727,204071
#define AT91C_BASE_PDC_ADC AT91C_BASE_PDC_ADC2728,204151
#define AT91C_BASE_ADC AT91C_BASE_ADC2729,204233
#define AT91C_BASE_PDC_AES AT91C_BASE_PDC_AES2730,204311
#define AT91C_BASE_AES AT91C_BASE_AES2731,204393
#define AT91C_BASE_PDC_TDES AT91C_BASE_PDC_TDES2732,204471
#define AT91C_BASE_TDES AT91C_BASE_TDES2733,204554
#define AT91C_ISRAM	AT91C_ISRAM2738,204858
#define AT91C_ISRAM_SIZE	AT91C_ISRAM_SIZE2739,204932
#define AT91C_IFLASH	AT91C_IFLASH2740,205027
#define AT91C_IFLASH_SIZE	AT91C_IFLASH_SIZE2741,205101
					  as soon as the receiver is enabled,enabled4295,242595

os/core/ARM7_AT91SAM7S/portmacro.h,1416
#define PORTMACRO_HPORTMACRO_H74,3127
#define portCHAR	portCHAR92,3518
#define portFLOAT	portFLOAT93,3541
#define portDOUBLE	portDOUBLE94,3566
#define portLONG	portLONG95,3593
#define portSHORT	portSHORT96,3616
#define portSTACK_TYPE	portSTACK_TYPE97,3641
#define portBASE_TYPE	portBASE_TYPE98,3682
  typedef unsigned portSHORT portTickType;portTickType101,3749
#define portMAX_DELAY portMAX_DELAY102,3792
  typedef unsigned portLONG portTickType;portTickType104,3844
#define portMAX_DELAY portMAX_DELAY105,3886
#define portSTACK_GROWTH	portSTACK_GROWTH110,4038
#define portTICK_RATE_MS	portTICK_RATE_MS111,4072
#define portBYTE_ALIGNMENT	portBYTE_ALIGNMENT112,4146
#define portNOP(portNOP113,4177
#define portRESTORE_CONTEXT(portRESTORE_CONTEXT126,4584
#define portSAVE_CONTEXT(portSAVE_CONTEXT163,5935
#define portYIELD_FROM_ISR(portYIELD_FROM_ISR210,7550
#define portYIELD(portYIELD211,7601
#define portDISABLE_INTERRUPTS(portDISABLE_INTERRUPTS229,8243
#define portENABLE_INTERRUPTS(portENABLE_INTERRUPTS230,8310
#define portDISABLE_INTERRUPTS(portDISABLE_INTERRUPTS234,8384
#define portENABLE_INTERRUPTS(portENABLE_INTERRUPTS242,8758
#define portENTER_CRITICAL(portENTER_CRITICAL255,9247
#define portEXIT_CRITICAL(portEXIT_CRITICAL256,9299
#define portTASK_FUNCTION_PROTO(portTASK_FUNCTION_PROTO260,9485
#define portTASK_FUNCTION(portTASK_FUNCTION261,9581

os/core/ARM7_AT91SAM7S/EMAC/Emac.h,3602
#define AT91C_EMAC_HAT91C_EMAC_H16,881
#define NB_RX_BUFFERS	NB_RX_BUFFERS22,965
#define ETH_RX_BUFFER_SIZE	ETH_RX_BUFFER_SIZE25,1047
#define NB_TX_BUFFERS	NB_TX_BUFFERS28,1125
#define ETH_TX_BUFFER_SIZE	ETH_TX_BUFFER_SIZE31,1212
typedef struct  _AT91S_RxTdDescriptor {_AT91S_RxTdDescriptor34,1314
	unsigned int addr;addr35,1355
		unsigned int status;status38,1388
			unsigned int Length:11;Length40,1424
			unsigned int Res0:1;Res041,1452
			unsigned int Rxbuf_off:2;Rxbuf_off42,1477
			unsigned int StartOfFrame:1;StartOfFrame43,1507
			unsigned int EndOfFrame:1;EndOfFrame44,1540
			unsigned int Cfi:1;Cfi45,1571
			unsigned int VlanPriority:3;VlanPriority46,1595
			unsigned int PriorityTag:1;PriorityTag47,1628
			unsigned int VlanTag:1;VlanTag48,1660
			unsigned int TypeID:1;TypeID49,1688
			unsigned int Sa4Match:1;Sa4Match50,1715
			unsigned int Sa3Match:1;Sa3Match51,1744
			unsigned int Sa2Match:1;Sa2Match52,1773
			unsigned int Sa1Match:1;Sa1Match53,1802
			unsigned int Res1:1;Res154,1831
			unsigned int ExternalAdd:1;ExternalAdd55,1856
			unsigned int UniCast:1;UniCast56,1888
			unsigned int MultiCast:1;MultiCast57,1916
			unsigned int BroadCast:1;BroadCast58,1946
		}S_Status;		S_Status59,1976
	}U_Status;U_Status60,1992
}AT91S_RxTdDescriptor, *AT91PS_RxTdDescriptor;AT91S_RxTdDescriptor61,2005
}AT91S_RxTdDescriptor, *AT91PS_RxTdDescriptor;AT91PS_RxTdDescriptor61,2005
typedef struct _AT91S_TxTdDescriptor {_AT91S_TxTdDescriptor65,2103
	unsigned int addr;addr66,2143
		unsigned int status;status69,2176
			unsigned int Length:11;Length71,2212
			unsigned int Res0:4;Res072,2240
			unsigned int LastBuff:1;LastBuff73,2265
			unsigned int NoCrc:1;NoCrc74,2294
			unsigned int Res1:10;Res175,2320
			unsigned int BufExhausted:1;BufExhausted76,2346
			unsigned int TransmitUnderrun:1;TransmitUnderrun77,2379
			unsigned int TransmitError:1;TransmitError78,2416
			unsigned int Wrap:1;Wrap79,2450
			unsigned int BuffUsed:1;BuffUsed80,2475
		}S_Status;		S_Status81,2504
	}U_Status;U_Status82,2520
}AT91S_TxTdDescriptor, *AT91PS_TxTdDescriptor;AT91S_TxTdDescriptor83,2533
}AT91S_TxTdDescriptor, *AT91PS_TxTdDescriptor;AT91PS_TxTdDescriptor83,2533
#define AT91C_OWNERSHIP_BIT	AT91C_OWNERSHIP_BIT85,2583
#define AT91C_BROADCAST_ADDR	AT91C_BROADCAST_ADDR88,2658
#define AT91C_MULTICAST_HASH AT91C_MULTICAST_HASH89,2745
#define AT91C_UNICAST_HASH AT91C_UNICAST_HASH90,2828
#define AT91C_EXTERNAL_ADDR	AT91C_EXTERNAL_ADDR91,2911
#define AT91C_SA1_ADDR	AT91C_SA1_ADDR92,2998
#define AT91C_SA2_ADDR	AT91C_SA2_ADDR93,3083
#define AT91C_SA3_ADDR	AT91C_SA3_ADDR94,3168
#define AT91C_SA4_ADDR	AT91C_SA4_ADDR95,3253
#define AT91C_TYPE_ID	AT91C_TYPE_ID96,3338
#define AT91C_VLAN_TAG	AT91C_VLAN_TAG97,3411
#define AT91C_PRIORITY_TAG AT91C_PRIORITY_TAG98,3489
#define AT91C_VLAN_PRIORITY AT91C_VLAN_PRIORITY99,3574
#define AT91C_CFI_IND AT91C_CFI_IND100,3653
#define AT91C_EOF AT91C_EOF101,3730
#define AT91C_SOF AT91C_SOF102,3796
#define AT91C_RBF_OFFSET AT91C_RBF_OFFSET103,3862
#define AT91C_LENGTH_FRAME AT91C_LENGTH_FRAME104,3952
#define AT91C_TRANSMIT_OK	AT91C_TRANSMIT_OK107,4069
#define AT91C_TRANSMIT_WRAP	AT91C_TRANSMIT_WRAP108,4128
#define AT91C_TRANSMIT_ERR	AT91C_TRANSMIT_ERR109,4224
#define AT91C_TRANSMIT_UND	AT91C_TRANSMIT_UND110,4303
#define AT91C_BUF_EX AT91C_BUF_EX111,4381
#define AT91C_TRANSMIT_NO_CRC	AT91C_TRANSMIT_NO_CRC112,4471
#define AT91C_LAST_BUFFER AT91C_LAST_BUFFER113,4578
#define AT91C_EMAC_CLKEN AT91C_EMAC_CLKEN115,4642

os/core/ARM7_AT91SAM7S/EMAC/mii.h,3519
#define MII_BMCR MII_BMCR3,32
#define MII_BMSR MII_BMSR4,107
#define MII_PHYSID1 MII_PHYSID15,182
#define MII_PHYSID2 MII_PHYSID26,257
#define MII_ADVERTISE MII_ADVERTISE7,332
#define MII_LPA MII_LPA8,407
#define MII_EXPANSION MII_EXPANSION9,482
#define MII_DCOUNTER MII_DCOUNTER10,557
#define MII_FCSCOUNTER MII_FCSCOUNTER11,632
#define MII_NWAYTEST MII_NWAYTEST12,707
#define MII_RERRCOUNTER MII_RERRCOUNTER13,782
#define MII_SREVISION MII_SREVISION14,857
#define MII_RESV1 MII_RESV115,932
#define MII_LBRERROR MII_LBRERROR16,1007
#define MII_PHYADDR MII_PHYADDR17,1082
#define MII_RESV2 MII_RESV218,1157
#define MII_TPISTATUS MII_TPISTATUS19,1232
#define MII_NCONFIG MII_NCONFIG20,1307
#define BMCR_RESV BMCR_RESV23,1420
#define BMCR_CTST BMCR_CTST24,1495
#define BMCR_FULLDPLX BMCR_FULLDPLX25,1570
#define BMCR_ANRESTART BMCR_ANRESTART26,1645
#define BMCR_ISOLATE BMCR_ISOLATE27,1720
#define BMCR_PDOWN BMCR_PDOWN28,1795
#define BMCR_ANENABLE BMCR_ANENABLE29,1870
#define BMCR_SPEED100 BMCR_SPEED10030,1945
#define BMCR_LOOPBACK BMCR_LOOPBACK31,2020
#define BMCR_RESET BMCR_RESET32,2095
#define BMSR_ERCAP BMSR_ERCAP35,2207
#define BMSR_JCD BMSR_JCD36,2282
#define BMSR_LSTATUS BMSR_LSTATUS37,2357
#define BMSR_ANEGCAPABLE BMSR_ANEGCAPABLE38,2432
#define BMSR_RFAULT BMSR_RFAULT39,2507
#define BMSR_ANEGCOMPLETE BMSR_ANEGCOMPLETE40,2582
#define BMSR_RESV BMSR_RESV41,2657
#define BMSR_10HALF BMSR_10HALF42,2732
#define BMSR_10FULL BMSR_10FULL43,2807
#define BMSR_100HALF BMSR_100HALF44,2882
#define BMSR_100FULL BMSR_100FULL45,2957
#define BMSR_100BASE4 BMSR_100BASE446,3032
#define ADVERTISE_SLCT ADVERTISE_SLCT49,3148
#define ADVERTISE_CSMA ADVERTISE_CSMA50,3223
#define ADVERTISE_10HALF ADVERTISE_10HALF51,3298
#define ADVERTISE_10FULL ADVERTISE_10FULL52,3373
#define ADVERTISE_100HALF ADVERTISE_100HALF53,3448
#define ADVERTISE_100FULL ADVERTISE_100FULL54,3523
#define ADVERTISE_100BASE4 ADVERTISE_100BASE455,3598
#define ADVERTISE_RESV ADVERTISE_RESV56,3673
#define ADVERTISE_RFAULT ADVERTISE_RFAULT57,3748
#define ADVERTISE_LPACK ADVERTISE_LPACK58,3823
#define ADVERTISE_NPAGE ADVERTISE_NPAGE59,3898
#define ADVERTISE_FULL ADVERTISE_FULL61,3975
#define ADVERTISE_ALL ADVERTISE_ALL63,4061
#define LPA_SLCT LPA_SLCT67,4228
#define LPA_10HALF LPA_10HALF68,4303
#define LPA_10FULL LPA_10FULL69,4378
#define LPA_100HALF LPA_100HALF70,4453
#define LPA_100FULL LPA_100FULL71,4528
#define LPA_100BASE4 LPA_100BASE472,4603
#define LPA_RESV LPA_RESV73,4678
#define LPA_RFAULT LPA_RFAULT74,4753
#define LPA_LPACK LPA_LPACK75,4828
#define LPA_NPAGE LPA_NPAGE76,4903
#define LPA_DUPLEX	LPA_DUPLEX78,4980
#define LPA_100	LPA_10079,5028
#define EXPANSION_NWAY EXPANSION_NWAY82,5140
#define EXPANSION_LCWP EXPANSION_LCWP83,5215
#define EXPANSION_ENABLENPAGE EXPANSION_ENABLENPAGE84,5290
#define EXPANSION_NPCAPABLE EXPANSION_NPCAPABLE85,5365
#define EXPANSION_MFAULTS EXPANSION_MFAULTS86,5440
#define EXPANSION_RESV EXPANSION_RESV87,5515
#define NWAYTEST_RESV1 NWAYTEST_RESV190,5620
#define NWAYTEST_LOOPBACK NWAYTEST_LOOPBACK91,5695
#define NWAYTEST_RESV2 NWAYTEST_RESV292,5770
#define SPEED_10	SPEED_1094,5847
#define SPEED_100	SPEED_10095,5871
#define DUPLEX_HALF	DUPLEX_HALF98,5928
#define DUPLEX_FULL	DUPLEX_FULL99,5957
#define MII_DM9161_ID MII_DM9161_ID102,6002
#define MII_AM79C875_ID MII_AM79C875_ID103,6040
#define AT91C_PHY_ADDR	AT91C_PHY_ADDR105,6097

os/core/ARM7_AT91SAM7S/EMAC/SAM7_EMAC.c,2779
#define USE_RMII_INTERFACE USE_RMII_INTERFACE101,3639
#define emacADDRESS_MASK	emacADDRESS_MASK107,3879
#define emacRX_WRAP_BIT	emacRX_WRAP_BIT111,4049
#define emacTX_BUF_USED	emacTX_BUF_USED115,4244
#define emacBUFFER_WAIT_DELAY	emacBUFFER_WAIT_DELAY119,4456
#define emacMAX_WAIT_CYCLES	emacMAX_WAIT_CYCLES120,4494
#define emacBLOCK_TIME_WAITING_FOR_INPUT	emacBLOCK_TIME_WAITING_FOR_INPUT123,4621
#define emacPERIPHERAL_A_SETUP emacPERIPHERAL_A_SETUP126,4728
#define emacINTERRUPT_LEVEL	emacINTERRUPT_LEVEL146,5820
#define emacNO_DELAY	emacNO_DELAY147,5857
#define emacTOTAL_FRAME_HEADER_SIZE	emacTOTAL_FRAME_HEADER_SIZE148,5888
#define emacPHY_INIT_DELAY	emacPHY_INIT_DELAY149,5932
#define emacRESET_KEY	emacRESET_KEY150,5990
#define emacRESET_LENGTH	emacRESET_LENGTH151,6053
#define emacRX_LENGTH_FRAME	emacRX_LENGTH_FRAME154,6191
static volatile portCHAR pcRxBuffer[ NB_RX_BUFFERS * ETH_RX_BUFFER_SIZE ] __attribute__ ((aligned (8)));pcRxBuffer160,6428
static portCHAR pcTxBuffer[ NB_TX_BUFFERS * ETH_TX_BUFFER_SIZE ] __attribute__ ((aligned (8)));pcTxBuffer164,6657
static volatile AT91S_TxTdDescriptor xTxDescriptors[ NB_TX_BUFFERS ];xTxDescriptors168,6914
static volatile AT91S_RxTdDescriptor xRxDescriptors[ NB_RX_BUFFERS ];xRxDescriptors169,6985
const portCHAR cMACAddress[ 6 ] = { emacETHADDR0, emacETHADDR1, emacETHADDR2, emacETHADDR3, emacETHADDR4, emacETHADDR5 };cMACAddress172,7127
const unsigned char ucIPAddress[ 4 ]  = { emacIPADDR0, emacIPADDR1, emacIPADDR2, emacIPADDR3 };ucIPAddress173,7250
static xSemaphoreHandle xSemaphore = NULL;xSemaphore211,8419
static volatile unsigned portLONG ulNextRxBuffer = 0;ulNextRxBuffer214,8537
portLONG lEMACSend( portCHAR *pcFrom, unsigned portLONG ulLength, portLONG lEndOfFrame )lEMACSend219,8726
unsigned portLONG ulEMACInputLength( void )ulEMACInputLength325,12013
void vEMACRead( portCHAR *pcTo, unsigned portLONG ulSectionLength, unsigned portLONG ulTotalFrameLength )vEMACRead366,13488
xSemaphoreHandle xEMACInit( void )xEMACInit472,18012
void vClearEMACTxBuffer( void )vClearEMACTxBuffer566,20660
static void prvSetupDescriptors(void)prvSetupDescriptors602,21766
static void prvSetupMACAddress( void )prvSetupMACAddress655,24020
static void prvSetupEMACInterrupt( void )prvSetupEMACInterrupt668,24516
static portBASE_TYPE prvProbePHY( void )prvProbePHY700,25393
static void vReadPHY( unsigned portCHAR ucPHYAddress, unsigned portCHAR ucAddress, unsigned portLONG *pulValue )vReadPHY745,26500
static void vWritePHY( unsigned portCHAR ucPHYAddress, unsigned portCHAR ucAddress, unsigned portLONG ulValue )vWritePHY767,27234
static portBASE_TYPE xGetLinkSpeed( void )xGetLinkSpeed788,27914
void vEMACWaitForInput( void )vEMACWaitForInput873,29841

os/core/ARM7_AT91SAM7S/EMAC/SAM7_EMAC.h,856
#define SAM_7_EMAC_HSAM_7_EMAC_H59,2533
#define emacETHADDR0 emacETHADDR062,2636
#define emacETHADDR1 emacETHADDR163,2660
#define emacETHADDR2 emacETHADDR264,2687
#define emacETHADDR3 emacETHADDR365,2714
#define emacETHADDR4 emacETHADDR466,2741
#define emacETHADDR5 emacETHADDR567,2768
#define emacIPADDR0 emacIPADDR070,2831
#define emacIPADDR1 emacIPADDR171,2856
#define emacIPADDR2 emacIPADDR272,2880
#define emacIPADDR3 emacIPADDR373,2905
#define emacGATEWAY_ADDR0 emacGATEWAY_ADDR076,2971
#define emacGATEWAY_ADDR1 emacGATEWAY_ADDR177,3002
#define emacGATEWAY_ADDR2 emacGATEWAY_ADDR278,3032
#define emacGATEWAY_ADDR3 emacGATEWAY_ADDR379,3063
#define emacNET_MASK0 emacNET_MASK082,3130
#define emacNET_MASK1 emacNET_MASK183,3157
#define emacNET_MASK2 emacNET_MASK284,3184
#define emacNET_MASK3 emacNET_MASK385,3209

os/core/ARM7_AT91SAM7S/EMAC/SAM7_EMAC_ISR.c,264
static xSemaphoreHandle xSemaphore = NULL;xSemaphore61,2646
void vEMACISR_Handler( void )vEMACISR_Handler74,3125
void  vEMACISR_Wrapper( void )vEMACISR_Wrapper114,4420
void vPassEMACSemaphore( xSemaphoreHandle xCreatedSemaphore )vPassEMACSemaphore128,4837

os/lwip-1.1.0/contrib/port/FreeRTOS/AT91SAM7X/arch/cc.h,612
#define __CC_H____CC_H__33,1657
typedef unsigned   char    u8_t;u8_t37,1697
typedef signed     char    s8_t;s8_t38,1731
typedef unsigned   short   u16_t;u16_t39,1765
typedef signed     short   s16_t;s16_t40,1800
typedef unsigned   long    u32_t;u32_t41,1835
typedef signed     long    s32_t;s32_t42,1870
typedef u32_t mem_ptr_t;mem_ptr_t43,1905
typedef int sys_prot_t;sys_prot_t44,1931
#define PACK_STRUCT_BEGINPACK_STRUCT_BEGIN47,1960
#define PACK_STRUCT_STRUCT PACK_STRUCT_STRUCT48,1987
#define PACK_STRUCT_ENDPACK_STRUCT_END49,2044
#define PACK_STRUCT_FIELD(PACK_STRUCT_FIELD50,2069

os/lwip-1.1.0/contrib/port/FreeRTOS/AT91SAM7X/arch/cpu.h,75
#define __CPU_H____CPU_H__33,1658
#define BYTE_ORDER BYTE_ORDER35,1679

os/lwip-1.1.0/contrib/port/FreeRTOS/AT91SAM7X/arch/init.h,97
#define __ARCH_INIT_H____ARCH_INIT_H__33,1664
#define TCPIP_INIT_DONE(TCPIP_INIT_DONE35,1691

os/lwip-1.1.0/contrib/port/FreeRTOS/AT91SAM7X/arch/lib.h,36
#define __LIB_H____LIB_H__33,1658

os/lwip-1.1.0/contrib/port/FreeRTOS/AT91SAM7X/arch/perf.h,114
#define __PERF_H____PERF_H__33,1659
#define PERF_START PERF_START35,1681
#define PERF_STOP(PERF_STOP36,1726

os/lwip-1.1.0/contrib/port/FreeRTOS/AT91SAM7X/arch/sys_arch.h,295
#define __SYS_RTXC_H____SYS_RTXC_H__33,1663
#define SYS_MBOX_NULL SYS_MBOX_NULL40,1774
#define SYS_SEM_NULL SYS_SEM_NULL41,1813
typedef xSemaphoreHandle sys_sem_t;sys_sem_t43,1858
typedef xQueueHandle sys_mbox_t;sys_mbox_t44,1895
typedef xTaskHandle sys_thread_t;sys_thread_t45,1929

os/lwip-1.1.0/contrib/port/FreeRTOS/AT91SAM7X/sys_arch.c,1372
#define archMESG_QUEUE_LENGTH	archMESG_QUEUE_LENGTH40,1791
#define archPOST_BLOCK_TIME_MS	archPOST_BLOCK_TIME_MS41,1828
struct timeoutlist timeoutlist43,1894
	struct sys_timeouts timeouts;timeouts45,1918
	xTaskHandle pid;pid46,1950
#define SYS_THREAD_MAX SYS_THREAD_MAX50,2054
#define lwipTCP_STACK_SIZE	lwipTCP_STACK_SIZE52,2082
#define lwipBASIC_SERVER_STACK_SIZE	lwipBASIC_SERVER_STACK_SIZE53,2116
static struct timeoutlist timeoutlist[SYS_THREAD_MAX];timeoutlist55,2159
static u16_t nextthread = 0;nextthread56,2215
int intlevel = 0;intlevel57,2245
sys_mbox_new(void)sys_mbox_new63,2400
sys_mbox_free(sys_mbox_t mbox)sys_mbox_free79,2842
sys_mbox_post(sys_mbox_t mbox, void *data)sys_mbox_post93,3174
u32_t sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t timeout)sys_arch_mbox_fetch115,4045
sys_sem_new(u8_t count)sys_sem_new165,5168
sys_arch_sem_wait(sys_sem_t sem, u32_t timeout)sys_arch_sem_wait204,6312
sys_sem_signal(sys_sem_t sem)sys_sem_signal248,7168
sys_sem_free(sys_sem_t sem)sys_sem_free256,7355
sys_init(void)sys_init264,7535
sys_arch_timeouts(void)sys_arch_timeouts293,8460
sys_thread_t sys_thread_new(void (* thread)(void *arg), void *arg, int prio)sys_thread_new324,9305
sys_prot_t sys_arch_protect(void)sys_arch_protect368,10805
void sys_arch_unprotect(sys_prot_t pval)sys_arch_unprotect380,11153

os/lwip-1.1.0/src/api/api_lib.c,2185
netbuf *netbuf_new(void)netbuf_new43,1827
netbuf_delete(struct netbuf *buf)netbuf_delete58,2043
netbuf_alloc(struct netbuf *buf, u16_t size)netbuf_alloc70,2248
netbuf_free(struct netbuf *buf)netbuf_free85,2569
netbuf_ref(struct netbuf *buf, void *dataptr, u16_t size)netbuf_ref94,2699
netbuf_chain(struct netbuf *head, struct netbuf *tail)netbuf_chain106,2972
netbuf_len(struct netbuf *buf)netbuf_len114,3133
netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)netbuf_data120,3207
netbuf_next(struct netbuf *buf)netbuf_next131,3411
netbuf_first(struct netbuf *buf)netbuf_first144,3608
netbuf_copy_partial(struct netbuf *buf, void *dataptr, u16_t len, u16_t offset)netbuf_copy_partial150,3678
netbuf_copy(struct netbuf *buf, void *dataptr, u16_t len)netbuf_copy179,4285
netbuf_fromaddr(struct netbuf *buf)netbuf_fromaddr185,4416
netbuf_fromport(struct netbuf *buf)netbuf_fromport191,4493
netconn *netconn_new_with_proto_and_callback(enum netconn_type t, u16_t proto,netconn_new_with_proto_and_callback197,4571
netconn *netconn_new(enum netconn_type t)netconn_new246,5742
netconn *netconn_new_with_callback(enum netconn_type t,netconn_new_with_callback252,5858
netconn_delete(struct netconn *conn)netconn_delete260,6094
netconn_type(struct netconn *conn)netconn_type315,7426
netconn_peer(struct netconn *conn, struct ip_addr *addr,netconn_peer321,7499
netconn_addr(struct netconn *conn, struct ip_addr **addr,netconn_addr348,8226
netconn_bind(struct netconn *conn, struct ip_addr *addr,netconn_bind371,8777
netconn_connect(struct netconn *conn, struct ip_addr *addr,netconn_connect402,9452
netconn_disconnect(struct netconn *conn)netconn_disconnect432,10089
netconn_listen(struct netconn *conn)netconn_listen453,10480
netconn_accept(struct netconn *conn)netconn_accept480,11051
netconn_recv(struct netconn *conn)netconn_recv497,11393
netconn_send(struct netconn *conn, struct netbuf *buf)netconn_send593,13507
netconn_write(struct netconn *conn, void *dataptr, u16_t size, u8_t copy)netconn_write621,14092
netconn_close(struct netconn *conn)netconn_close697,15845
netconn_err(struct netconn *conn)netconn_err725,16424

os/lwip-1.1.0/src/api/api_msg.c,1490
recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,recv_raw42,1816
recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,recv_udp73,2522
recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)recv_tcp110,3295
poll_tcp(void *arg, struct tcp_pcb *pcb)poll_tcp143,3913
sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)sent_tcp159,4220
err_tcp(void *arg, err_t err)err_tcp178,4612
setup_tcp(struct netconn *conn)setup_tcp209,5338
accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)accept_function222,5581
do_newconn(struct api_msg_msg *msg)do_newconn278,7096
do_delconn(struct api_msg_msg *msg)do_delconn344,8893
do_bind(struct api_msg_msg *msg)do_bind397,10261
do_connected(void *arg, struct tcp_pcb *pcb, err_t err)do_connected460,12007
do_connect(struct api_msg_msg *msg)do_connect482,12366
do_disconnect(struct api_msg_msg *msg)do_disconnect568,14696
do_listen(struct api_msg_msg *msg)do_listen594,15197
do_accept(struct api_msg_msg *msg)do_accept637,16322
do_send(struct api_msg_msg *msg)do_send662,16914
do_recv(struct api_msg_msg *msg)do_recv688,17467
do_write(struct api_msg_msg *msg)do_write701,17732
do_close(struct api_msg_msg *msg)do_close749,19108
typedef void (* api_msg_decode)(struct api_msg_msg *msg);api_msg_decode783,19762
static api_msg_decode decode[API_MSG_MAX] = {decode784,19821
api_msg_input(struct api_msg *msg)api_msg_input798,20032
api_msg_post(struct api_msg *msg)api_msg_post804,20119

os/lwip-1.1.0/src/api/err.c,98
static char *err_strerr[] = {"Ok.",err_strerr37,1687
lwip_strerr(err_t err)lwip_strerr52,2062

os/lwip-1.1.0/src/api/sockets.c,2868
#define NUM_SOCKETS NUM_SOCKETS45,1878
struct lwip_socket {lwip_socket47,1918
  struct netconn *conn;conn48,1940
  struct netbuf *lastdata;lastdata49,1965
  u16_t lastoffset;lastoffset50,1993
  u16_t rcvevent;rcvevent51,2014
  u16_t sendevent;sendevent52,2033
  u16_t  flags;flags53,2053
  int err;err54,2070
struct lwip_select_cblwip_select_cb57,2088
    struct lwip_select_cb *next;next59,2114
    fd_set *readset;readset60,2148
    fd_set *writeset;writeset61,2170
    fd_set *exceptset;exceptset62,2193
    int sem_signalled;sem_signalled63,2217
    sys_sem_t sem;sem64,2241
static struct lwip_socket sockets[NUM_SOCKETS];sockets67,2267
static struct lwip_select_cb *select_cb_list = 0;select_cb_list68,2316
static sys_sem_t socksem = 0;socksem70,2369
static sys_sem_t selectsem = 0;selectsem71,2400
static int err_to_errno_table[11] = {err_to_errno_table76,2522
#define err_to_errno(err_to_errno90,3286
#define set_errno(set_errno95,3427
#define set_errno(set_errno97,3472
#define sock_set_errno(sock_set_errno100,3506
get_socket(int s)get_socket107,3643
alloc_socket(struct netconn *newconn)alloc_socket129,4048
lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)lwip_accept158,4686
lwip_bind(int s, struct sockaddr *name, socklen_t namelen)lwip_bind213,6039
lwip_close(int s)lwip_close247,6946
lwip_connect(int s, struct sockaddr *name, socklen_t namelen)lwip_connect278,7568
lwip_listen(int s, int backlog)lwip_listen318,8712
lwip_recvfrom(int s, void *mem, int len, unsigned int flags,lwip_recvfrom343,9220
lwip_read(int s, void *mem, int len)lwip_read450,12130
lwip_recv(int s, void *mem, int len, unsigned int flags)lwip_recv456,12234
lwip_send(int s, void *data, int size, unsigned int flags)lwip_send462,12362
lwip_sendto(int s, void *data, int size, unsigned int flags,lwip_sendto519,13707
lwip_socket(int domain, int type, int protocol)lwip_socket557,14809
lwip_write(int s, void *data, int size)lwip_write602,16164
lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)lwip_selscan609,16267
lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,lwip_select656,17590
event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)event_callback802,21914
int lwip_shutdown(int s, int how)lwip_shutdown892,24494
int lwip_getpeername (int s, struct sockaddr *name, socklen_t *namelen)lwip_getpeername898,24687
int lwip_getsockname (int s, struct sockaddr *name, socklen_t *namelen)lwip_getsockname932,25535
int lwip_getsockopt (int s, int level, int optname, void *optval, socklen_t *optlen)lwip_getsockopt966,26384
int lwip_setsockopt (int s, int level, int optname, const void *optval, socklen_t optlen)lwip_setsockopt1156,31827
int lwip_ioctl(int s, long cmd, void *argp)lwip_ioctl1322,36346

os/lwip-1.1.0/src/api/tcpip.c,656
static void (* tcpip_init_done)(void *arg) = NULL;tcpip_init_done46,1838
static void *tcpip_init_done_arg;tcpip_init_done_arg47,1890
static sys_mbox_t mbox;mbox48,1925
static int tcpip_tcp_timer_active = 0;tcpip_tcp_timer_active51,1966
tcpip_tcp_timer(void *arg)tcpip_tcp_timer54,2021
tcp_timer_needed(void)tcp_timer_needed72,2367
tcpip_thread(void *arg)tcpip_thread85,2698
tcpip_input(struct pbuf *p, struct netif *inp)tcpip_input125,3652
tcpip_callback(void (*f)(void *ctx), void *ctx)tcpip_callback143,3991
tcpip_apimsg(struct api_msg *apimsg)tcpip_apimsg160,4306
tcpip_init(void (* initfunc)(void *), void *arg)tcpip_init174,4588

os/lwip-1.1.0/src/core/dhcp.c,2702
static u32_t xid = 0xABCD0000;xid90,3476
static void dhcp_handle_nak(struct netif *netif) {dhcp_handle_nak144,5837
static void dhcp_check(struct netif *netif)dhcp_check161,6631
static void dhcp_handle_offer(struct netif *netif)dhcp_handle_offer186,7625
static err_t dhcp_select(struct netif *netif)dhcp_select213,8663
void dhcp_coarse_tmr()dhcp_coarse_tmr272,11149
void dhcp_fine_tmr()dhcp_fine_tmr304,12318
static void dhcp_timeout(struct netif *netif)dhcp_timeout333,13230
static void dhcp_t1_timeout(struct netif *netif)dhcp_t1_timeout387,15476
static void dhcp_t2_timeout(struct netif *netif)dhcp_t2_timeout403,16033
static void dhcp_handle_ack(struct netif *netif)dhcp_handle_ack418,16526
err_t dhcp_start(struct netif *netif)dhcp_start516,19724
void dhcp_inform(struct netif *netif)dhcp_inform573,21684
void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)dhcp_arp_reply634,23670
static err_t dhcp_decline(struct netif *netif)dhcp_decline657,24662
static err_t dhcp_discover(struct netif *netif)dhcp_discover704,26464
static void dhcp_bind(struct netif *netif)dhcp_bind759,28881
err_t dhcp_renew(struct netif *netif)dhcp_renew821,31769
static err_t dhcp_rebind(struct netif *netif)dhcp_rebind876,33736
err_t dhcp_release(struct netif *netif)dhcp_release929,35645
void dhcp_stop(struct netif *netif)dhcp_stop982,37657
static void dhcp_set_state(struct dhcp *dhcp, unsigned char new_state)dhcp_set_state1015,38395
static void dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)dhcp_option1029,38665
static void dhcp_option_byte(struct dhcp *dhcp, u8_t value)dhcp_option_byte1039,39111
static void dhcp_option_short(struct dhcp *dhcp, u16_t value)dhcp_option_short1044,39359
static void dhcp_option_long(struct dhcp *dhcp, u32_t value)dhcp_option_long1050,39707
static err_t dhcp_unfold_reply(struct dhcp *dhcp)dhcp_unfold_reply1069,40621
static void dhcp_free_reply(struct dhcp *dhcp)dhcp_free_reply1134,42669
static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)dhcp_recv1152,43116
static err_t dhcp_create_request(struct netif *netif)dhcp_create_request1253,47110
static void dhcp_delete_request(struct netif *netif)dhcp_delete_request1295,48845
static void dhcp_option_trailer(struct dhcp *dhcp)dhcp_option_trailer1312,49313
static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)dhcp_get_option_ptr1335,50428
static u8_t dhcp_get_option_byte(u8_t *ptr)dhcp_get_option_byte1412,53445
static u16_t dhcp_get_option_short(u8_t *ptr)dhcp_get_option_short1426,53777
static u32_t dhcp_get_option_long(u8_t *ptr)dhcp_get_option_long1443,54172

os/lwip-1.1.0/src/core/inet.c,804
#define LWIP_CHKSUM LWIP_CHKSUM61,2257
lwip_standard_chksum(void *dataptr, int len)lwip_standard_chksum63,2313
inet_chksum_pseudo(struct pbuf *p,inet_chksum_pseudo97,3198
inet_chksum(void *dataptr, u16_t len)inet_chksum147,4711
inet_chksum_pbuf(struct pbuf *p)inet_chksum_pbuf159,4920
#define in_range(in_range186,5531
#define isascii(isascii187,5594
#define isdigit(isdigit188,5648
#define isxdigit(isxdigit189,5700
#define islower(islower190,5793
#define isspace(isspace191,5845
 u32_t inet_addr(const char *cp)inet_addr202,6104
 int inet_aton(const char *cp, struct in_addr *addr)inet_aton221,6610
char *inet_ntoa(struct in_addr addr)inet_ntoa315,9151
htons(u16_t n)htons351,9728
ntohs(u16_t n)ntohs357,9810
htonl(u32_t n)htonl363,9861
ntohl(u32_t n)ntohl372,10010

os/lwip-1.1.0/src/core/inet6.c,228
chksum(void *dataptr, u16_t len)chksum59,2189
inet_chksum_pseudo(struct pbuf *p,inet_chksum_pseudo84,2599
inet_chksum(void *dataptr, u16_t len)inet_chksum133,3747
inet_chksum_pbuf(struct pbuf *p)inet_chksum_pbuf144,3942

os/lwip-1.1.0/src/core/ipv4/icmp.c,232
icmp_input(struct pbuf *p, struct netif *inp)icmp_input50,1931
icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)icmp_dest_unreach130,4417
icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)icmp_time_exceeded163,5273

os/lwip-1.1.0/src/core/ipv4/ip.c,470
ip_init(void)ip_init68,2210
ip_route(struct ip_addr *dest)ip_route81,2551
ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)ip_forward105,3230
ip_input(struct pbuf *p, struct netif *inp) {ip_input173,5418
ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,ip_output_if376,12203
ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,ip_output444,13916
ip_debug_print(struct pbuf *p)ip_debug_print462,14358

os/lwip-1.1.0/src/core/ipv4/ip_addr.c,254
const struct ip_addr ip_addr_any = { 0x00000000UL };ip_addr_any38,1781
const struct ip_addr ip_addr_broadcast = { 0xffffffffUL };ip_addr_broadcast39,1835
u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)ip_addr_isbroadcast49,2169

os/lwip-1.1.0/src/core/ipv4/ip_frag.c,914
copy_from_pbuf(struct pbuf *p, u16_t * offset,copy_from_pbuf56,2099
#define IP_REASS_BUFSIZE IP_REASS_BUFSIZE76,2481
#define IP_REASS_MAXAGE IP_REASS_MAXAGE77,2512
#define IP_REASS_TMO IP_REASS_TMO78,2540
static u8_t ip_reassbuf[IP_HLEN + IP_REASS_BUFSIZE];ip_reassbuf80,2569
static u8_t ip_reassbitmap[IP_REASS_BUFSIZE / (8 * 8)];ip_reassbitmap81,2623
static const u8_t bitmap_bits[8] = { 0xff, 0x7f, 0x3f, 0x1f,bitmap_bits82,2680
static u16_t ip_reasslen;ip_reasslen85,2772
static u8_t ip_reassflags;ip_reassflags86,2799
#define IP_REASS_FLAG_LASTFRAG IP_REASS_FLAG_LASTFRAG87,2827
static u8_t ip_reasstmr;ip_reasstmr89,2866
ip_reass_timer(void *arg)ip_reass_timer93,2933
ip_reass(struct pbuf *p)ip_reass104,3149
#define MAX_MTU MAX_MTU268,9425
static u8_t buf[MEM_ALIGN_SIZE(MAX_MTU)];buf269,9447
ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)ip_frag278,9674

os/lwip-1.1.0/src/core/ipv6/icmp6.c,232
icmp_input(struct pbuf *p, struct netif *inp)icmp_input47,1884
icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)icmp_dest_unreach118,4105
icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)icmp_time_exceeded148,4802

os/lwip-1.1.0/src/core/ipv6/ip6.c,448
ip_init(void)ip_init63,2032
ip_route(struct ip_addr *dest)ip_route75,2344
ip_forward(struct pbuf *p, struct ip_hdr *iphdr)ip_forward96,2841
ip_input(struct pbuf *p, struct netif *inp) {ip_input157,4561
ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,ip_output_if261,6928
ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,ip_output322,8352
ip_debug_print(struct pbuf *p)ip_debug_print339,8774

os/lwip-1.1.0/src/core/ipv6/ip6_addr.c,365
ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,ip_addr_netcmp38,1701
ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)ip_addr_cmp49,2152
ip_addr_set(struct ip_addr *dest, struct ip_addr *src)ip_addr_set58,2408
ip_addr_isany(struct ip_addr *addr)ip_addr_isany68,2661
ip_addr_debug_print(struct ip_addr *addr)ip_addr_debug_print77,2844

os/lwip-1.1.0/src/core/mem.c,838
struct mem {mem50,1865
  mem_size_t next, prev;next51,1879
  mem_size_t next, prev;prev51,1879
  u8_t used;used53,1929
  u16_t used;used55,1969
  u32_t used;used57,2010
  u64_t used;used59,2051
static struct mem *ram_end;ram_end65,2147
static u8_t ram[MEM_SIZE + sizeof(struct mem) + MEM_ALIGNMENT];ram66,2176
#define MIN_SIZE MIN_SIZE68,2243
#define SIZEOF_STRUCT_MEM SIZEOF_STRUCT_MEM72,2425
static struct mem *lfree;   /* pointer to the lowest free block */lfree77,2637
static sys_sem_t mem_sem;mem_sem79,2707
plug_holes(struct mem *mem)plug_holes82,2749
mem_init(void)mem_init115,3680
mem_free(void *rmem)mem_free138,4111
mem_reallocm(void *rmem, mem_size_t newsize)mem_reallocm178,5025
mem_realloc(void *rmem, mem_size_t newsize)mem_realloc191,5268
mem_malloc(mem_size_t size)mem_malloc242,6629

os/lwip-1.1.0/src/core/memp.c,513
struct memp {memp48,1912
  struct memp *next;next49,1927
static struct memp *memp_tab[MEMP_MAX];memp_tab54,1959
static const u16_t memp_sizes[MEMP_MAX] = {memp_sizes56,2002
static const u16_t memp_num[MEMP_MAX] = {memp_num70,2358
static u8_t memp_memory[(MEMP_NUM_PBUF *memp_memory84,2646
static sys_sem_t mutex;mutex120,3903
memp_sanity(void)memp_sanity125,3973
memp_init(void)memp_init146,4368
memp_malloc(memp_t type)memp_malloc187,5209
memp_free(memp_t type, void *mem)memp_free239,6648

os/lwip-1.1.0/src/core/netif.c,964
struct netif *netif_list = NULL;netif_list46,1817
struct netif *netif_default = NULL;netif_default47,1851
netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,netif_add64,2451
netif_set_addr(struct netif *netif,struct ip_addr *ipaddr, struct ip_addr *netmask,netif_set_addr103,3579
void netif_remove(struct netif * netif)netif_remove111,3799
netif_find(char *name)netif_find139,4549
netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)netif_set_ipaddr163,5082
netif_set_gw(struct netif *netif, struct ip_addr *gw)netif_set_gw217,7212
netif_set_netmask(struct netif *netif, struct ip_addr *netmask)netif_set_netmask229,7583
netif_set_default(struct netif *netif)netif_set_default241,7991
void netif_set_up(struct netif *netif)netif_set_up257,8408
u8_t netif_is_up(struct netif *netif)netif_is_up265,8531
void netif_set_down(struct netif *netif)netif_set_down278,8816
netif_init(void)netif_init284,8907

os/lwip-1.1.0/src/core/pbuf.c,1467
static u8_t pbuf_pool_memory[(PBUF_POOL_SIZE * MEM_ALIGN_SIZE(PBUF_POOL_BUFSIZE + sizeof(struct pbuf)))];pbuf_pool_memory80,3162
static volatile u8_t pbuf_pool_free_lock, pbuf_pool_alloc_lock;pbuf_pool_free_lock83,3298
static volatile u8_t pbuf_pool_free_lock, pbuf_pool_alloc_lock;pbuf_pool_alloc_lock83,3298
static sys_sem_t pbuf_pool_free_sem;pbuf_pool_free_sem84,3363
static struct pbuf *pbuf_pool = NULL;pbuf_pool87,3411
pbuf_init(void)pbuf_init102,3879
pbuf_pool_alloc(void)pbuf_pool_alloc141,4915
pbuf_alloc(pbuf_layer l, u16_t length, pbuf_flag flag)pbuf_alloc217,7473
#define DEC_PBUF_STATS DEC_PBUF_STATS352,12098
#define DEC_PBUF_STATSDEC_PBUF_STATS354,12187
#define PBUF_POOL_FAST_FREE(PBUF_POOL_FAST_FREE357,12238
#define PBUF_POOL_FREE(PBUF_POOL_FREE364,12611
#define PBUF_POOL_FREE(PBUF_POOL_FREE371,13064
pbuf_realloc(struct pbuf *p, u16_t new_len)pbuf_realloc394,13985
pbuf_header(struct pbuf *p, s16_t header_size_increment)pbuf_header470,16492
pbuf_free(struct pbuf *p)pbuf_free550,19182
pbuf_clen(struct pbuf *p)pbuf_clen624,21687
pbuf_ref(struct pbuf *p)pbuf_ref643,21944
pbuf_cat(struct pbuf *h, struct pbuf *t)pbuf_cat665,22414
pbuf_chain(struct pbuf *h, struct pbuf *t)pbuf_chain707,23954
pbuf_queue(struct pbuf *p, struct pbuf *n)pbuf_queue727,24538
pbuf_dequeue(struct pbuf *p)pbuf_dequeue785,26662
pbuf_take(struct pbuf *p)pbuf_take839,28534
pbuf_dechain(struct pbuf *p)pbuf_dechain934,32114

os/lwip-1.1.0/src/core/raw.c,598
static struct raw_pcb *raw_pcbs = NULL;raw_pcbs60,2134
raw_init(void)raw_init63,2183
raw_input(struct pbuf *p, struct netif *inp)raw_input86,2970
raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)raw_bind136,4305
raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)raw_connect156,4852
raw_recv(struct raw_pcb *pcb,raw_recv177,5538
raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)raw_sendto200,6311
raw_send(struct raw_pcb *pcb, struct pbuf *p)raw_send267,8351
raw_remove(struct raw_pcb *pcb)raw_remove281,8652
raw_new(u16_t proto) {raw_new310,9418

os/lwip-1.1.0/src/core/stats.c,360
struct stats_ lwip_stats;lwip_stats44,1782
stats_init(void)stats_init47,1817
stats_display_proto(struct stats_proto *proto, char *name)stats_display_proto53,1921
stats_display_pbuf(struct stats_pbuf *pbuf)stats_display_pbuf72,2781
stats_display_mem(struct stats_mem *mem, char *name)stats_display_mem84,3235
stats_display(void)stats_display95,3562

os/lwip-1.1.0/src/core/sys.c,536
struct sswt_cbsswt_cb40,1743
    int timeflag;timeflag42,1762
    sys_sem_t *psem;psem43,1781
sys_mbox_fetch(sys_mbox_t mbox, void **msg)sys_mbox_fetch49,1819
sys_sem_wait(sys_sem_t sem)sys_sem_wait101,3273
sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)sys_timeout157,4759
sys_untimeout(sys_timeout_handler h, void *arg)sys_untimeout208,6041
sswt_handler(void *arg)sswt_handler243,6895
sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)sys_sem_wait_timeout257,7250
sys_msleep(u32_t ms)sys_msleep284,7871

os/lwip-1.1.0/src/core/tcp.c,2470
u32_t tcp_ticks;tcp_ticks56,2239
const u8_t tcp_backoff[13] =tcp_backoff57,2257
union tcp_listen_pcbs_t tcp_listen_pcbs;tcp_listen_pcbs63,2409
struct tcp_pcb *tcp_active_pcbs;  tcp_active_pcbs66,2539
struct tcp_pcb *tcp_tw_pcbs;tcp_tw_pcbs68,2623
struct tcp_pcb *tcp_tmp_pcb;tcp_tmp_pcb70,2655
static u8_t tcp_timer;tcp_timer72,2687
tcp_init(void)tcp_init79,2794
tcp_tmr(void)tcp_tmr98,3092
tcp_close(struct tcp_pcb *pcb)tcp_close115,3384
tcp_abort(struct tcp_pcb *pcb)tcp_abort182,5260
tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)tcp_bind237,6949
tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)tcp_accept_null374,12944
tcp_listen(struct tcp_pcb *pcb)tcp_listen392,13398
tcp_recved(struct tcp_pcb *pcb, u16_t len)tcp_recved427,14325
tcp_new_port(void)tcp_new_port468,15910
#define TCP_LOCAL_PORT_RANGE_START TCP_LOCAL_PORT_RANGE_START472,15993
#define TCP_LOCAL_PORT_RANGE_END TCP_LOCAL_PORT_RANGE_END473,16034
tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,tcp_connect506,16828
tcp_slowtmr(void)tcp_slowtmr558,18234
tcp_fasttmr(void)tcp_fasttmr741,24431
tcp_segs_free(struct tcp_seg *seg)tcp_segs_free760,24845
tcp_seg_free(struct tcp_seg *seg)tcp_seg_free777,25098
tcp_setprio(struct tcp_pcb *pcb, u8_t prio)tcp_setprio798,25431
tcp_seg_copy(struct tcp_seg *seg)tcp_seg_copy809,25604
tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)tcp_recv_null825,25909
tcp_kill_prio(u8_t prio)tcp_kill_prio838,26171
tcp_kill_timewait(void)tcp_kill_timewait869,26915
tcp_alloc(u8_t prio)tcp_alloc892,27457
tcp_new(void)tcp_new953,29060
tcp_arg(struct tcp_pcb *pcb, void *arg)tcp_arg967,29241
tcp_recv(struct tcp_pcb *pcb,tcp_recv979,29460
tcp_sent(struct tcp_pcb *pcb,tcp_sent992,29748
tcp_err(struct tcp_pcb *pcb,tcp_err1004,30002
tcp_accept(struct tcp_pcb *pcb,tcp_accept1016,30250
tcp_poll(struct tcp_pcb *pcb,tcp_poll1031,30655
tcp_pcb_purge(struct tcp_pcb *pcb)tcp_pcb_purge1045,30970
tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)tcp_pcb_remove1078,31854
tcp_next_iss(void)tcp_next_iss1101,32378
tcp_debug_print(struct tcp_hdr *tcphdr)tcp_debug_print1111,32550
tcp_debug_print_state(enum tcp_state s)tcp_debug_print_state1142,34006
tcp_debug_print_flags(u8_t flags)tcp_debug_print_flags1183,34953
tcp_debug_print_pcbs(void)tcp_debug_print_pcbs1212,35562
tcp_pcbs_sane(void)tcp_pcbs_sane1239,36744

os/lwip-1.1.0/src/core/tcp_in.c,800
static struct tcp_seg inseg;inseg63,2313
static struct tcp_hdr *tcphdr;tcphdr64,2343
static struct ip_hdr *iphdr;iphdr65,2375
static u32_t seqno, ackno;seqno66,2405
static u32_t seqno, ackno;ackno66,2405
static u8_t flags;flags67,2433
static u16_t tcplen;tcplen68,2453
static u8_t recv_flags;recv_flags70,2477
static struct pbuf *recv_data;recv_data71,2502
struct tcp_pcb *tcp_input_pcb;tcp_input_pcb73,2536
tcp_input(struct pbuf *p, struct netif *inp)tcp_input93,3158
tcp_listen_input(struct tcp_pcb_listen *pcb)tcp_listen_input405,13421
tcp_timewait_input(struct tcp_pcb *pcb)tcp_timewait_input472,15884
tcp_process(struct tcp_pcb *pcb)tcp_process492,16380
tcp_receive(struct tcp_pcb *pcb)tcp_receive669,22117
tcp_parseopt(struct tcp_pcb *pcb)tcp_parseopt1199,43874

os/lwip-1.1.0/src/core/tcp_out.c,601
tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)tcp_send_ctrl65,2147
tcp_write(struct tcp_pcb *pcb, const void *arg, u16_t len, u8_t copy)tcp_write85,2750
tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,tcp_enqueue119,3823
tcp_output(struct tcp_pcb *pcb)tcp_output377,12774
tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)tcp_output_segment521,17823
tcp_rst(u32_t seqno, u32_t ackno,tcp_rst581,19459
tcp_rexmit_rto(struct tcp_pcb *pcb)tcp_rexmit_rto617,20599
tcp_rexmit(struct tcp_pcb *pcb)tcp_rexmit646,21362
tcp_keepalive(struct tcp_pcb *pcb)tcp_keepalive674,21889

os/lwip-1.1.0/src/core/udp.c,919
struct udp_pcb *udp_pcbs = NULL;udp_pcbs65,2170
static struct udp_pcb *pcb_cache = NULL;pcb_cache67,2206
udp_init(void)udp_init71,2258
udp_input(struct pbuf *p, struct netif *inp)udp_input87,2615
udp_sendto(struct udp_pcb *pcb, struct pbuf *p,udp_sendto355,11645
udp_send(struct udp_pcb *pcb, struct pbuf *p)udp_send390,12711
udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)udp_bind521,17583
#define UDP_LOCAL_PORT_RANGE_START UDP_LOCAL_PORT_RANGE_START610,21369
#define UDP_LOCAL_PORT_RANGE_END UDP_LOCAL_PORT_RANGE_END611,21410
udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)udp_connect656,22819
udp_disconnect(struct udp_pcb *pcb)udp_disconnect708,24675
udp_recv(struct udp_pcb *pcb,udp_recv718,24911
udp_remove(struct udp_pcb *pcb)udp_remove736,25379
udp_new(void) {udp_new762,26060
udp_debug_print(struct udp_hdr *udphdr)udp_debug_print778,26355

os/lwip-1.1.0/src/include/ipv4/lwip/icmp.h,1550
#define __LWIP_ICMP_H____LWIP_ICMP_H__33,1664
#define ICMP_ER ICMP_ER43,1820
#define ICMP_DUR ICMP_DUR44,1861
#define ICMP_SQ ICMP_SQ45,1915
#define ICMP_RD ICMP_RD46,1959
#define ICMP_ECHO ICMP_ECHO47,1998
#define ICMP_TE ICMP_TE48,2033
#define ICMP_PP ICMP_PP49,2077
#define ICMP_TS ICMP_TS50,2125
#define ICMP_TSR ICMP_TSR51,2165
#define ICMP_IRQ ICMP_IRQ52,2211
#define ICMP_IR ICMP_IR53,2261
enum icmp_dur_type {icmp_dur_type55,2311
  ICMP_DUR_NET = 0,    /* net unreachable */ICMP_DUR_NET56,2333
  ICMP_DUR_HOST = 1,   /* host unreachable */ICMP_DUR_HOST57,2379
  ICMP_DUR_PROTO = 2,  /* protocol unreachable */ICMP_DUR_PROTO58,2426
  ICMP_DUR_PORT = 3,   /* port unreachable */ICMP_DUR_PORT59,2477
  ICMP_DUR_FRAG = 4,   /* fragmentation needed and DF set */ICMP_DUR_FRAG60,2524
  ICMP_DUR_SR = 5      /* source route failed */ICMP_DUR_SR61,2586
enum icmp_te_type {icmp_te_type64,2642
  ICMP_TE_TTL = 0,     /* time to live exceeded in transit */ICMP_TE_TTL65,2663
  ICMP_TE_FRAG = 1     /* fragment reassembly time exceeded */ICMP_TE_FRAG66,2726
struct icmp_echo_hdr {icmp_echo_hdr78,3069
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT83,3236
struct icmp_dur_hdr {icmp_dur_hdr87,3297
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT91,3432
struct icmp_te_hdr {icmp_te_hdr95,3493
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT99,3627
#define ICMPH_TYPE(ICMPH_TYPE105,3740
#define ICMPH_CODE(ICMPH_CODE106,3797
#define ICMPH_TYPE_SET(ICMPH_TYPE_SET108,3858
#define ICMPH_CODE_SET(ICMPH_CODE_SET109,3954

os/lwip-1.1.0/src/include/ipv4/lwip/inet.h,388
#define __LWIP_INET_H____LWIP_INET_H__33,1664
#undef htonshtons52,2207
#undef htonlhtonl55,2255
#undef ntohsntohs58,2303
#undef ntohlntohl61,2351
#define htons(htons65,2417
#define ntohs(ntohs66,2439
#define htonl(htonl67,2461
#define ntohl(ntohl68,2483
#define htons htons72,2606
#define ntohs ntohs73,2632
#define htonl htonl74,2658
#define ntohl ntohl75,2684

os/lwip-1.1.0/src/include/ipv4/lwip/ip.h,1648
#define __LWIP_IP_H____LWIP_IP_H__33,1662
#define IP_HLEN IP_HLEN53,2197
#define IP_PROTO_ICMP IP_PROTO_ICMP55,2219
#define IP_PROTO_UDP IP_PROTO_UDP56,2244
#define IP_PROTO_UDPLITE IP_PROTO_UDPLITE57,2269
#define IP_PROTO_TCP IP_PROTO_TCP58,2299
#undef IP_HDRINCLIP_HDRINCL64,2534
#define IP_HDRINCL IP_HDRINCL66,2578
#define IP_PCB IP_PCB73,2852
#define	SOF_DEBUG	SOF_DEBUG85,3150
#define	SOF_ACCEPTCONN	SOF_ACCEPTCONN86,3228
#define	SOF_REUSEADDR	SOF_REUSEADDR87,3298
#define	SOF_KEEPALIVE	SOF_KEEPALIVE88,3369
#define	SOF_DONTROUTE	SOF_DONTROUTE89,3437
#define	SOF_BROADCAST	SOF_BROADCAST90,3511
#define	SOF_USELOOPBACK	SOF_USELOOPBACK91,3589
#define	SOF_LINGER	SOF_LINGER92,3666
#define	SOF_OOBINLINE	SOF_OOBINLINE93,3744
#define	SOF_REUSEPORT	SOF_REUSEPORT94,3821
struct ip_hdr {ip_hdr102,3995
#define IP_RF IP_RF111,4283
#define IP_DF IP_DF112,4341
#define IP_MF IP_MF113,4395
#define IP_OFFMASK IP_OFFMASK114,4450
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT122,4769
#define IPH_V(IPH_V128,4882
#define IPH_HL(IPH_HL129,4935
#define IPH_TOS(IPH_TOS130,4996
#define IPH_LEN(IPH_LEN131,5051
#define IPH_ID(IPH_ID132,5087
#define IPH_OFFSET(IPH_OFFSET133,5121
#define IPH_TTL(IPH_TTL134,5163
#define IPH_PROTO(IPH_PROTO135,5217
#define IPH_CHKSUM(IPH_CHKSUM136,5275
#define IPH_VHLTOS_SET(IPH_VHLTOS_SET138,5319
#define IPH_LEN_SET(IPH_LEN_SET139,5422
#define IPH_ID_SET(IPH_ID_SET140,5473
#define IPH_OFFSET_SET(IPH_OFFSET_SET141,5520
#define IPH_TTL_SET(IPH_TTL_SET142,5577
#define IPH_PROTO_SET(IPH_PROTO_SET143,5667
#define IPH_CHKSUM_SET(IPH_CHKSUM_SET144,5761

os/lwip-1.1.0/src/include/ipv4/lwip/ip_addr.h,1963
#define __LWIP_IP_ADDR_H____LWIP_IP_ADDR_H__33,1653
struct ip_addr {ip_addr41,1799
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT43,1851
struct ip_addr2 {ip_addr253,2054
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT55,2111
struct in_addr {in_addr62,2263
  u32_t s_addr;s_addr63,2281
#define IP_ADDR_ANY IP_ADDR_ANY74,2514
#define IP_ADDR_BROADCAST IP_ADDR_BROADCAST75,2568
#define INADDR_NONE INADDR_NONE77,2636
#define INADDR_LOOPBACK INADDR_LOOPBACK78,2704
#define  IN_CLASSA(IN_CLASSA85,2940
#define  IN_CLASSA_NET IN_CLASSA_NET86,3001
#define  IN_CLASSA_NSHIFT IN_CLASSA_NSHIFT87,3039
#define  IN_CLASSA_HOST IN_CLASSA_HOST88,3070
#define  IN_CLASSA_MAX IN_CLASSA_MAX89,3128
#define  IN_CLASSB(IN_CLASSB91,3161
#define  IN_CLASSB_NET IN_CLASSB_NET92,3231
#define  IN_CLASSB_NSHIFT IN_CLASSB_NSHIFT93,3269
#define  IN_CLASSB_HOST IN_CLASSB_HOST94,3300
#define  IN_CLASSB_MAX IN_CLASSB_MAX95,3358
#define  IN_CLASSC(IN_CLASSC97,3393
#define  IN_CLASSC_NET IN_CLASSC_NET98,3463
#define  IN_CLASSC_NSHIFT IN_CLASSC_NSHIFT99,3501
#define  IN_CLASSC_HOST IN_CLASSC_HOST100,3531
#define IN_CLASSD(IN_CLASSD102,3591
#define IN_CLASSD_NET IN_CLASSD_NET103,3662
#define IN_CLASSD_NSHIFT IN_CLASSD_NSHIFT104,3734
#define IN_CLASSD_HOST IN_CLASSD_HOST105,3802
#define IN_MULTICAST(IN_MULTICAST106,3874
#define IN_EXPERIMENTAL(IN_EXPERIMENTAL108,3918
#define IN_BADCLASS(IN_BADCLASS109,3989
#define IN_LOOPBACKNET IN_LOOPBACKNET111,4062
#define IP4_ADDR(IP4_ADDR114,4123
#define ip_addr_set(ip_addr_set117,4345
#define ip_addr_netcmp(ip_addr_netcmp128,4717
#define ip_addr_cmp(ip_addr_cmp132,4974
#define ip_addr_isany(ip_addr_isany134,5044
#define ip_addr_ismulticast(ip_addr_ismulticast138,5179
#define ip_addr_debug_print(ip_addr_debug_print141,5278
#define ip4_addr1(ip4_addr1149,5750
#define ip4_addr2(ip4_addr2150,5830
#define ip4_addr3(ip4_addr3151,5910
#define ip4_addr4(ip4_addr4152,5989

os/lwip-1.1.0/src/include/ipv4/lwip/ip_frag.h,54
#define __LWIP_IP_FRAG_H____LWIP_IP_FRAG_H__34,1667

os/lwip-1.1.0/src/include/ipv6/lwip/icmp.h,1369
#define __LWIP_ICMP_H____LWIP_ICMP_H__33,1664
#define ICMP6_DUR ICMP6_DUR42,1793
#define ICMP6_TE ICMP6_TE43,1815
#define ICMP6_ECHO ICMP6_ECHO44,1837
#define ICMP6_ER ICMP6_ER45,1875
enum icmp_dur_type {icmp_dur_type48,1925
  ICMP_DUR_NET = 0,    /* net unreachable */ICMP_DUR_NET49,1947
  ICMP_DUR_HOST = 1,   /* host unreachable */ICMP_DUR_HOST50,1993
  ICMP_DUR_PROTO = 2,  /* protocol unreachable */ICMP_DUR_PROTO51,2040
  ICMP_DUR_PORT = 3,   /* port unreachable */ICMP_DUR_PORT52,2091
  ICMP_DUR_FRAG = 4,   /* fragmentation needed and DF set */ICMP_DUR_FRAG53,2138
  ICMP_DUR_SR = 5      /* source route failed */ICMP_DUR_SR54,2200
enum icmp_te_type {icmp_te_type57,2256
  ICMP_TE_TTL = 0,     /* time to live exceeded in transit */ICMP_TE_TTL58,2277
  ICMP_TE_FRAG = 1     /* fragment reassembly time exceeded */ICMP_TE_FRAG59,2340
struct icmp_echo_hdr {icmp_echo_hdr67,2593
  u8_t type;type68,2617
  u8_t icode;icode69,2631
  u16_t chksum;chksum70,2646
  u16_t id;id71,2663
  u16_t seqno;seqno72,2676
struct icmp_dur_hdr {icmp_dur_hdr75,2698
  u8_t type;type76,2721
  u8_t icode;icode77,2735
  u16_t chksum;chksum78,2750
  u32_t unused;unused79,2767
struct icmp_te_hdr {icmp_te_hdr82,2790
  u8_t type;type83,2812
  u8_t icode;icode84,2826
  u16_t chksum;chksum85,2841
  u32_t unused;unused86,2858

os/lwip-1.1.0/src/include/ipv6/lwip/inet.h,48
#define __LWIP_INET_H____LWIP_INET_H__33,1664

os/lwip-1.1.0/src/include/ipv6/lwip/ip.h,926
#define __LWIP_IP_H____LWIP_IP_H__33,1662
#define IP_HLEN IP_HLEN42,1811
#define IP_PROTO_ICMP IP_PROTO_ICMP44,1833
#define IP_PROTO_UDP IP_PROTO_UDP45,1859
#define IP_PROTO_UDPLITE IP_PROTO_UDPLITE46,1884
#define IP_PROTO_TCP IP_PROTO_TCP47,1914
#undef IP_HDRINCLIP_HDRINCL53,2149
#define IP_HDRINCL IP_HDRINCL55,2193
struct ip_hdr {ip_hdr59,2247
  u8_t tclass1:4, v:4;tclass161,2297
  u8_t tclass1:4, v:4;v61,2297
  u8_t flow1:4, tclass2:4;  flow162,2321
  u8_t flow1:4, tclass2:4;  tclass262,2321
  u16_t flow2;flow267,2418
  u16_t len;                /* payload length */len68,2434
  u8_t nexthdr;             /* next header */nexthdr69,2484
  u8_t hoplim;              /* hop limit (TTL) */hoplim70,2531
  struct ip_addr src, dest;          /* source and destination IP addresses */src71,2582
  struct ip_addr src, dest;          /* source and destination IP addresses */dest71,2582

os/lwip-1.1.0/src/include/ipv6/lwip/ip_addr.h,193
#define __LWIP_IP_ADDR_H____LWIP_IP_ADDR_H__33,1667
#define IP_ADDR_ANY IP_ADDR_ANY37,1723
struct ip_addr {ip_addr39,1748
  u32_t addr[4];addr40,1766
#define IP6_ADDR(IP6_ADDR43,1790

os/lwip-1.1.0/src/include/lwip/api.h,1678
#define __LWIP_API_H____LWIP_API_H__33,1663
#define NETCONN_NOCOPY NETCONN_NOCOPY47,1881
#define NETCONN_COPY NETCONN_COPY48,1910
enum netconn_type {netconn_type50,1941
  NETCONN_TCP,NETCONN_TCP51,1962
  NETCONN_UDP,NETCONN_UDP52,1978
  NETCONN_UDPLITE,NETCONN_UDPLITE53,1994
  NETCONN_UDPNOCHKSUM,NETCONN_UDPNOCHKSUM54,2014
  NETCONN_RAWNETCONN_RAW55,2038
enum netconn_state {netconn_state58,2059
  NETCONN_NONE,NETCONN_NONE59,2081
  NETCONN_WRITE,NETCONN_WRITE60,2098
  NETCONN_ACCEPT,NETCONN_ACCEPT61,2116
  NETCONN_RECV,NETCONN_RECV62,2135
  NETCONN_CONNECT,NETCONN_CONNECT63,2152
  NETCONN_CLOSENETCONN_CLOSE64,2172
enum netconn_evt {netconn_evt67,2195
  NETCONN_EVT_RCVPLUS,NETCONN_EVT_RCVPLUS68,2215
  NETCONN_EVT_RCVMINUS,NETCONN_EVT_RCVMINUS69,2239
  NETCONN_EVT_SENDPLUS,NETCONN_EVT_SENDPLUS70,2264
  NETCONN_EVT_SENDMINUSNETCONN_EVT_SENDMINUS71,2289
struct netbuf {netbuf74,2320
  struct pbuf *p, *ptr;p75,2337
  struct pbuf *p, *ptr;ptr75,2337
  struct ip_addr *fromaddr;fromaddr76,2362
  u16_t fromport;fromport77,2391
  err_t err;err78,2410
struct netconn {netconn81,2430
  enum netconn_type type;type82,2448
  enum netconn_state state;state83,2475
    struct tcp_pcb *tcp;tcp85,2515
    struct udp_pcb *udp;udp86,2541
    struct raw_pcb *raw;raw87,2567
  } pcb;pcb88,2593
  err_t err;err89,2603
  sys_mbox_t mbox;mbox90,2617
  sys_mbox_t recvmbox;recvmbox91,2637
  sys_mbox_t acceptmbox;acceptmbox92,2661
  sys_sem_t sem;sem93,2687
  int socket;socket94,2705
  u16_t recv_avail;recv_avail95,2720
  void (* callback)(struct netconn *, enum netconn_evt, u16_t len);callback96,2741

os/lwip-1.1.0/src/include/lwip/api_msg.h,1153
#define __LWIP_API_MSG_H____LWIP_API_MSG_H__33,1667
enum api_msg_type {api_msg_type46,1866
  API_MSG_NEWCONN,API_MSG_NEWCONN47,1887
  API_MSG_DELCONN,API_MSG_DELCONN48,1907
  API_MSG_BIND,API_MSG_BIND50,1931
  API_MSG_CONNECT,API_MSG_CONNECT51,1948
  API_MSG_DISCONNECT,API_MSG_DISCONNECT52,1968
  API_MSG_LISTEN,API_MSG_LISTEN54,1993
  API_MSG_ACCEPT,API_MSG_ACCEPT55,2012
  API_MSG_SEND,API_MSG_SEND57,2033
  API_MSG_RECV,API_MSG_RECV58,2050
  API_MSG_WRITE,API_MSG_WRITE59,2067
  API_MSG_CLOSE,API_MSG_CLOSE61,2087
  API_MSG_MAXAPI_MSG_MAX63,2109
struct api_msg_msg {api_msg_msg66,2130
  struct netconn *conn;conn67,2152
  enum netconn_type conntype;conntype68,2177
    struct pbuf *p;   p70,2219
      struct ip_addr *ipaddr;ipaddr72,2258
      u16_t port;port73,2289
    } bc;bc74,2308
      void *dataptr;dataptr76,2333
      u16_t len;len77,2355
      unsigned char copy;copy78,2373
    } w;    w79,2400
    sys_mbox_t mbox;mbox80,2414
    u16_t len;len81,2436
  } msg;msg82,2452
struct api_msg {api_msg85,2468
  enum api_msg_type type;type86,2486
  struct api_msg_msg msg;msg87,2513

os/lwip-1.1.0/src/include/lwip/arch.h,5478
#define __LWIP_ARCH_H____LWIP_ARCH_H__33,1664
#define LITTLE_ENDIAN LITTLE_ENDIAN36,1714
#define BIG_ENDIAN BIG_ENDIAN40,1772
#define PACK_STRUCT_BEGINPACK_STRUCT_BEGIN46,1858
#define PACK_STRUCT_ENDPACK_STRUCT_END50,1944
#define PACK_STRUCT_FIELD(PACK_STRUCT_FIELD54,2028
#define  EPERM EPERM61,2127
#define  ENOENT ENOENT62,2180
#define  ESRCH ESRCH63,2236
#define  EINTR EINTR64,2281
#define  EIO EIO65,2334
#define  ENXIO ENXIO66,2371
#define  E2BIG E2BIG67,2426
#define  ENOEXEC ENOEXEC68,2473
#define  EBADF EBADF69,2522
#define  ECHILD ECHILD70,2567
#define  EAGAIN EAGAIN71,2616
#define  ENOMEM ENOMEM72,2656
#define  EACCES EACCES73,2700
#define  EFAULT EFAULT74,2748
#define  ENOTBLK ENOTBLK75,2790
#define  EBUSY EBUSY76,2843
#define  EEXIST EEXIST77,2896
#define  EXDEV EXDEV78,2938
#define  ENODEV ENODEV79,2985
#define  ENOTDIR ENOTDIR80,3030
#define  EISDIR EISDIR81,3077
#define  EINVAL EINVAL82,3122
#define  ENFILE ENFILE83,3169
#define  EMFILE EMFILE84,3219
#define  ENOTTY ENOTTY85,3269
#define  ETXTBSY ETXTBSY86,3316
#define  EFBIG EFBIG87,3362
#define  ENOSPC ENOSPC88,3406
#define  ESPIPE ESPIPE89,3460
#define  EROFS EROFS90,3503
#define  EMLINK EMLINK91,3554
#define  EPIPE EPIPE92,3599
#define  EDOM EDOM93,3640
#define  ERANGE ERANGE94,3704
#define  EDEADLK EDEADLK95,3764
#define  ENAMETOOLONG ENAMETOOLONG96,3825
#define  ENOLCK ENOLCK97,3878
#define  ENOSYS ENOSYS98,3934
#define  ENOTEMPTY ENOTEMPTY99,3989
#define  ELOOP ELOOP100,4040
#define  EWOULDBLOCK EWOULDBLOCK101,4105
#define  ENOMSG ENOMSG102,4164
#define  EIDRM EIDRM103,4221
#define  ECHRNG ECHRNG104,4269
#define  EL2NSYNC EL2NSYNC105,4327
#define  EL3HLT EL3HLT106,4382
#define  EL3RST EL3RST107,4427
#define  ELNRNG ELNRNG108,4471
#define  EUNATCH EUNATCH109,4526
#define  ENOCSI ENOCSI110,4586
#define  EL2HLT EL2HLT111,4643
#define  EBADE EBADE112,4688
#define  EBADR EBADR113,4734
#define  EXFULL EXFULL114,4790
#define  ENOANO ENOANO115,4834
#define  EBADRQC EBADRQC116,4873
#define  EBADSLT EBADSLT117,4925
#define  EDEADLOCK EDEADLOCK119,4971
#define  EBFONT EBFONT121,5002
#define  ENOSTR ENOSTR122,5053
#define  ENODATA ENODATA123,5103
#define  ETIME ETIME124,5152
#define  ENOSR ENOSR125,5195
#define  ENONET ENONET126,5249
#define  ENOPKG ENOPKG127,5309
#define  EREMOTE EREMOTE128,5361
#define  ENOLINK ENOLINK129,5409
#define  EADV EADV130,5462
#define  ESRMNT ESRMNT131,5506
#define  ECOMM ECOMM132,5550
#define  EPROTO EPROTO133,5607
#define  EMULTIHOP EMULTIHOP134,5652
#define  EDOTDOT EDOTDOT135,5702
#define  EBADMSG EBADMSG136,5752
#define  EOVERFLOW EOVERFLOW137,5802
#define  ENOTUNIQ ENOTUNIQ138,5871
#define  EBADFD EBADFD139,5928
#define  EREMCHG EREMCHG140,5987
#define  ELIBACC ELIBACC141,6041
#define  ELIBBAD ELIBBAD142,6111
#define  ELIBSCN ELIBSCN143,6179
#define  ELIBMAX ELIBMAX144,6242
#define  ELIBEXEC ELIBEXEC145,6321
#define  EILSEQ EILSEQ146,6389
#define  ERESTART ERESTART147,6441
#define  ESTRPIPE ESTRPIPE148,6515
#define  EUSERS EUSERS149,6564
#define  ENOTSOCK ENOTSOCK150,6609
#define  EDESTADDRREQ EDESTADDRREQ151,6670
#define  EMSGSIZE EMSGSIZE152,6733
#define  EPROTOTYPE EPROTOTYPE153,6780
#define  ENOPROTOOPT ENOPROTOOPT154,6843
#define  EPROTONOSUPPORT EPROTONOSUPPORT155,6899
#define  ESOCKTNOSUPPORT ESOCKTNOSUPPORT156,6959
#define  EOPNOTSUPP EOPNOTSUPP157,7022
#define  EPFNOSUPPORT EPFNOSUPPORT158,7100
#define  EAFNOSUPPORT EAFNOSUPPORT159,7164
#define  EADDRINUSE EADDRINUSE160,7239
#define  EADDRNOTAVAIL EADDRNOTAVAIL161,7294
#define  ENETDOWN ENETDOWN162,7361
#define  ENETUNREACH ENETUNREACH163,7408
#define  ENETRESET ENETRESET164,7465
#define  ECONNABORTED ECONNABORTED165,7541
#define  ECONNRESET ECONNRESET166,7609
#define  ENOBUFS ENOBUFS167,7667
#define  EISCONN EISCONN168,7725
#define  ENOTCONN ENOTCONN169,7797
#define  ESHUTDOWN ESHUTDOWN170,7864
#define  ETOOMANYREFS ETOOMANYREFS171,7942
#define  ETIMEDOUT ETIMEDOUT172,8012
#define  ECONNREFUSED ECONNREFUSED173,8065
#define  EHOSTDOWN EHOSTDOWN174,8119
#define  EHOSTUNREACH EHOSTUNREACH175,8164
#define  EALREADY EALREADY176,8216
#define  EINPROGRESS EINPROGRESS177,8277
#define  ESTALE ESTALE178,8337
#define  EUCLEAN EUCLEAN179,8390
#define  ENOTNAM ENOTNAM180,8447
#define  ENAVAIL ENAVAIL181,8507
#define  EISNAM EISNAM182,8569
#define  EREMOTEIO EREMOTEIO183,8621
#define  EDQUOT EDQUOT184,8670
#define  ENOMEDIUM ENOMEDIUM186,8718
#define  EMEDIUMTYPE EMEDIUMTYPE187,8766
#define	ENSROK	ENSROK190,8822
#define	ENSRNODATA	ENSRNODATA191,8887
#define	ENSRFORMERR	ENSRFORMERR192,8957
#define	ENSRSERVFAIL ENSRSERVFAIL193,9029
#define	ENSRNOTFOUND ENSRNOTFOUND194,9097
#define	ENSRNOTIMP	ENSRNOTIMP195,9151
#define	ENSRREFUSED	ENSRREFUSED196,9231
#define	ENSRBADQUERY ENSRBADQUERY197,9287
#define	ENSRBADNAME	ENSRBADNAME198,9342
#define	ENSRBADFAMILY ENSRBADFAMILY199,9398
#define	ENSRBADRESP	ENSRBADRESP200,9458
#define	ENSRCONNREFUSED	ENSRCONNREFUSED201,9512
#define	ENSRTIMEOUT	ENSRTIMEOUT202,9577
#define	ENSROF	ENSROF203,9645
#define	ENSRFILE	ENSRFILE204,9684
#define	ENSRNOMEM	ENSRNOMEM205,9731
#define	ENSRDESTRUCTION	ENSRDESTRUCTION206,9774
#define	ENSRQUERYDOMAINTOOLONG	ENSRQUERYDOMAINTOOLONG207,9839
#define	ENSRCNAMELOOP	ENSRCNAMELOOP208,9905

os/lwip-1.1.0/src/include/lwip/debug.h,763
#define __LWIP_DEBUG_H____LWIP_DEBUG_H__33,1665
#define DBG_LEVEL_OFF DBG_LEVEL_OFF44,1824
#define DBG_LEVEL_WARNING DBG_LEVEL_WARNING45,1853
#define DBG_LEVEL_SERIOUS DBG_LEVEL_SERIOUS46,1925
#define DBG_LEVEL_SEVERE DBG_LEVEL_SEVERE47,1993
#define DBG_MASK_LEVEL DBG_MASK_LEVEL48,2030
#define DBG_ON DBG_ON51,2119
#define DBG_OFF DBG_OFF53,2201
#define DBG_TRACE DBG_TRACE56,2309
#define DBG_STATE DBG_STATE58,2424
#define DBG_FRESH DBG_FRESH60,2535
#define DBG_HALT DBG_HALT62,2633
#  define LWIP_ASSERT(LWIP_ASSERT65,2685
#  define LWIP_ASSERT(LWIP_ASSERT67,2770
#  define LWIP_DEBUGF(LWIP_DEBUGF74,2953
#  define LWIP_ERROR(LWIP_ERROR75,3168
#  define LWIP_DEBUGF(LWIP_DEBUGF77,3260
#  define LWIP_ERROR(LWIP_ERROR78,3293

os/lwip-1.1.0/src/include/lwip/def.h,143
#define __LWIP_DEF_H____LWIP_DEF_H__33,1663
#define LWIP_MAX(LWIP_MAX38,1751
#define LWIP_MIN(LWIP_MIN39,1799
#define NULL NULL42,1863

os/lwip-1.1.0/src/include/lwip/dhcp.h,6162
#define __LWIP_DHCP_H____LWIP_DHCP_H__5,43
#define DHCP_COARSE_TIMER_SECS DHCP_COARSE_TIMER_SECS12,216
#define DHCP_FINE_TIMER_MSECS DHCP_FINE_TIMER_MSECS14,328
struct dhcpdhcp16,366
  u8_t state;state19,425
  u8_t tries;tries21,477
  u32_t xid;xid23,547
  struct udp_pcb *pcb;pcb25,606
  struct pbuf *p;p27,669
  struct dhcp_msg *msg_in;msg_in29,711
  struct dhcp_msg *options_in; options_in31,770
  u16_t options_in_len;options_in_len33,840
  struct pbuf *p_out; /* pbuf of outcoming msg */p_out35,867
  struct dhcp_msg *msg_out; /* outgoing msg */msg_out36,918
  u16_t options_out_len; /* outgoing msg options length */options_out_len37,966
  u16_t request_timeout; /* #ticks with period DHCP_FINE_TIMER_SECS for request timeout */request_timeout38,1026
  u16_t t1_timeout;  /* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time */t1_timeout39,1118
  u16_t t2_timeout;  /* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time */t2_timeout40,1205
  struct ip_addr server_ip_addr; /* dhcp server address that offered this lease */server_ip_addr41,1291
  struct ip_addr offered_ip_addr;offered_ip_addr42,1375
  struct ip_addr offered_sn_mask;offered_sn_mask43,1410
  struct ip_addr offered_gw_addr;offered_gw_addr44,1445
  struct ip_addr offered_bc_addr;offered_bc_addr45,1480
#define DHCP_MAX_DNS DHCP_MAX_DNS46,1515
  u32_t dns_count; /* actual number of DNS servers obtained */dns_count47,1539
  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; /* DNS server addresses */offered_dns_addr48,1603
  u32_t offered_t0_lease; /* lease period (in seconds) */offered_t0_lease50,1683
  u32_t offered_t1_renew; /* recommended renew time (usually 50% of lease period) */offered_t1_renew51,1742
  u32_t offered_t2_rebind; /* recommended rebind time (usually 66% of lease period)  */offered_t2_rebind52,1828
struct dhcp_msgdhcp_msg68,2249
#define DHCP_CHADDR_LEN DHCP_CHADDR_LEN81,2682
#define DHCP_SNAME_LEN DHCP_SNAME_LEN83,2763
#define DHCP_FILE_LEN DHCP_FILE_LEN85,2841
#define DHCP_MIN_OPTIONS_LEN DHCP_MIN_OPTIONS_LEN88,2953
#  undef DHCP_OPTIONS_LENDHCP_OPTIONS_LEN91,3124
#  define DHCP_OPTIONS_LEN DHCP_OPTIONS_LEN96,3335
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT99,3446
#define DHCP_MSG_OFS DHCP_MSG_OFS127,4354
  #define DHCP_OP_OFS DHCP_OP_OFS128,4393
  #define DHCP_HTYPE_OFS DHCP_HTYPE_OFS129,4435
  #define DHCP_HLEN_OFS DHCP_HLEN_OFS130,4480
  #define DHCP_HOPS_OFS DHCP_HOPS_OFS131,4524
  #define DHCP_XID_OFS DHCP_XID_OFS132,4568
  #define DHCP_SECS_OFS DHCP_SECS_OFS133,4611
  #define DHCP_FLAGS_OFS DHCP_FLAGS_OFS134,4655
  #define DHCP_CIADDR_OFS DHCP_CIADDR_OFS135,4701
  #define DHCP_YIADDR_OFS DHCP_YIADDR_OFS136,4748
  #define DHCP_SIADDR_OFS DHCP_SIADDR_OFS137,4795
  #define DHCP_GIADDR_OFS DHCP_GIADDR_OFS138,4842
  #define DHCP_CHADDR_OFS DHCP_CHADDR_OFS139,4889
  #define DHCP_SNAME_OFS DHCP_SNAME_OFS140,4936
  #define DHCP_FILE_OFS DHCP_FILE_OFS141,4982
#define DHCP_MSG_LEN DHCP_MSG_LEN142,5028
#define DHCP_COOKIE_OFS DHCP_COOKIE_OFS144,5056
#define DHCP_OPTIONS_OFS DHCP_OPTIONS_OFS145,5111
#define DHCP_CLIENT_PORT DHCP_CLIENT_PORT147,5173
#define DHCP_SERVER_PORT DHCP_SERVER_PORT148,5204
#define DHCP_REQUESTING DHCP_REQUESTING151,5262
#define DHCP_INIT DHCP_INIT152,5289
#define DHCP_REBOOTING DHCP_REBOOTING153,5310
#define DHCP_REBINDING DHCP_REBINDING154,5336
#define DHCP_RENEWING DHCP_RENEWING155,5362
#define DHCP_SELECTING DHCP_SELECTING156,5387
#define DHCP_INFORMING DHCP_INFORMING157,5413
#define DHCP_CHECKING DHCP_CHECKING158,5439
#define DHCP_PERMANENT DHCP_PERMANENT159,5464
#define DHCP_BOUND DHCP_BOUND160,5490
#define DHCP_BACKING_OFF DHCP_BACKING_OFF162,5567
#define DHCP_OFF DHCP_OFF163,5596
#define DHCP_BOOTREQUEST DHCP_BOOTREQUEST165,5620
#define DHCP_BOOTREPLY DHCP_BOOTREPLY166,5648
#define DHCP_DISCOVER DHCP_DISCOVER168,5676
#define DHCP_OFFER DHCP_OFFER169,5701
#define DHCP_REQUEST DHCP_REQUEST170,5723
#define DHCP_DECLINE DHCP_DECLINE171,5747
#define DHCP_ACK DHCP_ACK172,5771
#define DHCP_NAK DHCP_NAK173,5791
#define DHCP_RELEASE DHCP_RELEASE174,5811
#define DHCP_INFORM DHCP_INFORM175,5835
#define DHCP_HTYPE_ETH DHCP_HTYPE_ETH177,5860
#define DHCP_HLEN_ETH DHCP_HLEN_ETH179,5888
#define DHCP_BROADCAST_FLAG DHCP_BROADCAST_FLAG181,5915
#define DHCP_BROADCAST_MASK DHCP_BROADCAST_MASK182,5947
#define DHCP_OPTION_PAD DHCP_OPTION_PAD185,6027
#define DHCP_OPTION_SUBNET_MASK DHCP_OPTION_SUBNET_MASK186,6054
#define DHCP_OPTION_ROUTER DHCP_OPTION_ROUTER187,6108
#define DHCP_OPTION_DNS_SERVER DHCP_OPTION_DNS_SERVER188,6138
#define DHCP_OPTION_HOSTNAME DHCP_OPTION_HOSTNAME189,6173
#define DHCP_OPTION_IP_TTL DHCP_OPTION_IP_TTL190,6206
#define DHCP_OPTION_MTU DHCP_OPTION_MTU191,6237
#define DHCP_OPTION_BROADCAST DHCP_OPTION_BROADCAST192,6265
#define DHCP_OPTION_TCP_TTL DHCP_OPTION_TCP_TTL193,6299
#define DHCP_OPTION_END DHCP_OPTION_END194,6331
#define DHCP_OPTION_REQUESTED_IP DHCP_OPTION_REQUESTED_IP197,6383
#define DHCP_OPTION_LEASE_TIME DHCP_OPTION_LEASE_TIME198,6461
#define DHCP_OPTION_OVERLOAD DHCP_OPTION_OVERLOAD199,6544
#define DHCP_OPTION_MESSAGE_TYPE DHCP_OPTION_MESSAGE_TYPE201,6638
#define DHCP_OPTION_MESSAGE_TYPE_LEN DHCP_OPTION_MESSAGE_TYPE_LEN202,6714
#define DHCP_OPTION_SERVER_ID DHCP_OPTION_SERVER_ID205,6758
#define DHCP_OPTION_PARAMETER_REQUEST_LIST DHCP_OPTION_PARAMETER_REQUEST_LIST206,6830
#define DHCP_OPTION_MAX_MSG_SIZE DHCP_OPTION_MAX_MSG_SIZE208,6922
#define DHCP_OPTION_MAX_MSG_SIZE_LEN DHCP_OPTION_MAX_MSG_SIZE_LEN209,7009
#define DHCP_OPTION_T1 DHCP_OPTION_T1211,7051
#define DHCP_OPTION_T2 DHCP_OPTION_T2212,7100
#define DHCP_OPTION_CLIENT_ID DHCP_OPTION_CLIENT_ID213,7151
#define DHCP_OPTION_TFTP_SERVERNAME DHCP_OPTION_TFTP_SERVERNAME214,7185
#define DHCP_OPTION_BOOTFILE DHCP_OPTION_BOOTFILE215,7225
#define DHCP_OVERLOAD_NONE DHCP_OVERLOAD_NONE218,7344
#define DHCP_OVERLOAD_FILE DHCP_OVERLOAD_FILE219,7374
#define DHCP_OVERLOAD_SNAME DHCP_OVERLOAD_SNAME220,7404
#define DHCP_OVERLOAD_SNAME_FILE DHCP_OVERLOAD_SNAME_FILE221,7436

os/lwip-1.1.0/src/include/lwip/err.h,558
#define __LWIP_ERR_H____LWIP_ERR_H__33,1663
typedef s8_t err_t;err_t39,1738
#define ERR_OK ERR_OK43,1803
#define ERR_MEM ERR_MEM44,1860
#define ERR_BUF ERR_BUF45,1917
#define ERR_ABRT ERR_ABRT48,1978
#define ERR_RST ERR_RST49,2035
#define ERR_CLSD ERR_CLSD50,2092
#define ERR_CONN ERR_CONN51,2149
#define ERR_VAL ERR_VAL53,2208
#define ERR_ARG ERR_ARG55,2267
#define ERR_RTE ERR_RTE57,2326
#define ERR_USE ERR_USE59,2385
#define ERR_IF ERR_IF61,2444
#define ERR_ISCONN ERR_ISCONN62,2501
#define lwip_strerr(lwip_strerr68,2626

os/lwip-1.1.0/src/include/lwip/mem.h,220
#define __LWIP_MEM_H____LWIP_MEM_H__33,1663
typedef u32_t mem_size_t;mem_size_t39,1761
typedef u16_t mem_size_t;mem_size_t41,1795
#define MEM_ALIGN_SIZE(MEM_ALIGN_SIZE53,2067
#define MEM_ALIGN(MEM_ALIGN57,2178

os/lwip-1.1.0/src/include/lwip/memp.h,526
#define __LWIP_MEMP_H____LWIP_MEMP_H__34,1666
  MEMP_PBUF,MEMP_PBUF39,1734
  MEMP_RAW_PCB,MEMP_RAW_PCB40,1748
  MEMP_UDP_PCB,MEMP_UDP_PCB41,1765
  MEMP_TCP_PCB,MEMP_TCP_PCB42,1782
  MEMP_TCP_PCB_LISTEN,MEMP_TCP_PCB_LISTEN43,1799
  MEMP_TCP_SEG,MEMP_TCP_SEG44,1823
  MEMP_NETBUF,MEMP_NETBUF46,1842
  MEMP_NETCONN,MEMP_NETCONN47,1858
  MEMP_API_MSG,MEMP_API_MSG48,1875
  MEMP_TCPIP_MSG,MEMP_TCPIP_MSG49,1892
  MEMP_SYS_TIMEOUT,MEMP_SYS_TIMEOUT51,1913
  MEMP_MAXMEMP_MAX53,1938
} memp_t;memp_t54,1950

os/lwip-1.1.0/src/include/lwip/netif.h,1101
#define __LWIP_NETIF_H____LWIP_NETIF_H__33,1665
#define NETIF_MAX_HWADDR_LEN NETIF_MAX_HWADDR_LEN49,1979
#define NETIF_FLAG_UP NETIF_FLAG_UP57,2242
#define NETIF_FLAG_BROADCAST NETIF_FLAG_BROADCAST59,2321
#define NETIF_FLAG_POINTTOPOINT NETIF_FLAG_POINTTOPOINT61,2424
#define NETIF_FLAG_DHCP NETIF_FLAG_DHCP63,2517
#define NETIF_FLAG_LINK_UP NETIF_FLAG_LINK_UP66,2640
struct netif {netif72,2885
  struct netif *next;next74,2942
  struct ip_addr ip_addr;ip_addr77,3024
  struct ip_addr netmask;netmask78,3051
  struct ip_addr gw;gw79,3078
  err_t (* input)(struct pbuf *p, struct netif *inp);input83,3210
  err_t (* output)(struct netif *netif, struct pbuf *p,output87,3463
  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);linkoutput92,3725
  void *state;state95,3900
  struct dhcp *dhcp;dhcp98,3990
  unsigned char hwaddr_len;hwaddr_len101,4061
  unsigned char hwaddr[NETIF_MAX_HWADDR_LEN];hwaddr103,4146
  u16_t mtu;mtu105,4236
  u8_t flags;flags107,4290
  u8_t link_type;link_type109,4325
  char name[2];name111,4379
  u8_t num;num113,4431

os/lwip-1.1.0/src/include/lwip/opt.h,6634
#define __LWIP_OPT_H____LWIP_OPT_H__33,1663
#define SYS_LIGHTWEIGHT_PROT SYS_LIGHTWEIGHT_PROT49,2111
#define NO_SYS NO_SYS53,2180
#define MEM_ALIGNMENT MEM_ALIGNMENT61,2494
#define MEM_SIZE MEM_SIZE67,2705
#define MEMP_SANITY_CHECK	MEMP_SANITY_CHECK71,2788
#define MEMP_NUM_PBUF MEMP_NUM_PBUF78,3015
#define MEMP_NUM_RAW_PCB MEMP_NUM_RAW_PCB83,3132
#define MEMP_NUM_UDP_PCB MEMP_NUM_UDP_PCB89,3316
#define MEMP_NUM_TCP_PCB MEMP_NUM_TCP_PCB94,3475
#define MEMP_NUM_TCP_PCB_LISTEN MEMP_NUM_TCP_PCB_LISTEN99,3636
#define MEMP_NUM_TCP_SEG MEMP_NUM_TCP_SEG104,3792
#define MEMP_NUM_SYS_TIMEOUT MEMP_NUM_SYS_TIMEOUT109,3952
#define MEMP_NUM_NETBUF MEMP_NUM_NETBUF116,4218
#define MEMP_NUM_NETCONN MEMP_NUM_NETCONN120,4351
#define MEMP_NUM_API_MSG MEMP_NUM_API_MSG126,4567
#define MEMP_NUM_TCPIP_MSG MEMP_NUM_TCPIP_MSG132,4806
#define PBUF_POOL_SIZE PBUF_POOL_SIZE139,4990
#define PBUF_POOL_BUFSIZE PBUF_POOL_BUFSIZE145,5139
#define PBUF_LINK_HLEN PBUF_LINK_HLEN152,5346
#define ARP_TABLE_SIZE ARP_TABLE_SIZE161,5538
#define ARP_QUEUEING ARP_QUEUEING177,6027
#define IP_FORWARD IP_FORWARD195,6686
#define IP_OPTIONS IP_OPTIONS201,6886
#define IP_REASSEMBLY IP_REASSEMBLY211,7207
#define IP_FRAG IP_FRAG216,7340
#define ICMP_TTL ICMP_TTL222,7455
#define LWIP_RAW LWIP_RAW228,7571
#define RAW_TTL RAW_TTL232,7641
#define LWIP_DHCP LWIP_DHCP238,7758
#define DHCP_DOES_ARP_CHECK DHCP_DOES_ARP_CHECK244,7922
#define LWIP_UDP LWIP_UDP249,8034
#define UDP_TTL UDP_TTL253,8104
#define LWIP_TCP LWIP_TCP258,8218
#define TCP_TTL TCP_TTL262,8288
#define TCP_WND TCP_WND266,8360
#define TCP_MAXRTX TCP_MAXRTX270,8437
#define TCP_SYNMAXRTX TCP_SYNMAXRTX274,8514
#define TCP_QUEUE_OOSEQ TCP_QUEUE_OOSEQ281,8714
#define TCP_MSS TCP_MSS286,8817
#define TCP_SND_BUF TCP_SND_BUF291,8970
#define TCP_SND_QUEUELEN TCP_SND_QUEUELEN297,9163
#define TCP_SNDLOWAT TCP_SNDLOWAT309,9573
#define LWIP_HAVE_LOOPIF	LWIP_HAVE_LOOPIF314,9706
#define LWIP_EVENT_API LWIP_EVENT_API318,9769
#define LWIP_CALLBACK_API LWIP_CALLBACK_API319,9812
#define LWIP_EVENT_API LWIP_EVENT_API321,9863
#define LWIP_CALLBACK_API LWIP_CALLBACK_API322,9906
#define LWIP_COMPAT_SOCKETS LWIP_COMPAT_SOCKETS326,9989
#define TCPIP_THREAD_PRIO TCPIP_THREAD_PRIO331,10071
#define SLIPIF_THREAD_PRIO SLIPIF_THREAD_PRIO335,10152
#define PPP_THREAD_PRIO PPP_THREAD_PRIO339,10230
#define DEFAULT_THREAD_PRIO DEFAULT_THREAD_PRIO343,10312
# define SO_REUSE SO_REUSE350,10482
#define LWIP_STATS LWIP_STATS356,10655
#define LWIP_STATS_DISPLAY LWIP_STATS_DISPLAY362,10754
#define LINK_STATS	LINK_STATS366,10814
#define IP_STATS	IP_STATS370,10864
#define IPFRAG_STATS	IPFRAG_STATS374,10916
#define ICMP_STATS	ICMP_STATS378,10970
#define UDP_STATS	UDP_STATS382,11021
#define TCP_STATS	TCP_STATS386,11071
#define MEM_STATS	MEM_STATS390,11121
#define MEMP_STATS	MEMP_STATS394,11172
#define PBUF_STATS	PBUF_STATS398,11224
#define SYS_STATS	SYS_STATS402,11275
#define RAW_STATS	RAW_STATS406,11325
#define LINK_STATS	LINK_STATS411,11365
#define IP_STATS	IP_STATS412,11387
#define IPFRAG_STATS	IPFRAG_STATS413,11407
#define ICMP_STATS	ICMP_STATS414,11431
#define UDP_STATS	UDP_STATS415,11453
#define TCP_STATS	TCP_STATS416,11474
#define MEM_STATS	MEM_STATS417,11495
#define MEMP_STATS	MEMP_STATS418,11516
#define PBUF_STATS	PBUF_STATS419,11538
#define SYS_STATS	SYS_STATS420,11560
#define RAW_STATS	RAW_STATS421,11581
#define LWIP_STATS_DISPLAY	LWIP_STATS_DISPLAY422,11602
#define PPP_SUPPORT PPP_SUPPORT429,11725
#define NUM_PPP NUM_PPP434,11821
#define PAP_SUPPORT PAP_SUPPORT439,11920
#define CHAP_SUPPORT CHAP_SUPPORT443,12019
#define MSCHAP_SUPPORT MSCHAP_SUPPORT446,12097
#define CBCP_SUPPORT CBCP_SUPPORT447,12184
#define CCP_SUPPORT CCP_SUPPORT448,12269
#define VJ_SUPPORT VJ_SUPPORT451,12375
#define MD5_SUPPORT MD5_SUPPORT455,12491
#define FSM_DEFTIMEOUT FSM_DEFTIMEOUT462,12608
#define FSM_DEFMAXTERMREQS FSM_DEFMAXTERMREQS463,12687
#define FSM_DEFMAXCONFREQS FSM_DEFMAXCONFREQS464,12782
#define FSM_DEFMAXNAKLOOPS FSM_DEFMAXNAKLOOPS465,12877
#define UPAP_DEFTIMEOUT UPAP_DEFTIMEOUT467,12962
#define UPAP_DEFREQTIME UPAP_DEFREQTIME468,13058
#define CHAP_DEFTIMEOUT CHAP_DEFTIMEOUT470,13151
#define CHAP_DEFTRANSMITS CHAP_DEFTRANSMITS471,13230
#define LCP_ECHOINTERVAL LCP_ECHOINTERVAL476,13400
#define LCP_ECHOINTERVAL LCP_ECHOINTERVAL478,13450
#define LCP_MAXECHOFAILS LCP_MAXECHOFAILS482,13562
#define PPP_MAXIDLEFLAG PPP_MAXIDLEFLAG485,13671
#define PPP_MTU PPP_MTU495,13961
#define PPP_MAXMTU PPP_MAXMTU499,14119
#define PPP_MINMTU PPP_MINMTU501,14200
#define PPP_MRU PPP_MRU502,14244
#define PPP_MAXMRU PPP_MAXMRU503,14339
#define PPP_DEFMRU PPP_DEFMRU504,14416
#define PPP_MINMRU PPP_MINMRU505,14492
#define MAXNAMELEN MAXNAMELEN508,14578
#define MAXSECRETLEN MAXSECRETLEN509,14673
#define CHECKSUM_GEN_IP CHECKSUM_GEN_IP516,14886
#define CHECKSUM_GEN_UDP CHECKSUM_GEN_UDP520,14966
#define CHECKSUM_GEN_TCP CHECKSUM_GEN_TCP524,15046
#define CHECKSUM_CHECK_IP CHECKSUM_CHECK_IP528,15127
#define CHECKSUM_CHECK_UDP CHECKSUM_CHECK_UDP532,15209
#define CHECKSUM_CHECK_TCP CHECKSUM_CHECK_TCP536,15290
#define DBG_TYPES_ON DBG_TYPES_ON542,15411
#define ETHARP_DEBUG ETHARP_DEBUG546,15486
#define NETIF_DEBUG NETIF_DEBUG550,15566
#define PBUF_DEBUG PBUF_DEBUG554,15645
#define API_LIB_DEBUG API_LIB_DEBUG558,15727
#define API_MSG_DEBUG API_MSG_DEBUG562,15809
#define SOCKETS_DEBUG SOCKETS_DEBUG566,15891
#define ICMP_DEBUG ICMP_DEBUG570,15970
#define INET_DEBUG INET_DEBUG574,16049
#define IP_DEBUG IP_DEBUG578,16126
#define IP_REASS_DEBUG IP_REASS_DEBUG582,16209
#define RAW_DEBUG RAW_DEBUG586,16287
#define MEM_DEBUG MEM_DEBUG590,16365
#define MEMP_DEBUG MEMP_DEBUG594,16444
#define SYS_DEBUG SYS_DEBUG598,16522
#define TCP_DEBUG TCP_DEBUG602,16600
#define TCP_INPUT_DEBUG TCP_INPUT_DEBUG606,16684
#define TCP_FR_DEBUG TCP_FR_DEBUG610,16765
#define TCP_RTO_DEBUG TCP_RTO_DEBUG614,16847
#define TCP_REXMIT_DEBUG TCP_REXMIT_DEBUG618,16932
#define TCP_CWND_DEBUG TCP_CWND_DEBUG622,17015
#define TCP_WND_DEBUG TCP_WND_DEBUG626,17097
#define TCP_OUTPUT_DEBUG TCP_OUTPUT_DEBUG630,17182
#define TCP_RST_DEBUG TCP_RST_DEBUG634,17264
#define TCP_QLEN_DEBUG TCP_QLEN_DEBUG638,17347
#define UDP_DEBUG UDP_DEBUG642,17425
#define TCPIP_DEBUG TCPIP_DEBUG646,17505
#define PPP_DEBUG PPP_DEBUG650,17584
#define SLIP_DEBUG SLIP_DEBUG654,17664
#define DHCP_DEBUG DHCP_DEBUG658,17744
#define DBG_MIN_LEVEL DBG_MIN_LEVEL663,17828

os/lwip-1.1.0/src/include/lwip/pbuf.h,913
#define __LWIP_PBUF_H____LWIP_PBUF_H__34,1666
#define PBUF_TRANSPORT_HLEN PBUF_TRANSPORT_HLEN39,1719
#define PBUF_IP_HLEN PBUF_IP_HLEN40,1751
  PBUF_TRANSPORT,PBUF_TRANSPORT43,1801
  PBUF_IP,PBUF_IP44,1820
  PBUF_LINK,PBUF_LINK45,1832
  PBUF_RAWPBUF_RAW46,1846
} pbuf_layer;pbuf_layer47,1858
  PBUF_RAM,PBUF_RAM50,1891
  PBUF_ROM,PBUF_ROM51,1904
  PBUF_REF,PBUF_REF52,1917
  PBUF_POOLPBUF_POOL53,1930
} pbuf_flag;pbuf_flag54,1943
#define PBUF_FLAG_RAM PBUF_FLAG_RAM58,2064
#define PBUF_FLAG_ROM PBUF_FLAG_ROM59,2142
#define PBUF_FLAG_POOL PBUF_FLAG_POOL60,2220
#define PBUF_FLAG_REF PBUF_FLAG_REF61,2305
#define PBUF_FLAG_LINK_BROADCAST PBUF_FLAG_LINK_BROADCAST64,2445
struct pbuf {pbuf66,2487
  struct pbuf *next;next68,2550
  void *payload;payload71,2625
  u16_t tot_len;tot_len80,2884
  u16_t len;  len83,2938
  u16_t flags;flags86,3013
  u16_t ref;ref93,3244

os/lwip-1.1.0/src/include/lwip/raw.h,288
#define __LWIP_RAW_H____LWIP_RAW_H__33,1649
struct raw_pcb {raw_pcb41,1773
  IP_PCB;IP_PCB43,1830
  struct raw_pcb *next;next45,1843
  u16_t protocol;protocol47,1870
  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,recv49,1891
  void *recv_arg;recv_arg51,1984

os/lwip-1.1.0/src/include/lwip/sio.h,42
typedef void * sio_fd_t;sio_fd_t38,1796

os/lwip-1.1.0/src/include/lwip/snmp.h,3730
#define __LWIP_SNMP_H____LWIP_SNMP_H__34,1757
#define snmp_add_ifinoctets(snmp_add_ifinoctets112,4171
#define snmp_inc_ifinucastpkts(snmp_inc_ifinucastpkts113,4208
#define snmp_inc_ifinnucastpkts(snmp_inc_ifinnucastpkts114,4242
#define snmp_inc_ifindiscards(snmp_inc_ifindiscards115,4277
#define snmp_add_ifoutoctets(snmp_add_ifoutoctets116,4310
#define snmp_inc_ifoutucastpkts(snmp_inc_ifoutucastpkts117,4347
#define snmp_inc_ifoutnucastpkts(snmp_inc_ifoutnucastpkts118,4382
#define snmp_inc_ifoutdiscards(snmp_inc_ifoutdiscards119,4418
#define snmp_inc_ipinreceives(snmp_inc_ipinreceives122,4464
#define snmp_inc_ipindelivers(snmp_inc_ipindelivers123,4497
#define snmp_inc_ipindiscards(snmp_inc_ipindiscards124,4530
#define snmp_inc_ipoutdiscards(snmp_inc_ipoutdiscards125,4563
#define snmp_inc_ipoutrequests(snmp_inc_ipoutrequests126,4597
#define snmp_inc_ipunknownprotos(snmp_inc_ipunknownprotos127,4631
#define snmp_inc_ipnoroutes(snmp_inc_ipnoroutes128,4667
#define snmp_inc_ipforwdatagrams(snmp_inc_ipforwdatagrams129,4698
#define snmp_inc_icmpinmsgs(snmp_inc_icmpinmsgs132,4748
#define snmp_inc_icmpinerrors(snmp_inc_icmpinerrors133,4779
#define snmp_inc_icmpindestunreachs(snmp_inc_icmpindestunreachs134,4813
#define snmp_inc_icmpintimeexcds(snmp_inc_icmpintimeexcds135,4853
#define snmp_inc_icmpinparmprobs(snmp_inc_icmpinparmprobs136,4889
#define snmp_inc_icmpinsrcquenchs(snmp_inc_icmpinsrcquenchs137,4926
#define snmp_inc_icmpinredirects(snmp_inc_icmpinredirects138,4964
#define snmp_inc_icmpinechos(snmp_inc_icmpinechos139,5001
#define snmp_inc_icmpinechoreps(snmp_inc_icmpinechoreps140,5034
#define snmp_inc_icmpintimestamps(snmp_inc_icmpintimestamps141,5069
#define snmp_inc_icmpintimestampreps(snmp_inc_icmpintimestampreps142,5107
#define snmp_inc_icmpinaddrmasks(snmp_inc_icmpinaddrmasks143,5147
#define snmp_inc_icmpinaddrmaskreps(snmp_inc_icmpinaddrmaskreps144,5183
#define snmp_inc_icmpoutmsgs(snmp_inc_icmpoutmsgs145,5222
#define snmp_inc_icmpouterrors(snmp_inc_icmpouterrors146,5254
#define snmp_inc_icmpoutdestunreachs(snmp_inc_icmpoutdestunreachs147,5288
#define snmp_inc_icmpouttimeexcds(snmp_inc_icmpouttimeexcds148,5329
#define snmp_inc_icmpoutparmprobs(snmp_inc_icmpoutparmprobs149,5367
#define snmp_inc_icmpoutsrcquenchs(snmp_inc_icmpoutsrcquenchs150,5404
#define snmp_inc_icmpoutredirects(snmp_inc_icmpoutredirects151,5442
#define snmp_inc_icmpoutechos(snmp_inc_icmpoutechos152,5480
#define snmp_inc_icmpoutechoreps(snmp_inc_icmpoutechoreps153,5514
#define snmp_inc_icmpouttimestamps(snmp_inc_icmpouttimestamps154,5550
#define snmp_inc_icmpouttimestampreps(snmp_inc_icmpouttimestampreps155,5588
#define snmp_inc_icmpoutaddrmasks(snmp_inc_icmpoutaddrmasks156,5629
#define snmp_inc_icmpoutaddrmaskreps(snmp_inc_icmpoutaddrmaskreps157,5666
#define snmp_inc_tcpactiveopens(snmp_inc_tcpactiveopens159,5717
#define snmp_inc_tcppassiveopens(snmp_inc_tcppassiveopens160,5752
#define snmp_inc_tcpattemptfails(snmp_inc_tcpattemptfails161,5788
#define snmp_inc_tcpestabresets(snmp_inc_tcpestabresets162,5824
#define snmp_inc_tcpcurrestab(snmp_inc_tcpcurrestab163,5859
#define snmp_inc_tcpinsegs(snmp_inc_tcpinsegs164,5892
#define snmp_inc_tcpoutsegs(snmp_inc_tcpoutsegs165,5922
#define snmp_inc_tcpretranssegs(snmp_inc_tcpretranssegs166,5953
#define snmp_inc_tcpinerrs(snmp_inc_tcpinerrs167,5988
#define snmp_inc_tcpoutrsts(snmp_inc_tcpoutrsts168,6018
#define snmp_inc_udpindatagrams(snmp_inc_udpindatagrams171,6062
#define snmp_inc_udpnoports(snmp_inc_udpnoports172,6097
#define snmp_inc_udpinerrors(snmp_inc_udpinerrors173,6128
#define snmp_inc_udpoutdatagrams(snmp_inc_udpoutdatagrams174,6160

os/lwip-1.1.0/src/include/lwip/sockets.h,4762
#define __LWIP_SOCKETS_H____LWIP_SOCKETS_H__35,1671
struct sockaddr_in {sockaddr_in38,1728
  u8_t sin_len;sin_len39,1750
  u8_t sin_family;sin_family40,1767
  u16_t sin_port;sin_port41,1787
  struct in_addr sin_addr;sin_addr42,1806
  char sin_zero[8];sin_zero43,1834
struct sockaddr {sockaddr46,1861
  u8_t sa_len;sa_len47,1880
  u8_t sa_family;sa_family48,1896
  char sa_data[14];sa_data49,1915
#  define socklen_t socklen_t53,1961
#define SOCK_STREAM SOCK_STREAM57,1998
#define SOCK_DGRAM SOCK_DGRAM58,2025
#define SOCK_RAW SOCK_RAW59,2052
#define  SO_DEBUG SO_DEBUG64,2119
#define  SO_ACCEPTCONN SO_ACCEPTCONN65,2188
#define  SO_REUSEADDR SO_REUSEADDR66,2253
#define  SO_KEEPALIVE SO_KEEPALIVE67,2319
#define  SO_DONTROUTE SO_DONTROUTE68,2382
#define  SO_BROADCAST SO_BROADCAST69,2451
#define  SO_USELOOPBACK SO_USELOOPBACK70,2524
#define  SO_LINGER SO_LINGER71,2596
#define  SO_OOBINLINE SO_OOBINLINE72,2665
#define	 SO_REUSEPORT	SO_REUSEPORT73,2737
#define SO_DONTLINGER SO_DONTLINGER75,2809
#define SO_SNDBUF SO_SNDBUF80,2911
#define SO_RCVBUF SO_RCVBUF81,2964
#define SO_SNDLOWAT SO_SNDLOWAT82,3020
#define SO_RCVLOWAT SO_RCVLOWAT83,3078
#define SO_SNDTIMEO SO_SNDTIMEO84,3139
#define SO_RCVTIMEO SO_RCVTIMEO85,3190
#define  SO_ERROR SO_ERROR86,3244
#define  SO_TYPE SO_TYPE87,3307
struct linger {linger94,3426
       int l_onoff;                /* option on/off */l_onoff95,3443
       int l_linger;               /* linger time */l_linger96,3499
#define  SOL_SOCKET SOL_SOCKET102,3635
#define AF_UNSPEC AF_UNSPEC105,3701
#define AF_INET AF_INET106,3728
#define PF_INET PF_INET107,3755
#define PF_UNSPEC PF_UNSPEC108,3788
#define IPPROTO_IP IPPROTO_IP110,3825
#define IPPROTO_TCP IPPROTO_TCP111,3852
#define IPPROTO_UDP IPPROTO_UDP112,3879
#define INADDR_ANY INADDR_ANY114,3909
#define INADDR_BROADCAST INADDR_BROADCAST115,3936
#define MSG_DONTWAIT MSG_DONTWAIT118,4019
#define IP_TOS IP_TOS124,4152
#define IP_TTL IP_TTL125,4176
#define IPTOS_TOS_MASK IPTOS_TOS_MASK128,4204
#define IPTOS_TOS(IPTOS_TOS129,4242
#define IPTOS_LOWDELAY IPTOS_LOWDELAY130,4300
#define IPTOS_THROUGHPUT IPTOS_THROUGHPUT131,4338
#define IPTOS_RELIABILITY IPTOS_RELIABILITY132,4376
#define IPTOS_LOWCOST IPTOS_LOWCOST133,4414
#define IPTOS_MINCOST IPTOS_MINCOST134,4452
#define IPTOS_PREC_MASK IPTOS_PREC_MASK139,4580
#define IPTOS_PREC(IPTOS_PREC140,4626
#define IPTOS_PREC_NETCONTROL IPTOS_PREC_NETCONTROL141,4692
#define IPTOS_PREC_INTERNETCONTROL IPTOS_PREC_INTERNETCONTROL142,4738
#define IPTOS_PREC_CRITIC_ECP IPTOS_PREC_CRITIC_ECP143,4784
#define IPTOS_PREC_FLASHOVERRIDE IPTOS_PREC_FLASHOVERRIDE144,4830
#define IPTOS_PREC_FLASH IPTOS_PREC_FLASH145,4876
#define IPTOS_PREC_IMMEDIATE IPTOS_PREC_IMMEDIATE146,4922
#define IPTOS_PREC_PRIORITY IPTOS_PREC_PRIORITY147,4968
#define IPTOS_PREC_ROUTINE IPTOS_PREC_ROUTINE148,5014
#define IOCPARM_MASK IOCPARM_MASK162,5467
#define IOC_VOID IOC_VOID163,5545
#define IOC_OUT IOC_OUT164,5606
#define IOC_IN IOC_IN165,5673
#define IOC_INOUT IOC_INOUT166,5739
#define _IO(_IO169,5915
#define _IOR(_IOR171,5966
#define _IOW(_IOW173,6053
#define FIONREAD FIONREAD177,6165
#define FIONBIO FIONBIO180,6267
#define SIOCSHIWAT SIOCSHIWAT185,6408
#define SIOCGHIWAT SIOCGHIWAT186,6484
#define SIOCSLOWAT SIOCSLOWAT187,6560
#define SIOCGLOWAT SIOCGLOWAT188,6635
#define SIOCATMARK SIOCATMARK189,6710
#define O_NONBLOCK O_NONBLOCK193,6810
  #undef  FD_SETSIZEFD_SETSIZE197,6866
  #define FD_SETSIZE FD_SETSIZE198,6888
  #define FD_SET(FD_SET199,6916
  #define FD_CLR(FD_CLR200,6984
  #define FD_ISSET(FD_ISSET201,7052
  #define FD_ZERO(FD_ZERO202,7120
  typedef struct fd_set {fd_set204,7181
          unsigned char fd_bits [(FD_SETSIZE+7)/8];fd_bits205,7208
        } fd_set;fd_set206,7261
#define LWIP_TIMEVAL_PRIVATE LWIP_TIMEVAL_PRIVATE213,7442
  struct timeval {timeval217,7510
    long    tv_sec;         /* seconds */tv_sec218,7530
    long    tv_usec;        /* and microseconds */tv_usec219,7573
#define accept(accept249,8984
#define bind(bind250,9034
#define shutdown(shutdown251,9082
#define close(close252,9132
#define connect(connect253,9177
#define getsockname(getsockname254,9228
#define getpeername(getpeername255,9283
#define setsockopt(setsockopt256,9338
#define getsockopt(getsockopt257,9396
#define listen(listen258,9454
#define recv(recv259,9502
#define read(read260,9552
#define recvfrom(recvfrom261,9600
#define send(send262,9658
#define sendto(sendto263,9708
#define socket(socket264,9764
#define write(write265,9814
#define select(select266,9863
#define ioctlsocket(ioctlsocket267,9917

os/lwip-1.1.0/src/include/lwip/stats.h,2588
#define __LWIP_STATS_H____LWIP_STATS_H__33,1665
struct stats_proto {stats_proto43,1807
  u16_t xmit;    /* Transmitted packets. */xmit44,1829
  u16_t rexmit;  /* Retransmitted packets. */rexmit45,1874
  u16_t recv;    /* Received packets. */recv46,1921
  u16_t fw;      /* Forwarded packets. */fw47,1963
  u16_t drop;    /* Dropped packets. */drop48,2006
  u16_t chkerr;  /* Checksum error. */chkerr49,2047
  u16_t lenerr;  /* Invalid length error. */lenerr50,2087
  u16_t memerr;  /* Out of memory error. */memerr51,2133
  u16_t rterr;   /* Routing error. */rterr52,2178
  u16_t proterr; /* Protocol error. */proterr53,2217
  u16_t opterr;  /* Error in options. */opterr54,2257
  u16_t err;     /* Misc error. */err55,2299
  u16_t cachehit;cachehit56,2335
struct stats_mem {stats_mem59,2360
  mem_size_t avail;avail60,2380
  mem_size_t used;used61,2401
  mem_size_t max;  max62,2421
  mem_size_t err;err63,2442
struct stats_pbuf {stats_pbuf66,2467
  u16_t avail;avail67,2488
  u16_t used;used68,2504
  u16_t max;  max69,2519
  u16_t err;err70,2535
  u16_t alloc_locked;alloc_locked72,2551
  u16_t refresh_locked;refresh_locked73,2574
struct stats_syselem {stats_syselem76,2605
  u16_t used;used77,2629
  u16_t max;max78,2644
  u16_t err;err79,2658
struct stats_sys {stats_sys82,2678
  struct stats_syselem sem;sem83,2698
  struct stats_syselem mbox;mbox84,2727
struct stats_ {stats_87,2763
  struct stats_proto link;link88,2780
  struct stats_proto ip_frag;ip_frag89,2808
  struct stats_proto ip;ip90,2839
  struct stats_proto icmp;icmp91,2865
  struct stats_proto udp;udp92,2893
  struct stats_proto tcp;tcp93,2920
  struct stats_pbuf pbuf;pbuf94,2947
  struct stats_mem mem;mem95,2974
  struct stats_mem memp[MEMP_MAX];memp96,2999
  struct stats_sys sys;sys97,3035
#define STATS_INC(STATS_INC105,3130
#define stats_init(stats_init107,3174
#define STATS_INC(STATS_INC108,3196
#define TCP_STATS_INC(TCP_STATS_INC112,3260
#define TCP_STATS_INC(TCP_STATS_INC114,3306
#define UDP_STATS_INC(UDP_STATS_INC118,3357
#define UDP_STATS_INC(UDP_STATS_INC120,3403
#define ICMP_STATS_INC(ICMP_STATS_INC124,3455
#define ICMP_STATS_INC(ICMP_STATS_INC126,3502
#define IP_STATS_INC(IP_STATS_INC130,3553
#define IP_STATS_INC(IP_STATS_INC132,3598
#define IPFRAG_STATS_INC(IPFRAG_STATS_INC136,3651
#define IPFRAG_STATS_INC(IPFRAG_STATS_INC138,3700
#define LINK_STATS_INC(LINK_STATS_INC142,3755
#define LINK_STATS_INC(LINK_STATS_INC144,3802
#define stats_display(stats_display151,3926

os/lwip-1.1.0/src/include/lwip/sys.h,1477
#define __LWIP_SYS_H____LWIP_SYS_H__33,1663
typedef u8_t sys_sem_t;sys_sem_t44,1861
typedef u8_t sys_mbox_t;sys_mbox_t45,1886
struct sys_timeout {u8_t dummy;};sys_timeout46,1912
struct sys_timeout {u8_t dummy;};dummy46,1912
#define sys_init(sys_init48,1949
#define sys_timeout(sys_timeout49,1969
#define sys_untimeout(sys_untimeout50,1997
#define sys_sem_new(sys_sem_new51,2025
#define sys_sem_signal(sys_sem_signal52,2051
#define sys_sem_wait(sys_sem_wait53,2078
#define sys_sem_free(sys_sem_free54,2103
#define sys_mbox_new(sys_mbox_new55,2128
#define sys_mbox_fetch(sys_mbox_fetch56,2154
#define sys_mbox_post(sys_mbox_post57,2183
#define sys_mbox_free(sys_mbox_free58,2211
#define sys_thread_new(sys_thread_new60,2239
#define SYS_ARCH_TIMEOUT SYS_ARCH_TIMEOUT67,2404
typedef void (* sys_timeout_handler)(void *arg);sys_timeout_handler69,2443
struct sys_timeout {sys_timeout71,2495
  struct sys_timeout *next;next72,2517
  u32_t time;time73,2546
  sys_timeout_handler h;h74,2561
  void *arg;arg75,2587
struct sys_timeouts {sys_timeouts78,2607
  struct sys_timeout *next;next79,2630
#define SYS_ARCH_DECL_PROTECT(SYS_ARCH_DECL_PROTECT150,5038
#define SYS_ARCH_PROTECT(SYS_ARCH_PROTECT160,5628
#define SYS_ARCH_UNPROTECT(SYS_ARCH_UNPROTECT169,6122
#define SYS_ARCH_DECL_PROTECT(SYS_ARCH_DECL_PROTECT175,6269
#define SYS_ARCH_PROTECT(SYS_ARCH_PROTECT176,6305
#define SYS_ARCH_UNPROTECT(SYS_ARCH_UNPROTECT177,6336

os/lwip-1.1.0/src/include/lwip/tcp.h,7819
#define __LWIP_TCP_H____LWIP_TCP_H__33,1663
#define          tcp_mss(tcp_mss75,3063
#define          tcp_sndbuf(tcp_sndbuf76,3112
#define TCP_PRIO_MIN TCP_PRIO_MIN93,3878
#define TCP_PRIO_NORMAL TCP_PRIO_NORMAL94,3905
#define TCP_PRIO_MAX TCP_PRIO_MAX95,3933
#define TCP_SEQ_LT(TCP_SEQ_LT112,4485
#define TCP_SEQ_LEQ(TCP_SEQ_LEQ113,4537
#define TCP_SEQ_GT(TCP_SEQ_GT114,4590
#define TCP_SEQ_GEQ(TCP_SEQ_GEQ115,4642
#define TCP_SEQ_BETWEEN(TCP_SEQ_BETWEEN120,4803
#define TCP_FIN TCP_FIN121,4874
#define TCP_SYN TCP_SYN122,4897
#define TCP_RST TCP_RST123,4920
#define TCP_PSH TCP_PSH124,4943
#define TCP_ACK TCP_ACK125,4966
#define TCP_URG TCP_URG126,4989
#define TCP_ECE TCP_ECE127,5012
#define TCP_CWR TCP_CWR128,5035
#define TCP_FLAGS TCP_FLAGS130,5060
#define TCP_HLEN TCP_HLEN133,5139
#define TCP_TMR_INTERVAL TCP_TMR_INTERVAL136,5188
#define TCP_FAST_INTERVAL TCP_FAST_INTERVAL141,5371
#define TCP_SLOW_INTERVAL TCP_SLOW_INTERVAL146,5568
#define TCP_FIN_WAIT_TIMEOUT TCP_FIN_WAIT_TIMEOUT150,5745
#define TCP_SYN_RCVD_TIMEOUT TCP_SYN_RCVD_TIMEOUT151,5800
#define TCP_OOSEQ_TIMEOUT TCP_OOSEQ_TIMEOUT153,5857
#define TCP_MSL TCP_MSL155,5907
#define	TCP_NODELAY	TCP_NODELAY160,6043
#define TCP_KEEPALIVE TCP_KEEPALIVE161,6118
#define  TCP_KEEPDEFAULT TCP_KEEPDEFAULT164,6245
#define  TCP_KEEPINTVL TCP_KEEPINTVL165,6340
#define  TCP_KEEPCNT TCP_KEEPCNT166,6449
#define  TCP_MAXIDLE TCP_MAXIDLE167,6542
struct tcp_hdr {tcp_hdr174,6729
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT183,7035
#define TCPH_OFFSET(TCPH_OFFSET189,7148
#define TCPH_HDRLEN(TCPH_HDRLEN190,7216
#define TCPH_FLAGS(TCPH_FLAGS191,7285
#define TCPH_OFFSET_SET(TCPH_OFFSET_SET193,7362
#define TCPH_HDRLEN_SET(TCPH_HDRLEN_SET194,7472
#define TCPH_FLAGS_SET(TCPH_FLAGS_SET195,7577
#define TCPH_SET_FLAG(TCPH_SET_FLAG196,7709
#define TCPH_UNSET_FLAG(TCPH_UNSET_FLAG197,7826
#define TCP_TCPLEN(TCP_TCPLEN199,7969
enum tcp_state {tcp_state202,8109
  CLOSED      = 0,CLOSED203,8127
  LISTEN      = 1,LISTEN204,8147
  SYN_SENT    = 2,SYN_SENT205,8167
  SYN_RCVD    = 3,SYN_RCVD206,8187
  ESTABLISHED = 4,ESTABLISHED207,8207
  FIN_WAIT_1  = 5,FIN_WAIT_1208,8227
  FIN_WAIT_2  = 6,FIN_WAIT_2209,8247
  CLOSE_WAIT  = 7,CLOSE_WAIT210,8267
  CLOSING     = 8,CLOSING211,8287
  LAST_ACK    = 9,LAST_ACK212,8307
  TIME_WAIT   = 10TIME_WAIT213,8327
struct tcp_pcb {tcp_pcb217,8391
  IP_PCB;IP_PCB219,8436
  struct tcp_pcb *next; /* for the linked list */next221,8485
  enum tcp_state state; /* TCP state */state222,8536
  u8_t prio;prio223,8577
  void *callback_arg;callback_arg224,8591
  u16_t local_port;local_port226,8616
  u16_t remote_port;remote_port227,8637
  u8_t flags;flags229,8663
#define TF_ACK_DELAY TF_ACK_DELAY230,8678
#define TF_ACK_NOW TF_ACK_NOW231,8733
#define TF_INFR TF_INFR232,8790
#define TF_RESET TF_RESET233,8850
#define TF_CLOSED TF_CLOSED234,8914
#define TF_GOT_FIN TF_GOT_FIN235,8991
#define TF_NODELAY TF_NODELAY236,9074
  u32_t rcv_nxt;   /* next seqno expected */rcv_nxt239,9170
  u16_t rcv_wnd;   /* receiver window */rcv_wnd240,9216
  u32_t tmr;tmr243,9278
  u8_t polltmr, pollinterval;polltmr244,9292
  u8_t polltmr, pollinterval;pollinterval244,9292
  u16_t rtime;rtime247,9358
  u16_t mss;   /* maximum segment size */mss249,9378
  u32_t rttest; /* RTT estimate in 500ms ticks */rttest252,9477
  u32_t rtseq;  /* sequence number being timed */rtseq253,9528
  s16_t sa, sv; /* @todo document this */sa254,9579
  s16_t sa, sv; /* @todo document this */sv254,9579
  u16_t rto;    /* retransmission time-out */rto256,9624
  u8_t nrtx;    /* number of retransmissions */nrtx257,9671
  u32_t lastack; /* Highest acknowledged seqno. */lastack260,9756
  u8_t dupacks;dupacks261,9808
  u16_t cwnd;  cwnd264,9877
  u16_t ssthresh;ssthresh265,9894
  u32_t snd_nxt,       /* next seqno to be sent */snd_nxt268,9941
    snd_max,       /* Highest seqno sent. */snd_max269,9993
    snd_wnd,       /* sender window */snd_wnd270,10039
    snd_wl1, snd_wl2, /* Sequence and acknowledgement numbers of lastsnd_wl1271,10079
    snd_wl1, snd_wl2, /* Sequence and acknowledgement numbers of lastsnd_wl2271,10079
    snd_lbb;       /* Sequence number of next byte to be buffered. */snd_lbb273,10176
  u16_t acked;acked275,10249
  u16_t snd_buf;   /* Available buffer space for sending (in bytes). */snd_buf277,10269
  u8_t snd_queuelen; /* Available buffer space for sending (in tcp_segs). */snd_queuelen278,10342
  struct tcp_seg *unsent;   /* Unsent (queued) segments. */unsent282,10475
  struct tcp_seg *unacked;  /* Sent but unacknowledged segments. */unacked283,10536
  struct tcp_seg *ooseq;    /* Received out of sequence segments. */ooseq285,10628
  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);sent290,10826
  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);recv293,10962
  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);connected296,11108
  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);accept299,11239
  err_t (* poll)(void *arg, struct tcp_pcb *pcb);poll302,11356
  void (* errf)(void *arg, err_t err);errf305,11471
  u32_t keepalive;keepalive309,11589
  u8_t keep_cnt;keep_cnt312,11640
struct tcp_pcb_listen {  tcp_pcb_listen315,11664
  IP_PCB;IP_PCB317,11730
  struct tcp_pcb_listen *next;   /* for the linked list */next320,11780
  enum tcp_state state;   /* TCP state */state326,12036
  u8_t prio;prio328,12081
  void *callback_arg;callback_arg329,12095
  u16_t local_port; local_port331,12122
  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);accept335,12231
enum lwip_event {lwip_event341,12358
  LWIP_EVENT_ACCEPT,LWIP_EVENT_ACCEPT342,12377
  LWIP_EVENT_SENT,LWIP_EVENT_SENT343,12399
  LWIP_EVENT_RECV,LWIP_EVENT_RECV344,12419
  LWIP_EVENT_CONNECTED,LWIP_EVENT_CONNECTED345,12439
  LWIP_EVENT_POLL,LWIP_EVENT_POLL346,12464
  LWIP_EVENT_ERRLWIP_EVENT_ERR347,12484
#define TCP_EVENT_ACCEPT(TCP_EVENT_ACCEPT356,12661
#define TCP_EVENT_SENT(TCP_EVENT_SENT358,12803
#define TCP_EVENT_RECV(TCP_EVENT_RECV360,12950
#define TCP_EVENT_CONNECTED(TCP_EVENT_CONNECTED362,13088
#define TCP_EVENT_POLL(TCP_EVENT_POLL364,13235
#define TCP_EVENT_ERR(TCP_EVENT_ERR366,13375
#define TCP_EVENT_ACCEPT(TCP_EVENT_ACCEPT369,13520
#define TCP_EVENT_SENT(TCP_EVENT_SENT372,13698
#define TCP_EVENT_RECV(TCP_EVENT_RECV375,13870
#define TCP_EVENT_CONNECTED(TCP_EVENT_CONNECTED379,14106
#define TCP_EVENT_POLL(TCP_EVENT_POLL382,14289
#define TCP_EVENT_ERR(TCP_EVENT_ERR385,14447
struct tcp_seg {tcp_seg391,14688
  struct tcp_seg *next;    /* used when putting segements on a queue */next392,14706
  struct pbuf *p;          /* buffer containing data + TCP header */p393,14779
  void *dataptr;           /* pointer to the TCP data in the pbuf */dataptr394,14849
  u16_t len;               /* the TCP length of this segment */len395,14919
  struct tcp_hdr *tcphdr;  /* the TCP header */tcphdr396,14984
#define tcp_ack(tcp_ack408,15389
#define tcp_ack_now(tcp_ack_now416,15748
#  define tcp_debug_print(tcp_debug_print444,16655
#  define tcp_debug_print_flags(tcp_debug_print_flags445,16690
#  define tcp_debug_print_state(tcp_debug_print_state446,16730
#  define tcp_debug_print_pcbs(tcp_debug_print_pcbs447,16766
#  define tcp_pcbs_sane(tcp_pcbs_sane448,16800
#define tcp_timer_needed(tcp_timer_needed452,16867
union tcp_listen_pcbs_t { /* List of all TCP PCBs in LISTEN state. */tcp_listen_pcbs_t458,16968
	struct tcp_pcb_listen *listen_pcbs; listen_pcbs459,17039
	struct tcp_pcb *pcbs;pcbs460,17078
#define TCP_REG(TCP_REG511,19803
#define TCP_RMV(TCP_RMV516,20014

os/lwip-1.1.0/src/include/lwip/tcpip.h,581
#define __LWIP_TCPIP_H____LWIP_TCPIP_H__33,1665
enum tcpip_msg_type {tcpip_msg_type45,2004
  TCPIP_MSG_API,TCPIP_MSG_API46,2027
  TCPIP_MSG_INPUT,TCPIP_MSG_INPUT47,2045
  TCPIP_MSG_CALLBACKTCPIP_MSG_CALLBACK48,2065
struct tcpip_msg {tcpip_msg51,2093
  enum tcpip_msg_type type;type52,2113
  sys_sem_t *sem;sem53,2142
    struct api_msg *apimsg;apimsg55,2172
      struct pbuf *p;p57,2215
      struct netif *netif;netif58,2238
    } inp;inp59,2266
      void (*f)(void *ctx);f61,2292
      void *ctx;ctx62,2321
    } cb;cb63,2339
  } msg;msg64,2350

os/lwip-1.1.0/src/include/lwip/udp.h,857
#define __LWIP_UDP_H____LWIP_UDP_H__33,1663
#define UDP_HLEN UDP_HLEN41,1787
struct udp_hdr {udp_hdr43,1809
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT48,1989
#define UDP_FLAGS_NOCHKSUM UDP_FLAGS_NOCHKSUM50,2014
#define UDP_FLAGS_UDPLITE UDP_FLAGS_UDPLITE51,2048
#define UDP_FLAGS_CONNECTED UDP_FLAGS_CONNECTED52,2082
struct udp_pcb {udp_pcb54,2120
  IP_PCB;IP_PCB56,2177
  struct udp_pcb *next;next60,2229
  u8_t flags;flags62,2256
  u16_t local_port, remote_port;local_port63,2271
  u16_t local_port, remote_port;remote_port63,2271
  u16_t chksum_len;chksum_len65,2309
  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,recv67,2334
  void *recv_arg;  recv_arg69,2439
#define          udp_flags(udp_flags90,3359
#define          udp_setflags(udp_setflags91,3408
#define udp_debug_print(udp_debug_print100,3721

os/lwip-1.1.0/src/include/netif/etharp.h,573
#define __NETIF_ETHARP_H____NETIF_ETHARP_H__36,1812
#define ETH_PAD_SIZE ETH_PAD_SIZE39,1864
struct eth_addr {eth_addr51,2088
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT53,2143
struct eth_hdr {eth_hdr63,2346
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT70,2561
struct etharp_hdr {etharp_hdr81,2788
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT91,3194
struct ethip_hdr {ethip_hdr101,3397
} PACK_STRUCT_STRUCT;PACK_STRUCT_STRUCT104,3499
#define ARP_TMR_INTERVAL ARP_TMR_INTERVAL111,3637
#define ETHTYPE_ARP ETHTYPE_ARP113,3670
#define ETHTYPE_IP ETHTYPE_IP114,3698

os/lwip-1.1.0/src/include/netif/loopif.h,54
#define __NETIF_LOOPIF_H____NETIF_LOOPIF_H__33,1667

os/lwip-1.1.0/src/include/netif/slipif.h,54
#define __NETIF_SLIPIF_H____NETIF_SLIPIF_H__35,1765

os/lwip-1.1.0/src/netif/etharp.c,1853
#define ARP_MAXAGE ARP_MAXAGE61,2628
#define ARP_MAXPENDING ARP_MAXPENDING68,2890
#define HWTYPE_ETHERNET HWTYPE_ETHERNET70,2918
#define ARP_REQUEST ARP_REQUEST73,2973
#define ARP_REPLY ARP_REPLY74,2996
#define ARPH_HWLEN(ARPH_HWLEN76,3019
#define ARPH_PROTOLEN(ARPH_PROTOLEN77,3081
#define ARPH_HWLEN_SET(ARPH_HWLEN_SET79,3150
#define ARPH_PROTOLEN_SET(ARPH_PROTOLEN_SET80,3250
enum etharp_state {etharp_state82,3352
  ETHARP_STATE_EMPTY,ETHARP_STATE_EMPTY83,3373
  ETHARP_STATE_PENDING,ETHARP_STATE_PENDING84,3396
  ETHARP_STATE_STABLE,ETHARP_STATE_STABLE85,3421
  ETHARP_STATE_EXPIREDETHARP_STATE_EXPIRED87,3520
struct etharp_entry {etharp_entry90,3550
   struct pbuf *p;p95,3676
  struct ip_addr ipaddr;ipaddr97,3704
  struct eth_addr ethaddr;ethaddr98,3730
  enum etharp_state state;state99,3758
  u8_t ctime;ctime100,3786
static const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};ethbroadcast103,3807
static struct etharp_entry arp_table[ARP_TABLE_SIZE];arp_table104,3887
#define ETHARP_TRY_HARD ETHARP_TRY_HARD109,4092
etharp_init(void)etharp_init117,4341
etharp_tmr(void)etharp_tmr137,4782
static s8_t find_entry(struct ip_addr *ipaddr, u8_t flags)find_entry202,7281
update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)update_arp_entry358,12979
etharp_ip_input(struct netif *netif, struct pbuf *p)etharp_ip_input431,15835
etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)etharp_arp_input468,17104
etharp_output(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)etharp_output589,21686
err_t etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)etharp_query685,25393
err_t etharp_request(struct netif *netif, struct ip_addr *ipaddr)etharp_request781,29238

os/lwip-1.1.0/src/netif/ethernetif.c,1134
#define netifMTU	netifMTU48,1934
#define netifINTERFACE_TASK_STACK_SIZE	netifINTERFACE_TASK_STACK_SIZE49,1967
#define netifINTERFACE_TASK_PRIORITY	netifINTERFACE_TASK_PRIORITY50,2016
#define netifGUARD_BLOCK_TIME	netifGUARD_BLOCK_TIME51,2084
#define IFNAME0 IFNAME052,2126
#define IFNAME1 IFNAME153,2147
struct ethernetifethernetif56,2195
	struct eth_addr *ethaddr;ethaddr58,2217
static const struct eth_addr    ethbroadcast = { { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } };ethbroadcast60,2249
static struct netif *xNetIf = NULL;xNetIf61,2341
static void low_level_init( struct netif *netif )low_level_init71,2664
static err_t low_level_output( struct netif *netif, struct pbuf *p )low_level_output117,4191
static struct pbuf *low_level_input( struct netif *netif )low_level_input170,5526
static err_t ethernetif_output( struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr )ethernetif_output245,7511
static void ethernetif_input( void * pvParameters )ethernetif_input257,8035
static void arp_timer( void *arg )arp_timer320,9341
err_t ethernetif_init( struct netif *netif )ethernetif_init329,9542

os/lwip-1.1.0/src/netif/loopif.c,175
loopif_input( void * arg )loopif_input47,1921
loopif_output(struct netif *netif, struct pbuf *p,loopif_output57,2146
loopif_init(struct netif *netif)loopif_init101,3216

os/lwip-1.1.0/src/netif/ppp/auth.c,2244
#define PAP_WITHPEER PAP_WITHPEER88,3857
#define PAP_PEER PAP_PEER89,3884
#define CHAP_WITHPEER CHAP_WITHPEER90,3907
#define CHAP_PEER CHAP_PEER91,3934
struct wordlist {wordlist99,4179
    struct wordlist *next;next100,4198
    char        word[1];word101,4226
static char peer_authname[MAXNAMELEN];peer_authname144,5471
static int auth_pending[NUM_PPP];auth_pending148,5591
static int logged_in;logged_in151,5678
static int did_authup;did_authup154,5758
static struct wordlist *addresses[NUM_PPP];addresses157,5833
static int num_np_open;num_np_open160,5937
static int num_np_up;num_np_up163,6019
static int passwd_from_file;passwd_from_file167,6158
void link_required(int unit)link_required179,6456
void link_terminated(int unit)link_terminated188,6652
void link_down(int unit)link_down204,7044
void link_established(int unit)link_established233,7879
void auth_peer_fail(int unit, u16_t protocol)auth_peer_fail313,10242
void auth_peer_success(int unit, u16_t protocol, char *name, int namelen)auth_peer_success327,10608
void auth_withpeer_fail(int unit, u16_t protocol)auth_withpeer_fail364,11628
void auth_withpeer_success(int unit, u16_t protocol)auth_withpeer_success388,12414
void np_up(int unit, u16_t proto)np_up421,13243
void np_down(int unit, u16_t proto)np_down445,14057
void np_finished(int unit, u16_t proto)np_finished456,14354
void auth_reset(int unit)auth_reset470,14829
int check_passwd(check_passwd502,16010
int auth_ip_addr(int unit, u32_t addr)auth_ip_addr574,17894
int bad_ip_adrs(u32_t addr)bad_ip_adrs584,18177
int get_secret(get_secret598,18551
static void network_phase(int unit)network_phase702,21127
static void check_idle(void *arg)check_idle745,22276
static void connect_time_expired(void *arg)connect_time_expired766,22881
static void logout(void)logout794,23564
static int null_login(int unit)null_login805,23783
static int get_pap_passwd(int unit, char *user, char *passwd)get_pap_passwd818,24095
static int have_pap_secret(void)have_pap_secret838,24679
static int have_chap_secret(char *client, char *server, u32_t remote)have_chap_secret851,25021
static int ip_addr_check(u32_t addr, struct wordlist *addrs)ip_addr_check897,26240

os/lwip-1.1.0/src/netif/ppp/auth.h,30
#define AUTH_HAUTH_H54,2681

os/lwip-1.1.0/src/netif/ppp/chap.c,1692
chap_state chap[NUM_PPP];		/* CHAP state; one for each unit */chap123,5090
struct protent chap_protent = {chap_protent125,5156
static char *ChapCodenames[] = {ChapCodenames152,5542
void ChapAuthWithPeer(int unit, char *our_name, int digest)ChapAuthWithPeer165,5833
void ChapAuthPeer(int unit, char *our_name, int digest)ChapAuthPeer191,6458
static void ChapInit(int unit)ChapInit219,7122
static void ChapChallengeTimeout(void *arg)ChapChallengeTimeout236,7561
static void ChapResponseTimeout(void *arg)ChapResponseTimeout261,8267
static void ChapRechallenge(void *arg)ChapRechallenge276,8598
static void ChapLowerUp(int unit)ChapLowerUp295,9001
static void ChapLowerDown(int unit)ChapLowerDown319,9592
static void ChapProtocolReject(int unit)ChapProtocolReject341,10214
static void ChapInput(int unit, u_char *inpacket, int packet_len)ChapInput358,10645
static void ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)ChapReceiveChallenge417,11936
static void ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)ChapReceiveResponse511,14753
static void ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)ChapReceiveSuccess626,18162
static void ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)ChapReceiveFailure659,18885
static void ChapSendChallenge(chap_state *cstate)ChapSendChallenge686,19523
static void ChapSendStatus(chap_state *cstate, int code)ChapSendStatus721,20498
static void ChapGenChallenge(chap_state *cstate)ChapGenChallenge755,21448
static void ChapSendResponse(chap_state *cstate)ChapSendResponse781,22134
static int ChapPrintPkt(ChapPrintPkt814,23137

os/lwip-1.1.0/src/netif/ppp/chap.h,2768
#define CHAP_HCHAP_H69,3427
#define CHAP_HEADERLEN	CHAP_HEADERLEN76,3557
#define CHAP_DIGEST_MD5	CHAP_DIGEST_MD582,3613
#define MD5_SIGNATURE_SIZE	MD5_SIGNATURE_SIZE83,3665
#define CHAP_MICROSOFT	CHAP_MICROSOFT84,3735
#define MS_CHAP_RESPONSE_LEN	MS_CHAP_RESPONSE_LEN85,3801
#define CHAP_CHALLENGE	CHAP_CHALLENGE87,3870
#define CHAP_RESPONSE	CHAP_RESPONSE88,3897
#define CHAP_SUCCESS	CHAP_SUCCESS89,3923
#define CHAP_FAILURE CHAP_FAILURE90,3948
#define MIN_CHALLENGE_LENGTH	MIN_CHALLENGE_LENGTH95,4053
#define MAX_CHALLENGE_LENGTH	MAX_CHALLENGE_LENGTH96,4086
#define MAX_RESPONSE_LENGTH	MAX_RESPONSE_LENGTH97,4119
#define CHAPCS_INITIAL	CHAPCS_INITIAL102,4224
#define CHAPCS_CLOSED	CHAPCS_CLOSED103,4286
#define CHAPCS_PENDING	CHAPCS_PENDING104,4345
#define CHAPCS_LISTEN	CHAPCS_LISTEN105,4408
#define CHAPCS_RESPONSE	CHAPCS_RESPONSE106,4466
#define CHAPCS_OPEN	CHAPCS_OPEN107,4534
#define CHAPSS_INITIAL	CHAPSS_INITIAL112,4633
#define CHAPSS_CLOSED	CHAPSS_CLOSED113,4695
#define CHAPSS_PENDING	CHAPSS_PENDING114,4754
#define CHAPSS_INITIAL_CHAL	CHAPSS_INITIAL_CHAL115,4811
#define CHAPSS_OPEN	CHAPSS_OPEN116,4879
#define CHAPSS_RECHALLENGE	CHAPSS_RECHALLENGE117,4934
#define CHAPSS_BADAUTH	CHAPSS_BADAUTH118,4999
typedef struct chap_state {chap_state128,5206
    int unit;			/* Interface unit number */unit129,5235
    int clientstate;		/* Client state */clientstate130,5280
    int serverstate;		/* Server state */serverstate131,5322
    u_char challenge[MAX_CHALLENGE_LENGTH]; /* last challenge string sent */challenge132,5364
    u_char chal_len;		/* challenge length */chal_len133,5442
    u_char chal_id;		/* ID of last challenge */chal_id134,5488
    u_char chal_type;		/* hash algorithm for challenges */chal_type135,5537
    u_char id;			/* Current id */id136,5597
    char *chal_name;		/* Our name to use with challenge */chal_name137,5632
    int chal_interval;		/* Time until we challenge peer again */chal_interval138,5692
    int timeouttime;		/* Timeout time in seconds */timeouttime139,5758
    int max_transmits;		/* Maximum # of challenge transmissions */max_transmits140,5811
    int chal_transmits;		/* Number of transmissions of challenge */chal_transmits141,5879
    int resp_transmits;		/* Number of transmissions of response */resp_transmits142,5948
    u_char response[MAX_RESPONSE_LENGTH];	/* Response to send */response143,6016
    u_char resp_length;		/* length of response */resp_length144,6082
    u_char resp_id;		/* ID for response messages */resp_id145,6133
    u_char resp_type;		/* hash algorithm for responses */resp_type146,6186
    char *resp_name;		/* Our name to send with response */resp_name147,6245
} chap_state;chap_state148,6305

os/lwip-1.1.0/src/netif/ppp/chpms.c,801
#define USE_CRYPTUSE_CRYPT67,3250
    u_char LANManResp[24];LANManResp92,3641
    u_char NTResp[24];NTResp93,3669
    u_char UseNT;		/* If 1, ignore the LANMan response field */UseNT94,3693
} MS_ChapResponse;MS_ChapResponse95,3758
void ChapMS(ChapMS138,4814
static void ChallengeResponse(ChallengeResponse176,5683
static void DesEncrypt(DesEncrypt202,6368
static void DesEncrypt(DesEncrypt234,7177
static u_char Get7Bits(Get7Bits263,7959
static void Expand(u_char *in, u_char *out)Expand284,8427
static void Collapse(u_char *in, u_char *out)Collapse299,8645
static void MakeKey(MakeKey314,8873
static void ChapMS_NT(ChapMS_NT340,9739
static u_char *StdText = (u_char *)"KGS!@#$%"; /* key from rasapi32.dll */StdText373,10728
static ChapMS_LANMan(ChapMS_LANMan375,10806

os/lwip-1.1.0/src/netif/ppp/chpms.h,81
#define CHPMS_HCHPMS_H58,2818
#define MAX_NT_PASSWORD	MAX_NT_PASSWORD60,2837

os/lwip-1.1.0/src/netif/ppp/fsm.c,1090
#define PROTO_NAME(PROTO_NAME87,3552
int peer_mru[NUM_PPP];peer_mru98,3813
void fsm_init(fsm *f)fsm_init110,4030
void fsm_lowerup(fsm *f)fsm_lowerup126,4390
void fsm_lowerdown(fsm *f)fsm_lowerdown160,5025
void fsm_open(fsm *f)fsm_open207,5906
void fsm_close(fsm *f, char *reason)fsm_close251,6739
void fsm_sdata(fsm_sdata298,7841
void fsm_input(fsm *f, u_char *inpacket, int l)fsm_input329,8601
void fsm_protreject(fsm *f)fsm_protreject408,10263
static void fsm_timeout(void *arg)fsm_timeout463,11443
static void fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)fsm_rconfreq522,13204
static void fsm_rconfack(fsm *f, int id, u_char *inp, int len)fsm_rconfack591,14876
static void fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)fsm_rconfnakrej647,16310
static void fsm_rtermreq(fsm *f, int id, u_char *p, int len)fsm_rtermreq703,17852
static void fsm_rtermack(fsm *f)fsm_rtermack735,18634
static void fsm_rcoderej(fsm *f, u_char *inp, int len)fsm_rcoderej770,19322
static void fsm_sconfreq(fsm *f, int retransmit)fsm_sconfreq794,19867

os/lwip-1.1.0/src/netif/ppp/fsm.h,3295
#define FSM_HFSM_H55,2750
#define HEADERLEN	HEADERLEN64,3060
#define CONFREQ	CONFREQ70,3180
#define CONFACK	CONFACK71,3229
#define CONFNAK	CONFNAK72,3274
#define CONFREJ	CONFREJ73,3319
#define TERMREQ	TERMREQ74,3367
#define TERMACK	TERMACK75,3414
#define CODEREJ	CODEREJ76,3457
#define INITIAL	INITIAL81,3524
#define STARTING	STARTING82,3576
#define CLOSED	CLOSED83,3621
#define STOPPED	STOPPED84,3670
#define CLOSING	CLOSING85,3726
#define STOPPING	STOPPING86,3790
#define REQSENT	REQSENT87,3839
#define ACKRCVD	ACKRCVD88,3894
#define ACKSENT	ACKSENT89,3949
#define OPENED	OPENED90,4000
#define OPT_PASSIVE	OPT_PASSIVE96,4115
#define OPT_RESTART	OPT_RESTART97,4182
#define OPT_SILENT	OPT_SILENT98,4239
typedef struct fsm {fsm107,4615
    int unit;				/* Interface unit number */unit108,4637
    u_short protocol;		/* Data Link Layer Protocol field value */protocol109,4683
    int state;				/* State */state110,4750
    int flags;				/* Contains option bits */flags111,4781
    u_char id;				/* Current id */id112,4827
    u_char reqid;			/* Current request id */reqid113,4863
    u_char seen_ack;		/* Have received valid Ack/Nak/Rej to Req */seen_ack114,4909
    int timeouttime;		/* Timeout time in milliseconds */timeouttime115,4977
    int maxconfreqtransmits;/* Maximum Configure-Request transmissions */maxconfreqtransmits116,5035
    int retransmits;		/* Number of retransmissions left */retransmits117,5110
    int maxtermtransmits;	/* Maximum Terminate-Request transmissions */maxtermtransmits118,5170
    int nakloops;			/* Number of nak loops since last ack */nakloops119,5243
    int maxnakloops;		/* Maximum number of nak loops tolerated */maxnakloops120,5305
    struct fsm_callbacks* callbacks;/* Callback routines */callbacks121,5372
    char* term_reason;		/* Reason for closing protocol */term_reason122,5433
    int term_reason_len;	/* Length of term_reason */term_reason_len123,5492
} fsm;fsm124,5546
typedef struct fsm_callbacks {fsm_callbacks127,5558
    void (*resetci)			/* Reset our Configuration Information */resetci128,5590
    int  (*cilen)			/* Length of our Configuration Information */cilen130,5666
    void (*addci) 			/* Add our Configuration Information */addci132,5744
    int  (*ackci)			/* ACK our Configuration Information */ackci134,5832
    int  (*nakci)			/* NAK our Configuration Information */nakci136,5918
    int  (*rejci)			/* Reject our Configuration Information */rejci138,6004
    int  (*reqci)			/* Request peer's Configuration Information */reqci140,6093
    void (*up)				/* Called when fsm reaches OPENED state */up142,6192
    void (*down)			/* Called when fsm leaves OPENED state */down144,6265
    void (*starting)		/* Called when we want the lower layer */starting146,6338
    void (*finished)		/* Called when we don't want the lower layer */finished148,6414
    void (*protreject)		/* Called when Protocol-Reject received */protreject150,6496
    void (*retransmit)		/* Retransmission is necessary */retransmit152,6574
    int  (*extcode)			/* Called when unknown code received */extcode154,6644
    char *proto_name;		/* String name for protocol (for messages) */proto_name156,6745
} fsm_callbacks;fsm_callbacks157,6815

os/lwip-1.1.0/src/netif/ppp/ipcp.c,2748
#define CILEN_VOID	CILEN_VOID71,3002
#define CILEN_COMPRESS	CILEN_COMPRESS72,3024
#define CILEN_VJ	CILEN_VJ73,3097
#define CILEN_ADDR	CILEN_ADDR74,3160
#define CILEN_ADDRS	CILEN_ADDRS75,3220
#define CODENAME(CODENAME112,4536
ipcp_options ipcp_wantoptions[NUM_PPP];	/* Options that we want to request */ipcp_wantoptions121,4749
ipcp_options ipcp_gotoptions[NUM_PPP];	/* Options that peer ack'd */ipcp_gotoptions122,4828
ipcp_options ipcp_allowoptions[NUM_PPP];	/* Options we allow peer to request */ipcp_allowoptions123,4898
ipcp_options ipcp_hisoptions[NUM_PPP];	/* Options that we ack'd */ipcp_hisoptions124,4979
fsm ipcp_fsm[NUM_PPP];		/* IPCP fsm structure */ipcp_fsm126,5049
struct protent ipcp_protent = {ipcp_protent128,5101
static int cis_received[NUM_PPP];		/* # Conf-Reqs received */cis_received156,5536
static int default_route_set[NUM_PPP];	/* Have set up a default route */default_route_set157,5599
static fsm_callbacks ipcp_callbacks = { /* IPCP callback routines */ipcp_callbacks159,5675
char * _inet_ntoa(u32_t n)_inet_ntoa188,6892
#define inet_ntoa inet_ntoa195,6990
static void ipcp_init(int unit)ipcp_init200,7064
static void ipcp_open(int unit)ipcp_open243,7857
static void ipcp_close(int unit, char *reason)ipcp_close252,7971
static void ipcp_lowerup(int unit)ipcp_lowerup261,8118
static void ipcp_lowerdown(int unit)ipcp_lowerdown270,8251
static void ipcp_input(int unit, u_char *p, int len)ipcp_input279,8378
static void ipcp_protrej(int unit)ipcp_protrej290,8607
static void ipcp_resetci(fsm *f)ipcp_resetci299,8729
static int ipcp_cilen(fsm *f)ipcp_cilen319,9236
#define LENCIVJ(LENCIVJ325,9418
#define LENCIADDR(LENCIADDR326,9490
#define LENCIDNS(LENCIDNS327,9563
static void ipcp_addci(fsm *f, u_char *ucp, int *lenp)ipcp_addci363,10534
#define ADDCIVJ(ADDCIVJ368,10663
#define ADDCIADDR(ADDCIADDR384,11033
#define ADDCIDNS(ADDCIDNS402,11417
static int ipcp_ackci(fsm *f, u_char *p, int len)ipcp_ackci436,12127
#define ACKCIVJ(ACKCIVJ449,12499
#define ACKCIADDR(ACKCIADDR472,13047
#define ACKCIDNS(ACKCIDNS495,13541
static int ipcp_nakci(fsm *f, u_char *p, int len)ipcp_nakci542,14622
#define NAKCIADDR(NAKCIADDR560,15191
#define NAKCIVJ(NAKCIVJ579,15588
#define NAKCIDNS(NAKCIDNS591,15849
static int ipcp_rejci(fsm *f, u_char *p, int len)ipcp_rejci733,19429
#define REJCIADDR(REJCIADDR747,19869
#define REJCIVJ(REJCIVJ770,20376
#define REJCIDNS(REJCIDNS792,20888
static int ipcp_reqci(ipcp_reqci843,22112
static void ipcp_up(fsm *f)ipcp_up1194,32584
static void ipcp_down(fsm *f)ipcp_down1280,35144
static void ipcp_clear_addrs(int unit)ipcp_clear_addrs1294,35415
static void ipcp_finished(fsm *f)ipcp_finished1311,35794

os/lwip-1.1.0/src/netif/ppp/ipcp.h,2128
#define IPCP_HIPCP_H55,2749
#define CI_ADDRS	CI_ADDRS63,2873
#define CI_COMPRESSTYPE	CI_COMPRESSTYPE64,2914
#define	CI_ADDR	CI_ADDR65,2965
#define CI_MS_WINS1	CI_MS_WINS167,2987
#define CI_MS_DNS1	CI_MS_DNS168,3039
#define CI_MS_WINS2	CI_MS_WINS269,3089
#define CI_MS_DNS2	CI_MS_DNS270,3143
#define IPCP_VJMODE_OLD IPCP_VJMODE_OLD72,3197
#define IPCP_VJMODE_RFC1172 IPCP_VJMODE_RFC117273,3262
#define IPCP_VJMODE_RFC1332 IPCP_VJMODE_RFC133274,3333
#define IPCP_VJ_COMP IPCP_VJ_COMP77,3483
#define IPCP_VJ_COMP_OLD IPCP_VJ_COMP_OLD78,3558
typedef struct ipcp_options {ipcp_options86,3751
    u_int neg_addr : 1;			/* Negotiate IP Address? */neg_addr87,3782
    u_int old_addrs : 1;			/* Use old (IP-Addresses) option? */old_addrs88,3837
    u_int req_addr : 1;			/* Ask peer to send IP address? */req_addr89,3902
    u_int default_route : 1;		/* Assign default route through interface? */default_route90,3964
    u_int proxy_arp : 1;			/* Make proxy ARP entry for peer? */proxy_arp91,4041
    u_int neg_vj : 1;				/* Van Jacobson Compression? */neg_vj92,4106
    u_int old_vj : 1;				/* use old (short) form of VJ option? */old_vj93,4164
    u_int accept_local : 1;		/* accept peer's value for ouraddr */accept_local94,4231
    u_int accept_remote : 1;		/* accept peer's value for hisaddr */accept_remote95,4299
    u_int req_dns1 : 1;			/* Ask peer to send primary DNS address? */req_dns196,4368
    u_int req_dns2 : 1;			/* Ask peer to send secondary DNS address? */req_dns297,4439
    u_short vj_protocol;		/* protocol value to use in VJ option */vj_protocol98,4512
    u_char maxslotindex;		/* VJ slots - 1. */maxslotindex99,4580
    u_char cflag;				/* VJ slot compression flag. */cflag100,4627
    u32_t ouraddr, hisaddr;	/* Addresses in NETWORK BYTE ORDER */ouraddr101,4681
    u32_t ouraddr, hisaddr;	/* Addresses in NETWORK BYTE ORDER */hisaddr101,4681
    u32_t dnsaddr[2];		/* Primary and secondary MS DNS entries */dnsaddr102,4748
    u32_t winsaddr[2];		/* Primary and secondary MS WINS entries */winsaddr103,4815
} ipcp_options;ipcp_options104,4884

os/lwip-1.1.0/src/netif/ppp/lcp.c,4727
#define CILEN_VOID	CILEN_VOID71,2969
#define CILEN_CHAR	CILEN_CHAR72,2991
#define CILEN_SHORT	CILEN_SHORT73,3013
#define CILEN_CHAP	CILEN_CHAP74,3069
#define CILEN_LONG	CILEN_LONG75,3128
#define CILEN_LQR	CILEN_LQR76,3182
#define CILEN_CBCP	CILEN_CBCP77,3251
#define CODENAME(CODENAME119,4803
LinkPhase lcp_phase[NUM_PPP];			/* Phase of link session (RFC 1661) */lcp_phase127,5014
lcp_options lcp_wantoptions[NUM_PPP];	/* Options that we want to request */lcp_wantoptions128,5086
lcp_options lcp_gotoptions[NUM_PPP];	/* Options that peer ack'd */lcp_gotoptions129,5163
lcp_options lcp_allowoptions[NUM_PPP];	/* Options we allow peer to request */lcp_allowoptions130,5231
lcp_options lcp_hisoptions[NUM_PPP];	/* Options that we ack'd */lcp_hisoptions131,5310
ext_accm xmit_accm[NUM_PPP];			/* extended transmit ACCM */xmit_accm132,5376
static fsm lcp_fsm[NUM_PPP];			/* LCP fsm structure (global)*/lcp_fsm139,5542
static u_int	 lcp_echo_interval = LCP_ECHOINTERVAL; /* Interval between LCP echo-requests */lcp_echo_interval140,5606
static u_int	 lcp_echo_fails = LCP_MAXECHOFAILS; /* Tolerance to unanswered echo-requests */lcp_echo_fails141,5700
static u32_t lcp_echos_pending = 0;	/* Number of outstanding echo msgs */lcp_echos_pending142,5794
static u32_t lcp_echo_number   = 0;	/* ID number of next echo frame */lcp_echo_number143,5869
static u32_t lcp_echo_timer_running = 0;  /* TRUE if a timer is running */lcp_echo_timer_running144,5941
static u_char nak_buffer[PPP_MRU];	/* where we construct a nak packet */nak_buffer146,6019
static fsm_callbacks lcp_callbacks = {	/* LCP callback routines */lcp_callbacks148,6095
struct protent lcp_protent = {lcp_protent166,7054
int lcp_loopbackfail = DEFLOOPBACKFAIL;lcp_loopbackfail188,7336
void lcp_init(int unit)lcp_init198,7540
void lcp_open(int unit)lcp_open263,9485
void lcp_close(int unit, char *reason)lcp_close282,9798
void lcp_lowerup(int unit)lcp_lowerup306,10396
void lcp_lowerdown(int unit)lcp_lowerdown338,11323
void lcp_sprotrej(int unit, u_char *p, int len)lcp_sprotrej346,11464
static void lcp_input(int unit, u_char *p, int len)lcp_input365,11895
static int lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)lcp_extcode376,12067
static void lcp_rprotrej(fsm *f, u_char *inp, int len)lcp_rprotrej413,12753
static void lcp_protrej(int unit)lcp_protrej458,13756
static void lcp_resetci(fsm *f)lcp_resetci473,14005
static int lcp_cilen(fsm *f)lcp_cilen486,14297
#define LENCIVOID(LENCIVOID490,14378
#define LENCICHAP(LENCICHAP491,14427
#define LENCISHORT(LENCISHORT492,14476
#define LENCILONG(LENCILONG493,14527
#define LENCILQR(LENCILQR494,14576
#define LENCICBCP(LENCICBCP495,14622
static void lcp_addci(fsm *f, u_char *ucp, int *lenp)lcp_addci515,15194
#define ADDCIVOID(ADDCIVOID520,15328
#define ADDCISHORT(ADDCISHORT526,15491
#define ADDCICHAP(ADDCICHAP533,15698
#define ADDCILONG(ADDCILONG541,15939
#define ADDCILQR(ADDCILQR548,16142
#define ADDCICHAR(ADDCICHAR556,16374
static int lcp_ackci(fsm *f, u_char *p, int len)lcp_ackci590,17493
#define ACKCIVOID(ACKCIVOID602,17836
#define ACKCISHORT(ACKCISHORT612,18055
#define ACKCICHAR(ACKCICHAR625,18350
#define ACKCICHAP(ACKCICHAP638,18639
#define ACKCILONG(ACKCILONG654,19007
#define ACKCILQR(ACKCILQR667,19296
static int lcp_nakci(fsm *f, u_char *p, int len)lcp_nakci717,20697
#define NAKCIVOID(NAKCIVOID737,21283
#define NAKCICHAP(NAKCICHAP747,21498
#define NAKCICHAR(NAKCICHAR759,21756
#define NAKCISHORT(NAKCISHORT770,21987
#define NAKCILONG(NAKCILONG781,22224
#define NAKCILQR(NAKCILQR792,22455
static int lcp_rejci(fsm *f, u_char *p, int len)lcp_rejci1021,28657
#define REJCIVOID(REJCIVOID1036,29069
#define REJCISHORT(REJCISHORT1046,29338
#define REJCICHAP(REJCICHAP1060,29708
#define REJCILONG(REJCILONG1076,30149
#define REJCILQR(REJCILQR1090,30511
#define REJCICBCP(REJCICBCP1105,30917
static int lcp_reqci(fsm *f, lcp_reqci1157,32344
static void lcp_up(fsm *f)lcp_up1571,43910
static void lcp_down(fsm *f)lcp_down1615,45210
static void lcp_starting(fsm *f)lcp_starting1634,45641
static void lcp_finished(fsm *f)lcp_finished1643,45778
static void LcpLinkFailure (fsm *f)LcpLinkFailure1866,50284
static void LcpEchoCheck (fsm *f)LcpEchoCheck1879,50634
static void LcpEchoTimeout (void *arg)LcpEchoTimeout1896,50980
static void lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)lcp_received_echo_reply1907,51196
static void LcpSendEchoRequest (fsm *f)LcpSendEchoRequest1933,51864
static void lcp_echo_lowerup (int unit)lcp_echo_lowerup1963,52492
static void lcp_echo_lowerdown (int unit)lcp_echo_lowerdown1981,52904

os/lwip-1.1.0/src/netif/ppp/lcp.h,2919
#define LCP_HLCP_H55,2721
#define CI_MRU	CI_MRU64,2846
#define CI_ASYNCMAP	CI_ASYNCMAP65,2892
#define CI_AUTHTYPE	CI_AUTHTYPE66,2949
#define CI_QUALITY	CI_QUALITY67,2998
#define CI_MAGICNUMBER	CI_MAGICNUMBER68,3043
#define CI_PCOMPRESSION	CI_PCOMPRESSION69,3088
#define CI_ACCOMPRESSION CI_ACCOMPRESSION70,3148
#define CI_CALLBACK	CI_CALLBACK71,3216
#define CI_MRRU	CI_MRRU72,3255
#define CI_SSNHF	CI_SSNHF73,3324
#define CI_EPDISC	CI_EPDISC74,3388
#define PROTREJ	PROTREJ79,3481
#define ECHOREQ	ECHOREQ80,3523
#define ECHOREP	ECHOREP81,3562
#define DISCREQ	DISCREQ82,3600
#define CBCP_OPT	CBCP_OPT83,3643
typedef struct lcp_options {lcp_options93,3862
    u_int passive : 1;			/* Don't die if we don't get a response */passive94,3892
    u_int silent : 1;				/* Wait for the other end to start first */silent95,3961
    u_int restart : 1;			/* Restart vs. exit after close */restart96,4031
    u_int neg_mru : 1;			/* Negotiate the MRU? */neg_mru97,4092
    u_int neg_asyncmap : 1;		/* Negotiate the async map? */neg_asyncmap98,4143
    u_int neg_upap : 1;			/* Ask for UPAP authentication? */neg_upap99,4204
    u_int neg_chap : 1;			/* Ask for CHAP authentication? */neg_chap100,4266
    u_int neg_magicnumber : 1;	/* Ask for magic number? */neg_magicnumber101,4328
    u_int neg_pcompression : 1;	/* HDLC Protocol Field Compression? */neg_pcompression102,4388
    u_int neg_accompression : 1;	/* HDLC Address/Control Field Compression? */neg_accompression103,4460
    u_int neg_lqr : 1;			/* Negotiate use of Link Quality Reports */neg_lqr104,4540
    u_int neg_cbcp : 1;			/* Negotiate use of CBCP */neg_cbcp105,4610
    u_int neg_mrru : 1;			/* Negotiate multilink MRRU */neg_mrru107,4687
    u_int neg_ssnhf : 1;		/* Negotiate short sequence numbers */neg_ssnhf108,4745
    u_int neg_endpoint : 1;		/* Negotiate endpoint discriminator */neg_endpoint109,4811
    u_short mru;			/* Value of MRU */mru111,4888
    u_short mrru;			/* Value of MRRU, and multilink enable */mrru113,4949
    u_char chap_mdtype;			/* which MD type (hashing algorithm) */chap_mdtype115,5020
    u32_t asyncmap;			/* Value of async map */asyncmap116,5087
    u32_t magicnumber;magicnumber117,5135
    int numloops;				/* Number of loops during magic number neg. */numloops118,5159
    u32_t lqr_period;		/* Reporting period for LQR 1/100ths second */lqr_period119,5228
    struct epdisc endpoint;	/* endpoint discriminator */endpoint121,5321
} lcp_options;lcp_options123,5387
	PHASE_DEAD = 0,PHASE_DEAD129,5486
	PHASE_INITIALIZE,PHASE_INITIALIZE130,5504
	PHASE_ESTABLISH,PHASE_ESTABLISH131,5524
	PHASE_AUTHENTICATE,PHASE_AUTHENTICATE132,5543
	PHASE_CALLBACK,PHASE_CALLBACK133,5565
	PHASE_NETWORK,PHASE_NETWORK134,5583
	PHASE_TERMINATEPHASE_TERMINATE135,5600
} LinkPhase;LinkPhase136,5618
#define DEFLOOPBACKFAIL	DEFLOOPBACKFAIL166,6433

os/lwip-1.1.0/src/netif/ppp/magic.c,63
void magicInit()magicInit66,3006
u32_t magic()magic74,3094

os/lwip-1.1.0/src/netif/ppp/magic.h,32
#define MAGIC_HMAGIC_H55,2728

os/lwip-1.1.0/src/netif/ppp/md5.c,1048
static unsigned char PADDING[64] = {PADDING54,2804
#define F(F66,3300
#define G(G67,3349
#define H(H68,3398
#define I(I69,3436
#define ROTATE_LEFT(ROTATE_LEFT72,3520
#define FF(FF76,3719
#define GG(GG81,3866
#define HH(HH86,4013
#define II(II91,4160
#define UL(UL98,4326
#define UL(UL101,4368
#define UL(UL103,4396
void MD5Init (MD5_CTX *mdContext)MD5Init110,4542
void MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)MD5Update126,5055
void MD5Final (unsigned char hash[], MD5_CTX *mdContext)MD5Final166,6291
static void Transform (u32_t *buf, u32_t *in)Transform207,7573
#define S11 S11212,7699
#define S12 S12213,7714
#define S13 S13214,7730
#define S14 S14215,7746
#define S21 S21234,8716
#define S22 S22235,8731
#define S23 S23236,8746
#define S24 S24237,8762
#define S31 S31256,9741
#define S32 S32257,9756
#define S33 S33258,9772
#define S34 S34259,9788
#define S41 S41278,10767
#define S42 S42279,10782
#define S43 S43280,10798
#define S44 S44281,10814

os/lwip-1.1.0/src/netif/ppp/md5.h,391
#define MD5_HMD5_H41,2479
  u32_t i[2];                   /* number of _bits_ handled mod 2^64 */i45,2573
  u32_t buf[4];                                    /* scratch buffer */buf46,2646
  unsigned char in[64];                              /* input buffer */in47,2719
  unsigned char digest[16];     /* actual digest after MD5Final call */digest48,2792
} MD5_CTX;MD5_CTX49,2865

os/lwip-1.1.0/src/netif/ppp/pap.c,1062
struct protent pap_protent = {pap_protent86,3573
upap_state upap[NUM_PPP];		/* UPAP state; one for each unit */upap108,3852
void upap_setloginpasswd(int unit, const char *luser, const char *lpassword)upap_setloginpasswd118,4114
void upap_authwithpeer(int unit, char *user, char *password)upap_authwithpeer135,4535
void upap_authpeer(int unit)upap_authpeer162,5146
static void upap_init(int unit)upap_init186,5673
static void upap_timeout(void *arg)upap_timeout207,6183
static void upap_reqtimeout(void *arg)upap_reqtimeout232,6839
static void upap_lowerup(int unit)upap_lowerup249,7169
static void upap_lowerdown(int unit)upap_lowerdown276,7852
static void upap_protrej(int unit)upap_protrej297,8452
static void upap_input(int unit, u_char *inpacket, int l)upap_input316,8931
static void upap_rauthreq(upap_rauthreq370,9949
static void upap_rauthack(upap_rauthack448,11746
static void upap_rauthnak(upap_rauthnak488,12507
static void upap_sauthreq(upap_state *u)upap_sauthreq529,13326
static void upap_sresp(upap_sresp562,14146

os/lwip-1.1.0/src/netif/ppp/pap.h,1677
#define PAP_HPAP_H54,2692
#define UPAP_HEADERLEN	UPAP_HEADERLEN62,2840
#define UPAP_AUTHREQ	UPAP_AUTHREQ68,2948
#define UPAP_AUTHACK	UPAP_AUTHACK69,2999
#define UPAP_AUTHNAK	UPAP_AUTHNAK70,3046
#define UPAPCS_INITIAL	UPAPCS_INITIAL75,3123
#define UPAPCS_CLOSED	UPAPCS_CLOSED76,3171
#define UPAPCS_PENDING	UPAPCS_PENDING77,3240
#define UPAPCS_AUTHREQ	UPAPCS_AUTHREQ78,3309
#define UPAPCS_OPEN	UPAPCS_OPEN79,3376
#define UPAPCS_BADAUTH	UPAPCS_BADAUTH80,3428
#define UPAPSS_INITIAL	UPAPSS_INITIAL85,3511
#define UPAPSS_CLOSED	UPAPSS_CLOSED86,3559
#define UPAPSS_PENDING	UPAPSS_PENDING87,3628
#define UPAPSS_LISTEN	UPAPSS_LISTEN88,3697
#define UPAPSS_OPEN	UPAPSS_OPEN89,3758
#define UPAPSS_BADAUTH	UPAPSS_BADAUTH90,3806
typedef struct upap_state {upap_state100,4002
    int us_unit;			/* Interface unit number */us_unit101,4031
    const char *us_user;	/* User */us_user102,4079
    int us_userlen;			/* User length */us_userlen103,4116
    const char *us_passwd;	/* Password */us_passwd104,4157
    int us_passwdlen;		/* Password length */us_passwdlen105,4200
    int us_clientstate;		/* Client state */us_clientstate106,4246
    int us_serverstate;		/* Server state */us_serverstate107,4291
    u_char us_id;			/* Current id */us_id108,4336
    int us_timeouttime;		/* Timeout (seconds) for auth-req retrans. */us_timeouttime109,4374
    int us_transmits;		/* Number of auth-reqs sent */us_transmits110,4446
    int us_maxtransmits;	/* Maximum number of auth-reqs to send */us_maxtransmits111,4501
    int us_reqtimeout;		/* Time to wait for auth-req from peer */us_reqtimeout112,4569
} upap_state;upap_state113,4636

os/lwip-1.1.0/src/netif/ppp/ppp.c,5622
#define PPP_ADDRESS(PPP_ADDRESS111,4422
#define PPP_CONTROL(PPP_CONTROL112,4468
#define PPP_PROTOCOL(PPP_PROTOCOL113,4514
    PDIDLE = 0,                 /* Idle state - waiting. */PDIDLE118,4699
    PDSTART,                    /* Process start flag. */PDSTART119,4760
    PDADDRESS,                  /* Process address field. */PDADDRESS120,4819
    PDCONTROL,                  /* Process control field. */PDCONTROL121,4881
    PDPROTOCOL1,                /* Process protocol field 1. */PDPROTOCOL1122,4943
    PDPROTOCOL2,                /* Process protocol field 2. */PDPROTOCOL2123,5008
    PDDATA                      /* Process data byte. */PDDATA124,5073
} PPPDevStates;PPPDevStates125,5131
#define ESCAPE_P(ESCAPE_P127,5150
typedef struct PPPControl_s {PPPControl_s135,5348
    char openFlag;                      /* True when in use. */openFlag136,5379
    char oldFrame;                      /* Old framing character for fd. */oldFrame137,5444
    sio_fd_t fd;                    /* File device ID of port. */fd138,5521
    int  kill_link;                     /* Shut the link down. */kill_link139,5588
    int  sig_hup;                       /* Carrier lost. */sig_hup140,5655
    int  if_up;                         /* True when the interface is up. */if_up141,5716
    int  errCode;                       /* Code indicating why interface is down. */errCode142,5794
    struct pbuf *inHead, *inTail;       /* The input packet. */inHead143,5880
    struct pbuf *inHead, *inTail;       /* The input packet. */inTail143,5880
    PPPDevStates inState;               /* The input process state. */inState144,5945
    char inEscaped;                     /* Escape next character. */inEscaped145,6017
    u16_t inProtocol;                   /* The input protocol code. */inProtocol146,6087
    u16_t inFCS;                        /* Input Frame Check Sequence value. */inFCS147,6159
    int  mtu;                           /* Peer's mru */mtu148,6240
    int  pcomp;                         /* Does peer accept protocol compression? */pcomp149,6298
    int  accomp;                        /* Does peer accept addr/ctl compression? */accomp150,6384
    u_long lastXMit;                    /* Time of last transmission. */lastXMit151,6470
    ext_accm inACCM;                    /* Async-Ctl-Char-Map for input. */inACCM152,6544
    ext_accm outACCM;                   /* Async-Ctl-Char-Map for output. */outACCM153,6621
    int  vjEnabled;                     /* Flag indicating VJ compression enabled. */vjEnabled155,6719
    struct vjcompress vjComp;           /* Van Jabobsen compression header. */vjComp156,6806
    struct netif netif;netif159,6896
    struct ppp_addrs addrs;addrs161,6923
    void (*linkStatusCB)(void *ctx, int errCode, void *arg);linkStatusCB163,6954
    void *linkStatusCtx;linkStatusCtx164,7016
} PPPControl;PPPControl166,7044
struct npioctl {npioctl173,7097
    int     protocol;           /* PPP procotol, e.g. PPP_IP */protocol174,7115
    enum NPmode mode;mode175,7180
u_long subnetMask;subnetMask191,7556
static PPPControl pppControl[NUM_PPP]; /* The PPP interface control blocks. */pppControl193,7578
struct protent *ppp_protocols[] = {ppp_protocols200,7782
u_char outpacket_buf[NUM_PPP][PPP_MRU+PPP_HDRLEN];  outpacket_buf223,8238
static const u_short fcstab[256] = {fcstab233,8455
static u_char pppACCMMask[] = {pppACCMMask270,10827
struct ppp_settings ppp_settings;ppp_settings287,11111
void pppInit(void)pppInit289,11148
void pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)pppSetAuth318,11781
int pppOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)pppOpen384,14187
int pppClose(int pd)pppClose451,15943
void pppSigHUP(int pd)pppSigHUP470,16332
static void nPut(PPPControl *pc, struct pbuf *nb)nPut478,16451
static struct pbuf *pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)pppAppend507,17195
static err_t pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)pppifOutput540,18153
int  pppIOCtl(int pd, int cmd, void *arg)pppIOCtl684,22447
u_int pppMTU(int pd)pppMTU729,23645
int pppWrite(int pd, const u_char *s, int n)pppWrite748,24031
void ppp_send_config(ppp_send_config814,26122
void ppp_set_xaccm(int unit, ext_accm *accm)ppp_set_xaccm841,26787
void ppp_recv_config(ppp_recv_config857,27284
int get_idle_time(int u, struct ppp_idle *ip)get_idle_time920,28767
u32_t GetMask(u32_t addr)GetMask938,29257
int sifvjcomp(sifvjcomp963,29858
static err_t pppifNetifInit(struct netif *netif)pppifNetifInit986,30327
int sifup(int pd)sifup999,30601
int sifnpmode(int u, int proto, enum NPmode mode)sifnpmode1028,31475
int sifdown(int pd)sifdown1039,31654
int sifaddr(sifaddr1060,32233
int cifaddr(cifaddr1089,33111
int sifdefaultroute(int pd, u32_t l, u32_t g)sifdefaultroute1116,33824
int cifdefaultroute(int pd, u32_t l, u32_t g)cifdefaultroute1138,34340
pppMainWakeup(int pd)pppMainWakeup1156,34686
pppStartCB(void *arg)pppStartCB1169,35047
pppStopCB(void *arg)pppStopCB1179,35238
pppHupCB(void *arg)pppHupCB1188,35396
static void pppMain(void *arg)pppMain1201,35807
static struct pbuf *pppSingleBuf(struct pbuf *p)pppSingleBuf1254,37432
struct pppInputHeader {pppInputHeader1279,37926
	int unit;unit1280,37951
	u16_t proto;proto1281,37963
static void pppInput(void *arg)pppInput1288,38131
static void pppDrop(PPPControl *pc)pppDrop1402,41837
static void pppInProc(int pd, u_char *s, int l)pppInProc1428,42486

os/lwip-1.1.0/src/netif/ppp/ppp.h,5367
#define PPP_HPPP_H35,1804
#define TIMEOUT(TIMEOUT94,4146
#define UNTIMEOUT(UNTIMEOUT95,4232
typedef unsigned long u_long;u_long101,4356
typedef unsigned int u_int;u_int102,4387
typedef unsigned short u_short;u_short103,4416
typedef unsigned char u_char;u_char104,4449
#define PPP_HDRLEN PPP_HDRLEN116,4655
#define PPP_FCSLEN PPP_FCSLEN117,4721
#define PPP_ALLSTATIONS PPP_ALLSTATIONS123,4814
#define PPP_UI PPP_UI124,4884
#define PPP_FLAG PPP_FLAG125,4946
#define PPP_ESCAPE PPP_ESCAPE126,4999
#define PPP_TRANS PPP_TRANS127,5066
#define PPP_IP PPP_IP132,5178
#define PPP_AT PPP_AT133,5235
#define PPP_VJC_COMP PPP_VJC_COMP134,5293
#define PPP_VJC_UNCOMP PPP_VJC_UNCOMP135,5350
#define PPP_COMP PPP_COMP136,5409
#define PPP_IPCP PPP_IPCP137,5466
#define PPP_ATCP PPP_ATCP138,5525
#define PPP_CCP PPP_CCP139,5591
#define PPP_LCP PPP_LCP140,5659
#define PPP_PAP PPP_PAP141,5720
#define PPP_LQR PPP_LQR142,5792
#define PPP_CHAP PPP_CHAP143,5860
#define PPP_CBCP PPP_CBCP144,5938
#define PPP_INITFCS PPP_INITFCS149,6047
#define PPP_GOODFCS PPP_GOODFCS150,6100
#define PPP_FCS(PPP_FCS151,6156
typedef u_char  ext_accm[32];ext_accm156,6298
enum NPmode {NPmode161,6391
    NPMODE_PASS,        /* pass the packet through */NPMODE_PASS162,6406
    NPMODE_DROP,        /* silently drop the packet */NPMODE_DROP163,6461
    NPMODE_ERROR,       /* return an error */NPMODE_ERROR164,6517
    NPMODE_QUEUE        /* save it up for later. */NPMODE_QUEUE165,6564
#define GETCHAR(GETCHAR174,6810
#define PUTCHAR(PUTCHAR177,6863
#define GETSHORT(GETSHORT182,6929
#define PUTSHORT(PUTSHORT186,7011
#define GETLONG(GETLONG191,7114
#define PUTLONG(PUTLONG197,7263
#define INCPTR(INCPTR205,7445
#define DECPTR(DECPTR206,7484
#define BCMP(BCMP208,7525
#define BCOPY(BCOPY209,7598
#define BZERO(BZERO210,7649
#define PRINTMSG(PRINTMSG212,7709
#define PRINTMSG(PRINTMSG214,7806
#define MAKEHEADER(MAKEHEADER220,7901
#define PPPERR_NONE PPPERR_NONE230,8125
#define PPPERR_PARAM PPPERR_PARAM231,8167
#define PPPERR_OPEN PPPERR_OPEN232,8220
#define PPPERR_DEVICE PPPERR_DEVICE233,8281
#define PPPERR_ALLOC PPPERR_ALLOC234,8343
#define PPPERR_USER PPPERR_USER235,8407
#define PPPERR_CONNECT PPPERR_CONNECT236,8456
#define PPPERR_AUTHFAIL PPPERR_AUTHFAIL237,8508
#define PPPERR_PROTOCOL PPPERR_PROTOCOL238,8577
#define PPPCTLG_UPSTATUS PPPCTLG_UPSTATUS247,8775
#define PPPCTLS_ERRCODE PPPCTLS_ERRCODE248,8846
#define PPPCTLG_ERRCODE PPPCTLG_ERRCODE249,8901
#define	PPPCTLG_FD	PPPCTLG_FD250,8956
struct protent {protent260,9215
    u_short protocol;       /* PPP protocol number */protocol261,9233
    void (*init) (int unit);init263,9324
    void (*input) (int unit, u_char *pkt, int len);input265,9391
    void (*protrej) (int unit);protrej267,9490
    void (*lowerup) (int unit);lowerup269,9558
    void (*lowerdown) (int unit);lowerdown271,9628
    void (*open) (int unit);open273,9692
    void (*close) (int unit, char *reason);close275,9752
    int  enabled_flag;      /* 0 iff protocol is disabled */enabled_flag284,10080
    char *name;         /* Text name of protocol */name285,10142
struct ppp_idle {ppp_idle300,10606
    u_short xmit_idle;      /* seconds since last NP packet sent */xmit_idle301,10625
    u_short recv_idle;      /* seconds since last NP packet received */recv_idle302,10694
struct ppp_settings {ppp_settings305,10773
	u_int  disable_defaultip : 1;   /* Don't use hostname for default IP addrs */disable_defaultip307,10798
	u_int  auth_required : 1;      /* Peer is required to authenticate */auth_required308,10878
	u_int  explicit_remote : 1;    /* remote_name specified with remotename opt */explicit_remote309,10950
	u_int  refuse_pap : 1;         /* Don't wanna auth. ourselves with PAP */refuse_pap310,11031
	u_int  refuse_chap : 1;        /* Don't wanna auth. ourselves with CHAP */refuse_chap311,11107
	u_int  usehostname : 1;        /* Use hostname for our_name */usehostname312,11184
	u_int  usepeerdns : 1;         /* Ask peer for DNS adds */usepeerdns313,11249
	u_short idle_time_limit; /* Shut down link if idle for this long */idle_time_limit315,11312
	int  maxconnect;         /* Maximum connect time (seconds) */maxconnect316,11382
	char user[MAXNAMELEN + 1];/* Username for PAP */user318,11448
	char passwd[MAXSECRETLEN + 1];           /* Password for PAP, secret for CHAP */passwd319,11499
	char our_name[MAXNAMELEN + 1];         /* Our name for authentication purposes */our_name320,11582
	char remote_name[MAXNAMELEN + 1];      /* Peer's name for authentication */remote_name321,11666
struct ppp_addrs {ppp_addrs324,11750
    struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;our_ipaddr325,11770
    struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;his_ipaddr325,11770
    struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;netmask325,11770
    struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;dns1325,11770
    struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;dns2325,11770
enum pppAuthType {pppAuthType365,13255
    PPPAUTHTYPE_NONE,PPPAUTHTYPE_NONE366,13275
    PPPAUTHTYPE_ANY,PPPAUTHTYPE_ANY367,13298
    PPPAUTHTYPE_PAP,PPPAUTHTYPE_PAP368,13320
    PPPAUTHTYPE_CHAPPPPAUTHTYPE_CHAP369,13342

os/lwip-1.1.0/src/netif/ppp/pppdebug.h,888
#define PPPDEBUG_HPPPDEBUG_H37,1859
	LOG_CRITICAL = 0,LOG_CRITICAL44,1999
	LOG_ERR = 1,LOG_ERR45,2019
	LOG_NOTICE = 2,LOG_NOTICE46,2034
	LOG_WARNING = 3,LOG_WARNING47,2052
	LOG_INFO = 5,LOG_INFO48,2071
	LOG_DETAIL = 6,LOG_DETAIL49,2087
	LOG_DEBUG = 7LOG_DEBUG50,2105
} LogCodes;LogCodes51,2121
#define AUTHDEBUG(AUTHDEBUG64,2371
#define IPCPDEBUG(IPCPDEBUG65,2405
#define UPAPDEBUG(UPAPDEBUG66,2439
#define LCPDEBUG(LCPDEBUG67,2473
#define FSMDEBUG(FSMDEBUG68,2506
#define CHAPDEBUG(CHAPDEBUG69,2539
#define PPPDEBUG(PPPDEBUG70,2573
#define TRACELCP TRACELCP72,2608
#define AUTHDEBUG(AUTHDEBUG76,2639
#define IPCPDEBUG(IPCPDEBUG77,2661
#define UPAPDEBUG(UPAPDEBUG78,2683
#define LCPDEBUG(LCPDEBUG79,2705
#define FSMDEBUG(FSMDEBUG80,2726
#define CHAPDEBUG(CHAPDEBUG81,2747
#define PPPDEBUG(PPPDEBUG83,2771
#define TRACELCP TRACELCP85,2794

os/lwip-1.1.0/src/netif/ppp/randm.c,720
#define RANDPOOLSZ RANDPOOLSZ43,1931
static char randPool[RANDPOOLSZ];   /* Pool of randomness. */randPool48,2103
static long randCount = 0;      /* Pseudo-random incrementer */randCount49,2166
void avRandomInit()avRandomInit63,2628
void avChurnRand(char *randData, u32_t randLen)avChurnRand78,3159
void avGenRand(char *buf, u32_t bufLen)avGenRand117,4583
u32_t avRandom()avRandom139,5082
static int  avRandomized = 0;       /* Set when truely randomized. */avRandomized154,5332
static u32_t avRandomSeed = 0;      /* Seed used for random number generation. */avRandomSeed155,5403
void avRandomInit()avRandomInit175,6156
void avRandomize(void)avRandomize209,7375
u32_t avRandom()avRandom233,8172

os/lwip-1.1.0/src/netif/ppp/randm.h,73
#define RANDM_HRANDM_H35,1779
#define avRandomize(avRandomize60,2563

os/lwip-1.1.0/src/netif/ppp/vj.c,668
#define INCR(INCR40,1436
#define INCR(INCR42,1488
#define getip_hl(getip_hl46,1553
#define getth_off(getth_off47,1598
#define getip_hl(getip_hl49,1659
#define getth_off(getth_off50,1698
void vj_compress_init(struct vjcompress *comp)vj_compress_init53,1749
#define ENCODE(ENCODE80,2495
#define ENCODEZ(ENCODEZ90,2660
#define DECODEL(DECODEL101,2849
#define DECODES(DECODES112,3070
#define DECODEU(DECODEU123,3306
u_int vj_compress_tcp(vj_compress_tcp139,3764
void vj_uncompress_err(struct vjcompress *comp)vj_uncompress_err405,12098
int vj_uncompress_uncomp(vj_uncompress_uncomp415,12312
int vj_uncompress_tcp(vj_uncompress_tcp454,13475

os/lwip-1.1.0/src/netif/ppp/vj.h,2588
#define VJ_HVJ_H26,1050
#define MAX_SLOTS	MAX_SLOTS30,1091
#define MAX_HDR	MAX_HDR31,1143
#define TYPE_IP TYPE_IP77,3300
#define TYPE_UNCOMPRESSED_TCP TYPE_UNCOMPRESSED_TCP78,3322
#define TYPE_COMPRESSED_TCP TYPE_COMPRESSED_TCP79,3358
#define TYPE_ERROR TYPE_ERROR80,3392
#define NEW_C	NEW_C83,3467
#define NEW_I	NEW_I84,3532
#define NEW_S	NEW_S85,3552
#define NEW_A	NEW_A86,3572
#define NEW_W	NEW_W87,3592
#define NEW_U	NEW_U88,3612
#define SPECIAL_I SPECIAL_I91,3680
#define SPECIAL_D SPECIAL_D92,3753
#define SPECIALS_MASK SPECIALS_MASK93,3824
#define TCP_PUSH_BIT TCP_PUSH_BIT95,3875
struct cstate {cstate104,4195
    struct cstate *cs_next;	/* next most recently used state (xmit only) */cs_next105,4212
    u_short cs_hlen;		/* size of hdr (receive only) */cs_hlen106,4289
    u_char cs_id;			/* connection # associated with this state */cs_id107,4345
    u_char cs_filler;cs_filler108,4412
		char csu_hdr[MAX_HDR];csu_hdr110,4448
		struct ip csu_ip;	/* ip/tcp hdr from most recent packet */csu_ip111,4474
    } vjcs_u;vjcs_u112,4536
#define cs_ip cs_ip114,4555
#define cs_hdr cs_hdr115,4584
struct vjstat {vjstat118,4619
    unsigned long vjs_packets;			/* outbound packets */vjs_packets119,4636
    unsigned long vjs_compressed;		/* outbound compressed packets */vjs_compressed120,4693
    unsigned long vjs_searches;			/* searches for connection state */vjs_searches121,4763
    unsigned long vjs_misses;			/* times couldn't find conn. state */vjs_misses122,4834
    unsigned long vjs_uncompressedin;	/* inbound uncompressed packets */vjs_uncompressedin123,4905
    unsigned long vjs_compressedin;		/* inbound compressed packets */vjs_compressedin124,4979
    unsigned long vjs_errorin;			/* inbound unknown type packets */vjs_errorin125,5050
    unsigned long vjs_tossed;			/* inbound packets tossed because of error */vjs_tossed126,5119
struct vjcompress {vjcompress132,5289
    struct cstate *last_cs;	/* most recently used tstate */last_cs133,5310
    u_char last_recv;		/* last rcvd conn. id */last_recv134,5371
    u_char last_xmit;		/* last sent conn. id */last_xmit135,5420
    u_short flags;flags136,5469
    u_char maxSlotIndex;maxSlotIndex137,5489
    u_char compressSlot;	/* Flag indicating OK to compress slot ID. */compressSlot138,5515
    struct vjstat stats;stats140,5603
    struct cstate tstate[MAX_SLOTS];	/* xmit connection states */tstate142,5637
    struct cstate rstate[MAX_SLOTS];	/* receive connection states */rstate143,5704
#define VJF_TOSS VJF_TOSS147,5799

os/lwip-1.1.0/src/netif/ppp/vjbsdhdr.h,1574
#define VJBSDHDR_HVJBSDHDR_H2,20
struct ipip15,357
	u_char ip_hl_v;	/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... */ip_hl_v18,403
	u_char	ip_tos;					/* type of service */ip_tos30,841
	u_short	ip_len;					/* total length */ip_len31,884
	u_short	ip_id;					/* identification */ip_id32,925
	u_short	ip_off;					/* fragment offset field */ip_off33,967
#define	IP_DF IP_DF34,1017
#define	IP_MF IP_MF35,1067
#define	IP_OFFMASK IP_OFFMASK36,1118
	u_char	ip_ttl;					/* time to live */ip_ttl37,1179
	u_char	ip_p;					/* protocol */ip_p38,1219
	u_short	ip_sum;					/* checksum */ip_sum39,1253
	struct	in_addr ip_src,ip_dst;	/* source and dest address */ip_src40,1290
	struct	in_addr ip_src,ip_dst;	/* source and dest address */ip_dst40,1290
typedef u32_t tcp_seq;tcp_seq44,1375
struct tcphdr  tcphdr51,1479
	u_short	th_sport;		/* source port */th_sport53,1499
	u_short	th_dport;		/* destination port */th_dport54,1538
	tcp_seq	th_seq;			/* sequence number */th_seq55,1582
	tcp_seq	th_ack;			/* acknowledgement number */th_ack56,1624
	u_char th_x2_off;th_x2_off58,1705
	unsigned	th_x2:4,		/* (unused) */th_x261,1765
			th_off:4;		/* data offset */th_off62,1801
	unsigned	th_off:4,		/* data offset */th_off65,1873
			th_x2:4;		/* (unused) */th_x266,1913
	u_char	th_flags;th_flags69,1958
	u_short	th_win;			/* window */th_win70,1977
	u_short	th_sum;			/* checksum */th_sum71,2010
	u_short	th_urp;			/* urgent pointer */th_urp72,2045

os/lwip-1.1.0/src/netif/slipif.c,443
#define SLIP_END SLIP_END47,2110
#define SLIP_ESC SLIP_ESC48,2137
#define SLIP_ESC_END SLIP_ESC_END49,2164
#define SLIP_ESC_ESC SLIP_ESC_ESC50,2191
#define MAX_SIZE MAX_SIZE52,2220
slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)slipif_output60,2366
slipif_input( struct netif * netif )slipif_input99,3260
slipif_loop(void *nf)slipif_loop175,4613
slipif_init(struct netif *netif)slipif_init193,4945
