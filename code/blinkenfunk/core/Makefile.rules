#	FreeRTOS.org V4.2.1 - Copyright (C) 2003-2007 Richard Barry.
#
#	This file is part of the FreeRTOS.org distribution.
#
#	FreeRTOS.org is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; either version 2 of the License, or
#	(at your option) any later version.
#
#	FreeRTOS.org is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with FreeRTOS.org; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	A special exception to the GPL can be applied should you wish to distribute
#	a combined work that includes FreeRTOS.org, without being obliged to provide
#	the source code for any proprietary components.  See the licensing section 
#	of http://www.FreeRTOS.org for full details of how and when the exception
#	can be applied.
#
#	***************************************************************************
#	See http://www.FreeRTOS.org for documentation, latest information, license 
#	and contact details.  Please ensure to read the configuration and relevant 
#	port sections of the online documentation.
#	***************************************************************************

CROSS=arm-none-eabi-
CC=$(CROSS)gcc
LD=$(CROSS)ld
OBJCOPY=$(CROSS)objcopy
OBJDUMP=$(CROSS)objdump
AR=$(CROSS)ar
LDSCRIPT=config/atmel-rom.ld


CORE=../core/

#
# CFLAGS common to both the THUMB and ARM mode builds
#

CFLAGS= \
-D __$(CPU)__ \
-D __$(ARCH)__ \
-Iconfig \
-I$(CORE)openbeacon \
-I$(CORE)openbeacon/nRF24L01 \
-I$(CORE)os/core/include  \
-I$(CORE)os/usb  \
-I$(CORE)os/core/ARM7_AT91SAM7  \
-Wall  \
-Werror \
-Wextra  \
-Wno-multichar \
-Wstrict-prototypes  \
-Wno-strict-aliasing  \
-D SAM7_GCC  \
-mcpu=arm7tdmi  \
-T$(LDSCRIPT) \
$(DEBUG)  \
$(OPTIM) \
-fomit-frame-pointer \
$(APP_CFLAGS)

CRT0=$(CORE)os/boot/boot.s

#-ffunction-sections \
#-fdata-sections \
#LINKER_FLAGS=-Xlinker -s -Xlinker -static -Xlinker --gc-sections -Xlinker -o$(TARGET).elf -Xlinker -M -Xlinker -Map=$(TARGET).map
LINKER_FLAGS=$(APP_LDFLAGS) -Xlinker -o$(TARGET).elf -Xlinker -M -Xlinker -Map=$(TARGET).map

#
# Source files that must be built to ARM mode.
#
ARM_SRC= \
  $(APP_SRC) \
  $(CORE)openbeacon/dbgu.c \
  $(CORE)openbeacon/env.c \
  $(CORE)openbeacon/sort.c \
  $(CORE)openbeacon/nRF24L01/nRF_API.c \
  $(CORE)openbeacon/nRF24L01/nRF_CMD.c \
  $(CORE)os/boot/Cstartup_SAM7.c \
  $(CORE)os/core/ARM7_AT91SAM7/lib_AT91SAM7.c \
  $(CORE)os/core/list.c \
  $(CORE)os/core/queue.c \
  $(CORE)os/core/tasks.c \
  $(CORE)os/core/port.c \
  $(CORE)os/core/portISR.c \
  $(CORE)os/core/MemMang/heap_2.c \
  $(CORE)os/usb/USB-CDC.c \
  $(CORE)os/usb/USBIsr.c

#
# Define all object files.
#
ARM_OBJ = $(ARM_SRC:.c=.o)

$(TARGET).bin : $(TARGET).elf
	$(OBJCOPY) $(TARGET).elf -O binary $(TARGET).bin

$(TARGET).hex : $(TARGET).elf
	$(OBJCOPY) $(TARGET).elf -O ihex $(TARGET).hex

$(TARGET).elf : $(ARM_OBJ) $(CRT0) $(BOOTLOADER) Makefile config/FreeRTOSConfig.h
	$(CC) $(CFLAGS) $(ARM_OBJ) $(BOOTLOADER) -nostartfiles $(CRT0) $(LINKER_FLAGS)
	$(OBJDUMP) -d $(TARGET).elf > $(TARGET).asm

$(ARM_OBJ) : %.o : %.c $(LDSCRIPT) Makefile config/FreeRTOSConfig.h
	$(CC) -c $(CFLAGS) $< -o $@

flash : $(TARGET).bin
	../at91flash/at91flash $(TARGET).bin

clean : app_clean
	find $(CORE) -name '*.o' -exec rm \{\} \;
	rm -f $(TARGET).bin $(TARGET).elf $(TARGET).map $(TARGET).asm
